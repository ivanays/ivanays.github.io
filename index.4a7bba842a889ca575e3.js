/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 5662:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  O: () => (/* reexport */ ModalClose)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(6942);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/hooks/index.js + 11 modules
var hooks = __webpack_require__(7597);
// EXTERNAL MODULE: ./src/func/func_query_number/funcQueryNumber.js
var funcQueryNumber = __webpack_require__(9868);
;// ./src/images/popup-close.svg
const popup_close_namespaceObject = __webpack_require__.p + "icons/popup-close.406a97666414a1f83bce.svg";
// EXTERNAL MODULE: ./src/components/ui/index.js + 16 modules
var ui = __webpack_require__(8690);
;// ./src/components/modals/modal/modal_close/ModalClose.jsx









var ModalClose = function ModalClose(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var popupCloseClass = classnames_default()("popup".concat(queryNumber, "__close"));
  var popupLinkClass = classnames_default()("popup".concat(queryNumber, "__link"));
  var popupLinkCloseClass = classnames_default()("popup".concat(queryNumber, "__link-close"));
  var popupIconClass = classnames_default()("popup".concat(queryNumber, "__icon"));
  var popupIconCloseClass = classnames_default()("popup".concat(queryNumber, "__icon-close"));
  (0,hooks/* useBodyScrollLock */.yJ)();
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    data.push(JSON.parse(JSON.stringify(propsAll.data[0])));
    data.push(JSON.parse(JSON.stringify(propsAll.data[1])));
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: popupCloseClass
  }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
    key: "uiButtonModalClose0",
    id: propsData(props)[0].id,
    className: "".concat(popupLinkClass, " ").concat(popupLinkCloseClass),
    onClick: function onClick() {
      props.handleClose();
    }
  }, /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, {
    key: "uiImgModalClose0",
    id: propsData(props)[1].id,
    className: "".concat(popupIconClass, " ").concat(popupIconCloseClass),
    alt: propsData(props)[1].alt,
    src: popup_close_namespaceObject
  }))));
};
;// ./src/components/modals/modal/modal_close/index.js


/***/ }),

/***/ 2613:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  an: () => (/* reexport */ ModalContentA),
  Tm: () => (/* reexport */ ModalContentB),
  _0: () => (/* reexport */ ModalContentC),
  fD: () => (/* reexport */ ModalContentD),
  ah: () => (/* reexport */ ModalContentE),
  hV: () => (/* reexport */ ModalContentF),
  _U: () => (/* reexport */ ModalContentG),
  TB: () => (/* reexport */ ModalContentH)
});

// UNUSED EXPORTS: ModalContentBTbody

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/images/fr-lifting.png
const fr_lifting_namespaceObject = __webpack_require__.p + "images/fr-lifting.bd4fbd3695fb5bc98a2a.png";
// EXTERNAL MODULE: ./src/hooks/index.js + 11 modules
var hooks = __webpack_require__(7597);
// EXTERNAL MODULE: ./src/func/func_query_number/funcQueryNumber.js
var funcQueryNumber = __webpack_require__(9868);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(6942);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB0.jsx







var ModalContentAB0 = function ModalContentAB0(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041A\u0430\u0432\u0438\u0442\u0430\u0446\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB1.jsx







var ModalContentAB1 = function ModalContentAB1(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u0420\u0443\u0447\u043D\u043E\u0439 \u043C\u0430\u0441\u0441\u0430\u0436"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB2.jsx







var ModalContentAB2 = function ModalContentAB2(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041A\u0440\u0438\u043E\u043B\u0438\u043F\u043E\u043B\u0438\u0437"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB3.jsx







var ModalContentAB3 = function ModalContentAB3(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u0413\u043E\u0440\u044F\u0447\u0438\u0439 \u0432\u0430\u043A\u0443\u0443\u043C + \u0432\u0438\u0431\u0440\u043E\u043C\u0430\u0441\u0441\u0430\u0436"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB4.jsx







var ModalContentAB4 = function ModalContentAB4(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041F\u0440\u043E\u043A\u0430\u0447\u043A\u0430 \u043C\u044B\u0448\u0446"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB5.jsx







var ModalContentAB5 = function ModalContentAB5(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0446\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-b/ModalContentAB6.jsx







var ModalContentAB6 = function ModalContentAB6(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
// EXTERNAL MODULE: ./src/func/func_query_media/funcQueryMedia.js
var funcQueryMedia = __webpack_require__(2622);
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF0.jsx






var ModalContentAF0 = function ModalContentAF0(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = '';
  media1728 === true ? queryNumber = '' : media1300 === true ? queryNumber = '--1300' : media1133 === true ? queryNumber = '--1133' : media900 === true ? queryNumber = '--900' : media744 === true ? queryNumber = '--744' : media744l === true ? queryNumber = '--744l' : media600 === true ? queryNumber = '--600' : media600l === true ? queryNumber = '--600l' : media375 === true ? queryNumber = '--375' : media275 === true ? queryNumber = '--275' : null;
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041F\u0435\u0440\u043C\u0430\u043D\u0435\u043D\u0442 \u0433\u0443\u0431"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF1.jsx







var ModalContentAF1 = function ModalContentAF1(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "RF - \u043B\u0438\u0444\u0442\u0438\u043D\u0433"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF2.jsx







var ModalContentAF2 = function ModalContentAF2(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0435\u0437\u043E\u043A\u043E\u043A\u0442\u0435\u043B\u044C"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF3.jsx







var ModalContentAF3 = function ModalContentAF3(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041A\u0440\u0438\u043E\u0442\u0435\u0440\u0430\u043F\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF4.jsx







var ModalContentAF4 = function ModalContentAF4(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "LED - \u043C\u0430\u0441\u043A\u0430"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF5.jsx







var ModalContentAF5 = function ModalContentAF5(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0438\u043A\u0440\u043E\u0442\u043E\u043A\u0438"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF6.jsx







var ModalContentAF6 = function ModalContentAF6(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041F\u0438\u043B\u0438\u043D\u0433"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF7.jsx







var ModalContentAF7 = function ModalContentAF7(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0430\u0441\u0441\u0430\u0436 \u043B\u0438\u0446\u0430 + \u043C\u0430\u0441\u043A\u0438"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF8.jsx







var ModalContentAF8 = function ModalContentAF8(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF9.jsx







var ModalContentAF9 = function ModalContentAF9(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "SPA - \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF10.jsx







var ModalContentAF10 = function ModalContentAF10(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u0427\u0438\u0441\u0442\u043A\u0430 \u043B\u0438\u0446\u0430"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF11.jsx







var ModalContentAF11 = function ModalContentAF11(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u0424\u043E\u043D\u043E\u0444\u043E\u0440\u0435\u0437"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF12.jsx







var ModalContentAF12 = function ModalContentAF12(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041A\u0430\u0440\u0431\u043E\u043A\u0441\u043E\u0442\u0435\u0440\u0430\u043F\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/modal_content-a-f/ModalContentAF13.jsx







var ModalContentAF13 = function ModalContentAF13(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var articleClass = classnames_default()("article".concat(queryNumber));
  var articleBodyClass = classnames_default()("article".concat(queryNumber, "__body"));
  var articleTitleClass = classnames_default()("article".concat(queryNumber, "__title"));
  var articleTitleSubClass = classnames_default()("article".concat(queryNumber, "__title-sub"));
  var articleTitleProcedureClass = classnames_default()("article".concat(queryNumber, "__title-procedure"));
  var articleContentClass = classnames_default()("article".concat(queryNumber, "__content"));
  var articleBlockClass = classnames_default()("article".concat(queryNumber, "__block"));
  var articleProcedureClass = classnames_default()("article".concat(queryNumber, "__procedure"));
  var articlePClass = classnames_default()("article".concat(queryNumber, "__p"));
  var articleSpanClass = classnames_default()("article".concat(queryNumber, "__span"));
  var articleSpanMachineClass = classnames_default()("article".concat(queryNumber, "__span-machine"));
  var articleImageClass = classnames_default()("article".concat(queryNumber, "__image"));
  var articleIndicationsClass = classnames_default()("article".concat(queryNumber, "__indications"));
  var articleItemsClass = classnames_default()("article".concat(queryNumber, "__items"));
  var articleItemClass = classnames_default()("article".concat(queryNumber, "__item"));
  var articlePItemClass = classnames_default()("article".concat(queryNumber, "__p-item"));
  var articleContraindicationsClass = classnames_default()("article".concat(queryNumber, "__contraindications"));
  var articlePriceClass = classnames_default()("article".concat(queryNumber, "__price"));
  var articleItemPriceClass = classnames_default()("article".concat(queryNumber, "__item-price"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("article", {
    id: "article-procedure",
    className: articleClass
  }, /*#__PURE__*/react.createElement("div", {
    className: articleBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "article-title",
    className: articleTitleClass
  }, "\u041C\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0446\u0438\u044F \u043B\u0438\u0446\u0430"), /*#__PURE__*/react.createElement("div", {
    className: articleContentClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "procedure",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass, " ").concat(articleTitleProcedureClass)
  }, "\u041C\u0438\u043A\u0440\u043E\u0438\u0433\u043E\u043B\u044C\u0447\u0430\u0442\u044B\u0439 RF \u043B\u0438\u0444\u0442\u0438\u043D"), /*#__PURE__*/react.createElement("div", {
    id: "procedure-content",
    className: articleProcedureClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "procedure-p",
    className: articlePClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(articleSpanClass, " ").concat(articleSpanMachineClass)
  }, "EMS (Electric Mio Stimulation)"), "\u0414\u0430\u043D\u043D\u044B\u0439 \u0430\u043F\u043F\u0430\u0440\u0430\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0431\u043E\u043B\u0435\u0435 \u0441\u0442\u0440\u043E\u0439\u043D\u043E\u0435 \u0442\u0435\u043B\u043E, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u043D\u0443\u0442\u044B\u043C, \u043F\u0440\u043E\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0436\u0438\u0440\u043E\u0432\u044B\u0435 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u044F , \u043E\u0434\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E \u043F\u0440\u043E\u043A\u0430\u0447\u0438\u0432\u0430\u044F \u043C\u044B\u0448\u0446\u044B, \u0441\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0435\u0441\u044F \u043F\u043E\u0434 \u043D\u0438\u043C\u0438."))), /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "procedure-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }), /*#__PURE__*/react.createElement("div", {
    id: "image-content",
    className: articleImageClass
  }, /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    id: "image-procedre",
    className: articleImageClass
  }))), /*#__PURE__*/react.createElement("div", {
    id: "indications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "indications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432\u0430"), /*#__PURE__*/react.createElement("div", {
    id: "indications-content",
    className: articleIndicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "indications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "indications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p1",
    className: "article__p article__p-item"
  }, "\u0443\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u044B\u0448\u0446")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0438\u0437\u043B\u0438\u0448\u043A\u043E\u0432 \u0436\u0438\u0440\u043E\u0432\u044B\u0445 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0432 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0436\u0438\u0432\u043E\u0442\u0430,\u044F\u0433\u043E\u0434\u0438\u0446,\u0440\u0443\u043A \u0438 \u043D\u043E\u0433")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u0435 \u043C\u044B\u0448\u0446 \u0436\u0438\u0432\u043E\u0442\u0430 \u043F\u043E\u0441\u043B\u0435 \u0440\u043E\u0434\u043E\u0432")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0430\u0431\u0438\u043B\u0438\u0442\u0430\u0446\u0438\u0438")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item6",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p6",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B 30 \u043C\u0438\u043D\u0443\u0442")), /*#__PURE__*/react.createElement("li", {
    id: "indications-item7",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "indications-p7",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0443\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u043F\u0435\u0440\u0432\u043E\u0439 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B"))))), /*#__PURE__*/react.createElement("div", {
    id: "contraindications",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "contraindications-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    id: "contraindications-content",
    className: articleContraindicationsClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "contraindications-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item1",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043A\u0430\u0440\u0434\u0438\u043E\u0441\u0442\u0438\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item2",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u044B\u0435 \u0438 \u043C\u0435\u0442\u0430\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u043C\u043F\u043B\u0430\u043D\u0442\u044B")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item3",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043B\u0451\u0433\u043E\u0447\u043D\u0430\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item4",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p4",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u0431\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0441\u0442\u044C")), /*#__PURE__*/react.createElement("li", {
    id: "contraindications-item5",
    className: articleItemClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "contraindications-p5",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "\u043D\u0435\u0434\u0430\u0432\u043D\u043E \u043F\u0440\u043E\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0435 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438"))))), /*#__PURE__*/react.createElement("div", {
    id: "price",
    className: articleBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "price-title",
    className: "".concat(articleTitleClass, " ").concat(articleTitleSubClass)
  }, "\u041F\u0440\u0430\u0439\u0441"), /*#__PURE__*/react.createElement("div", {
    id: "price-content",
    className: articlePriceClass
  }, /*#__PURE__*/react.createElement("ul", {
    id: "price-items",
    className: articleItemsClass
  }, /*#__PURE__*/react.createElement("li", {
    id: "price-item1",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p1",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "1 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "price-p11",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "2 500")), /*#__PURE__*/react.createElement("li", {
    id: "price-item2",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p2",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "5 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p21",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 000")), /*#__PURE__*/react.createElement("li", {
    id: "price-item3",
    className: "".concat(articleItemClass, " ").concat(articleItemPriceClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "price-p3",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "10 \u041F\u0440\u043E\u0446\u0435\u0434\u0443\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "price-p31",
    className: "".concat(articlePClass, " ").concat(articlePItemClass)
  }, "22 000")))))))));
};
// EXTERNAL MODULE: ./src/func/func_phone/funcHrefPhone.js
var funcHrefPhone = __webpack_require__(7008);
// EXTERNAL MODULE: ./src/func/func_phone/funcArrPhone.js
var funcArrPhone = __webpack_require__(8414);
// EXTERNAL MODULE: ./src/components/ui/index.js + 16 modules
var ui = __webpack_require__(8690);
;// ./src/components/modals/modal/modal_content/modal_content-a/ModalContentA.jsx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }































var ModalContentA = function ModalContentA(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentArticleClass = classnames_default()("content".concat(queryNumber, "__article"));
  var contentWranningClass = classnames_default()("content".concat(queryNumber, "__wranning"));
  var contentWranningArticleClass = classnames_default()("content".concat(queryNumber, "__wranning-home"));
  var contentInnerClass = classnames_default()("content".concat(queryNumber, "__inner"));
  var contentInnerArticleClass = classnames_default()("content".concat(queryNumber, "__inner-home"));
  var contentPClass = classnames_default()("content".concat(queryNumber, "__p"));
  var contentPArticleClass = classnames_default()("content".concat(queryNumber, "__p-home"));
  var contentPhoneClass = classnames_default()("content".concat(queryNumber, "__phone"));
  var contentPhoneArticleClass = classnames_default()("content".concat(queryNumber, "__phone-home"));
  var contentNumberClass = classnames_default()("content".concat(queryNumber, "__number"));
  var contentNumberArticleClass = classnames_default()("content".concat(queryNumber, "__number-home"));
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0].children += " ".concat(value) : data[0].children += "".concat(value);
    });
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentArticleClass
  }, props.sliderType === 'b' && props.sliderNumber === 0 ? /*#__PURE__*/react.createElement(ModalContentAB0, null) : null, props.sliderType === 'b' && props.sliderNumber === 1 ? /*#__PURE__*/react.createElement(ModalContentAB1, null) : null, props.sliderType === 'b' && props.sliderNumber === 2 ? /*#__PURE__*/react.createElement(ModalContentAB2, null) : null, props.sliderType === 'b' && props.sliderNumber === 3 ? /*#__PURE__*/react.createElement(ModalContentAB3, null) : null, props.sliderType === 'b' && props.sliderNumber === 4 ? /*#__PURE__*/react.createElement(ModalContentAB4, null) : null, props.sliderType === 'b' && props.sliderNumber === 5 ? /*#__PURE__*/react.createElement(ModalContentAB5, null) : null, props.sliderType === 'b' && props.sliderNumber === 6 ? /*#__PURE__*/react.createElement(ModalContentAB6, null) : null, props.sliderType === 'f' && props.sliderNumber === 0 ? /*#__PURE__*/react.createElement(ModalContentAF0, null) : null, props.sliderType === 'f' && props.sliderNumber === 1 ? /*#__PURE__*/react.createElement(ModalContentAF1, null) : null, props.sliderType === 'f' && props.sliderNumber === 2 ? /*#__PURE__*/react.createElement(ModalContentAF2, null) : null, props.sliderType === 'f' && props.sliderNumber === 3 ? /*#__PURE__*/react.createElement(ModalContentAF3, null) : null, props.sliderType === 'f' && props.sliderNumber === 4 ? /*#__PURE__*/react.createElement(ModalContentAF4, null) : null, props.sliderType === 'f' && props.sliderNumber === 5 ? /*#__PURE__*/react.createElement(ModalContentAF5, null) : null, props.sliderType === 'f' && props.sliderNumber === 6 ? /*#__PURE__*/react.createElement(ModalContentAF6, null) : null, props.sliderType === 'f' && props.sliderNumber === 7 ? /*#__PURE__*/react.createElement(ModalContentAF7, null) : null, props.sliderType === 'f' && props.sliderNumber === 8 ? /*#__PURE__*/react.createElement(ModalContentAF8, null) : null, props.sliderType === 'f' && props.sliderNumber === 9 ? /*#__PURE__*/react.createElement(ModalContentAF9, null) : null, props.sliderType === 'f' && props.sliderNumber === 10 ? /*#__PURE__*/react.createElement(ModalContentAF10, null) : null, props.sliderType === 'f' && props.sliderNumber === 11 ? /*#__PURE__*/react.createElement(ModalContentAF11, null) : null, props.sliderType === 'f' && props.sliderNumber === 12 ? /*#__PURE__*/react.createElement(ModalContentAF12, null) : null, props.sliderType === 'f' && props.sliderNumber === 13 ? /*#__PURE__*/react.createElement(ModalContentAF13, null) : null, /*#__PURE__*/react.createElement("div", {
    id: "content-article",
    className: "".concat(contentWranningClass, " ").concat(contentWranningArticleClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: media275 || media375 ? contentInnerArticleClass : contentInnerClass
  }, media275 ? null : /*#__PURE__*/react.createElement("p", {
    id: "p-article",
    className: "".concat(contentPClass, " ").concat(contentPArticleClass)
  }, "\u0423\u0442\u043E\u0447\u043D\u044F\u0439\u0442\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043F\u043E \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0443"), /*#__PURE__*/react.createElement("phone", {
    id: "phone-article",
    className: "".concat(contentPhoneClass, " ").concat(contentPhoneArticleClass)
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, _extends({
      key: "uiLinkPhoneProcedures".concat(i)
    }, prop, {
      className: "".concat(contentNumberClass, " ").concat(contentNumberArticleClass)
    }));
  }))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-a/index.js

// EXTERNAL MODULE: ./src/contexts/index.js
var contexts = __webpack_require__(1469);
;// ./src/components/modals/modal/modal_content/modal_content-b/modal_content-b_tbody/ModalContentBTbody.jsx
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }







var ModalContentBTbody = function ModalContentBTbody(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var tableBodyClass = classnames_default()("table".concat(queryNumber, "__body"));
  var tableBodyWindowsClass = classnames_default()("table".concat(queryNumber, "__body-windows"));
  var tableTrClass = classnames_default()("table".concat(queryNumber, "__tr"));
  var tableTrBodyClass = classnames_default()("table".concat(queryNumber, "__tr-body"));
  var tableThClass = classnames_default()("table".concat(queryNumber, "__th"));
  var tableThBodyClass = classnames_default()("table".concat(queryNumber, "__th-body"));
  var tableBorderBottomClass = classnames_default()("table".concat(queryNumber, "__border-bottom"));
  var tableThFirstClass = classnames_default()("table".concat(queryNumber, "__th-first"));
  var tableTdClass = classnames_default()("table".concat(queryNumber, "__td"));
  var tableTdBodyClass = classnames_default()("table".concat(queryNumber, "__td-body"));
  var tableSubBodyClass = classnames_default()("table".concat(queryNumber, "__sub-body"));
  var tableSupBodyClass = classnames_default()("table".concat(queryNumber, "__sup-body"));
  var tableThLastClass = classnames_default()("table".concat(queryNumber, "__th-last"));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    modalOpened = _useContext.modalOpened;
  var tbodyRef = (0,react.useRef)(null);
  var tbodyTrRef = (0,react.useRef)(null);
  var tbodyTrThLastRef = (0,react.useRef)(null);
  var _useState = (0,react.useState)(40),
    _useState2 = _slicedToArray(_useState, 2),
    width = _useState2[0],
    setWidth = _useState2[1];
  (0,react.useLayoutEffect)(function () {
    var widthScroll = 0;
    var widthThLast = 0;
    widthScroll = tbodyRef.current.offsetWidth - tbodyTrRef.current.offsetWidth;
    widthThLast = tbodyTrThLastRef.current.offsetWidth - widthScroll;
    setWidth(widthThLast);
  }, []);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("tbody", {
    id: "tbody-windows",
    className: media375 ? tableBodyWindowsClass : tableBodyClass,
    ref: tbodyRef
  }, /*#__PURE__*/react.createElement("tr", {
    id: "tbody-windows-tr",
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass),
    ref: tbodyTrRef
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "|"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "13", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSubBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "9", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "30")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    },
    ref: tbodyTrThLastRef
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableBorderBottomClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass, " ").concat(tableBorderBottomClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass, " ").concat(tableBorderBottomClass),
    style: {
      width: width
    }
  })), /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrBodyClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThBodyClass, " ").concat(tableThFirstClass)
  }, "||"), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }, "15", /*#__PURE__*/react.createElement("sup", {
    className: "".concat(tableSupBodyClass)
  }, "00")), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("td", {
    className: "".concat(tableTdClass, " ").concat(tableTdBodyClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThLastClass),
    style: {
      width: width
    }
  }))));
};
;// ./src/components/modals/modal/modal_content/modal_content-b/modal_content-b_tbody/index.js

;// ./src/components/modals/modal/modal_content/modal_content-b/ModalContentB.jsx
function ModalContentB_extends() { return ModalContentB_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, ModalContentB_extends.apply(null, arguments); }











var ModalContentB = function ModalContentB(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentTableClass = classnames_default()("content".concat(queryNumber, "__table"));
  var tableClass = classnames_default()("table".concat(queryNumber));
  var tableCaptionClass = classnames_default()("table".concat(queryNumber, "__caption"));
  var tableCaptionWindowsClass = classnames_default()("table".concat(queryNumber, "__caption-windows"));
  var tableHeaderClass = classnames_default()("table".concat(queryNumber, "__header"));
  var tableHeaderWindowsClass = classnames_default()("table".concat(queryNumber, "__header-windows"));
  var tableTrClass = classnames_default()("table".concat(queryNumber, "__tr"));
  var tableTrHeaderClass = classnames_default()("table".concat(queryNumber, "__tr-header"));
  var tableThClass = classnames_default()("table".concat(queryNumber, "__th"));
  var tableThCornerClass = classnames_default()("table".concat(queryNumber, "__th-corner"));
  var tableThTopleftClass = classnames_default()("table".concat(queryNumber, "__th-topleft"));
  var tableThHeaderClass = classnames_default()("table".concat(queryNumber, "__th-header"));
  var tableThStickyClass = classnames_default()("table".concat(queryNumber, "__th-sticky"));
  var tableThToprightClass = classnames_default()("table".concat(queryNumber, "__th-topright"));
  var tableFooterClass = classnames_default()("table".concat(queryNumber, "__footer"));
  var tableFooterWindowsClass = classnames_default()("table".concat(queryNumber, "__footer-windows"));
  var tableTrFooterClass = classnames_default()("table".concat(queryNumber, "__tr-footer"));
  var tableThBottomleftClass = classnames_default()("table".concat(queryNumber, "__th-bottomleft"));
  var tableThFooterClass = classnames_default()("table".concat(queryNumber, "__th-footer"));
  var tableThBottomrightClass = classnames_default()("table".concat(queryNumber, "__th-bottomright"));
  var contentWranningClass = classnames_default()("content".concat(queryNumber, "__wranning"));
  var contentWranningWindowsClass = classnames_default()("content".concat(queryNumber, "__wranning-windows"));
  var contentInnerClass = classnames_default()("content".concat(queryNumber, "__inner"));
  var contentInnerWindowsClass = classnames_default()("content".concat(queryNumber, "__inner-windows"));
  var contentPClass = classnames_default()("content".concat(queryNumber, "__p"));
  var contentPWindowsClass = classnames_default()("content".concat(queryNumber, "__p-windows"));
  var contentPhoneClass = classnames_default()("content".concat(queryNumber, "__phone"));
  var contentPhoneWindowsClass = classnames_default()("content".concat(queryNumber, "__phone-windows"));
  var contentNumberClass = classnames_default()("content".concat(queryNumber, "__number"));
  var contentNumberWindowsClass = classnames_default()("content".concat(queryNumber, "__number-windows"));
  var tableScrollXClass = classnames_default()("table".concat(queryNumber, "__scroll-x"));
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0].children += " ".concat(value) : data[0].children += "".concat(value);
    });
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentTableClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "caption-windows",
    className: "".concat(tableCaptionClass, " ").concat(tableCaptionWindowsClass)
  }, "\u0421\u0432\u043E\u0431\u043E\u0434\u043D\u044B\u0435 \u043E\u043A\u043E\u0448\u043A\u0438"), /*#__PURE__*/react.createElement("div", {
    className: tableScrollXClass
  }, /*#__PURE__*/react.createElement("table", {
    id: "table-windows",
    className: tableClass
  }, /*#__PURE__*/react.createElement("thead", {
    className: "".concat(tableHeaderClass, " ").concat(tableHeaderWindowsClass)
  }, /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrHeaderClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThCornerClass, " ").concat(tableThTopleftClass, " ").concat(tableThStickyClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u041F\u041D"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u0412\u0422"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u0421\u0420"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u0427\u0422"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u041F\u0422"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u0421\u0411"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThHeaderClass, " ").concat(tableThStickyClass)
  }, "\u0412\u0421"), /*#__PURE__*/react.createElement("th", {
    id: "th-topright",
    className: "".concat(tableThClass, " ").concat(tableThCornerClass, " ").concat(tableThToprightClass, " ").concat(tableThStickyClass)
  }))), /*#__PURE__*/react.createElement(ModalContentBTbody, null), /*#__PURE__*/react.createElement("tfoot", {
    className: "".concat(tableFooterClass, " ").concat(tableFooterWindowsClass)
  }, /*#__PURE__*/react.createElement("tr", {
    className: "".concat(tableTrClass, " ").concat(tableTrFooterClass)
  }, /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThCornerClass, " ").concat(tableThBottomleftClass, " ").concat(tableThStickyClass)
  }), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "12.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "13.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "14.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "15.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "16.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "17.02"), /*#__PURE__*/react.createElement("th", {
    className: "".concat(tableThClass, " ").concat(tableThFooterClass, " ").concat(tableThStickyClass)
  }, "18.02"), /*#__PURE__*/react.createElement("th", {
    id: "th-bottomright",
    className: "".concat(tableThClass, " ").concat(tableThCornerClass, " ").concat(tableThBottomrightClass, " ").concat(tableThStickyClass)
  }))))), /*#__PURE__*/react.createElement("div", {
    id: "content-windows",
    className: "".concat(contentWranningClass, " ").concat(contentWranningWindowsClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: media275 || media375 || media600 || media600l || media744l ? contentInnerWindowsClass : contentInnerClass
  }, media275 ? null : /*#__PURE__*/react.createElement("p", {
    id: "p-windows",
    className: "".concat(contentPClass, " ").concat(contentPWindowsClass)
  }, "\u0423\u0442\u043E\u0447\u043D\u044F\u0439\u0442\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043F\u043E \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0443"), /*#__PURE__*/react.createElement("phone", {
    id: "phone-windows",
    className: "".concat(contentPhoneClass, " ").concat(contentPhoneWindowsClass)
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, ModalContentB_extends({
      key: "uiLinkPhoneWindows".concat(i)
    }, prop, {
      className: "".concat(contentNumberClass, " ").concat(contentNumberWindowsClass)
    }));
  }))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-b/index.js


;// ./src/images/icon-popup-c.svg
const icon_popup_c_namespaceObject = __webpack_require__.p + "icons/icon-popup-c.0cbc8c125a4c7a10fc4b.svg";
;// ./src/components/modals/modal/modal_content/modal_content-c/ModalContentC.jsx










var ModalContentC = function ModalContentC(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentPhoneClass = classnames_default()("content".concat(queryNumber, "__phone"));
  var phoneClass = classnames_default()("phone".concat(queryNumber));
  var phoneInnerClass = classnames_default()("phone".concat(queryNumber, "__inner"));
  var phoneIconClass = classnames_default()("phone".concat(queryNumber, "__icon"));
  var phoneItemsClass = classnames_default()("phone".concat(queryNumber, "__items"));
  var phoneNumberClass = classnames_default()("phone".concat(queryNumber, "__number"));
  var phoneImgClass = classnames_default()("phone".concat(queryNumber, "__img"));
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0][0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0][0].children += " ".concat(value) : data[0][0].children += "".concat(value);
    });
    return data[0];
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentPhoneClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "phone",
    className: phoneClass
  }, /*#__PURE__*/react.createElement("div", {
    className: phoneInnerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: phoneIconClass
  }, /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, {
    key: "uiImgModalContentC0",
    id: propsData(props)[1].id,
    className: phoneImgClass
    // className={propsData(props)[1].className}
    ,
    alt: propsData(props)[1].alt,
    src: icon_popup_c_namespaceObject
  })), /*#__PURE__*/react.createElement("phone", {
    className: phoneItemsClass
  }, /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, {
    key: "uiLinkModalContentC0",
    id: propsData(props)[0].id,
    className: phoneNumberClass
    // className={propsData(props)[0].className}
    ,
    href: propsData(props)[0].href
  }, propsData(props)[0].children))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-c/index.js

;// ./src/images/icon-popup-d.svg
const icon_popup_d_namespaceObject = __webpack_require__.p + "icons/icon-popup-d.2b450a3fab3bf372c7a4.svg";
;// ./src/components/modals/modal/modal_content/modal_content-d/ModalContentD.jsx







var ModalContentD = function ModalContentD(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentMessageClass = classnames_default()("content".concat(queryNumber, "__message"));
  var messageClass = classnames_default()("message".concat(queryNumber));
  var messageInnerClass = classnames_default()("message".concat(queryNumber, "__inner"));
  var messageIconClass = classnames_default()("message".concat(queryNumber, "__icon"));
  var messageImgClass = classnames_default()("message".concat(queryNumber, "__img"));
  var messageContentClass = classnames_default()("message".concat(queryNumber, "__content"));
  var messagePClass = classnames_default()("message".concat(queryNumber, "__p"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentMessageClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "message",
    className: messageClass
  }, /*#__PURE__*/react.createElement("div", {
    className: messageInnerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: messageIconClass
  }, /*#__PURE__*/react.createElement("img", {
    src: icon_popup_d_namespaceObject,
    alt: "",
    id: "message-img",
    className: messageImgClass
  })), /*#__PURE__*/react.createElement("div", {
    className: messageContentClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "message-p",
    className: messagePClass
  }, "\u041D\u0435 \u043E\u0442\u043A\u043B\u0430\u0434\u044B\u0432\u0430\u0439 \u043D\u0430 \u0437\u0430\u0432\u0442\u0440\u0430 \u0442\u043E, \u0447\u0442\u043E \u043C\u043E\u0436\u043D\u043E \u043D\u0430\u0447\u0430\u0442\u044C \u0441\u0435\u0433\u043E\u0434\u043D\u044F."))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-d/index.js

// EXTERNAL MODULE: ./src/images/certificate1.jpg
var certificate1 = __webpack_require__(4218);
// EXTERNAL MODULE: ./src/images/certificate2.jpg
var certificate2 = __webpack_require__(4709);
// EXTERNAL MODULE: ./src/images/certificate3.jpg
var certificate3 = __webpack_require__(3528);
// EXTERNAL MODULE: ./src/images/certificate4.jpg
var certificate4 = __webpack_require__(7131);
// EXTERNAL MODULE: ./src/images/certificate5.jpg
var certificate5 = __webpack_require__(1294);
// EXTERNAL MODULE: ./src/images/certificate6.jpg
var certificate6 = __webpack_require__(9961);
// EXTERNAL MODULE: ./src/images/certificate7.jpg
var certificate7 = __webpack_require__(5612);
// EXTERNAL MODULE: ./src/images/certificate8.jpg
var certificate8 = __webpack_require__(9711);
// EXTERNAL MODULE: ./src/images/certificate9.jpg
var certificate9 = __webpack_require__(7042);
// EXTERNAL MODULE: ./src/images/certificate10.jpg
var certificate10 = __webpack_require__(4728);
// EXTERNAL MODULE: ./src/images/certificate11.jpg
var certificate11 = __webpack_require__(8693);
// EXTERNAL MODULE: ./src/images/certificate12.jpg
var certificate12 = __webpack_require__(5114);
// EXTERNAL MODULE: ./src/images/certificate13.jpg
var certificate13 = __webpack_require__(3399);
;// ./src/components/modals/modal/modal_content/modal_content-e/ModalContentE.jsx



















var ModalContentE = function ModalContentE(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentImageClass = classnames_default()("content".concat(queryNumber, "__image"));
  var imageClass = classnames_default()("image".concat(queryNumber));
  var imageContentClass = classnames_default()("image".concat(queryNumber, "__content"));
  var imageImgClass = classnames_default()("image".concat(queryNumber, "__img"));
  var image;
  switch (props.number) {
    case 1:
      image = certificate1;
      break;
    case 2:
      image = certificate2;
      break;
    case 3:
      image = certificate3;
      break;
    case 4:
      image = certificate4;
      break;
    case 5:
      image = certificate5;
      break;
    case 6:
      image = certificate6;
      break;
    case 7:
      image = certificate7;
      break;
    case 8:
      image = certificate8;
      break;
    case 9:
      image = certificate9;
      break;
    case 10:
      image = certificate10;
      break;
    case 11:
      image = certificate11;
      break;
    case 12:
      image = certificate12;
      break;
    case 13:
      image = certificate13;
      break;
    default:
      console.log("Нет представление этого числа в виде строки");
  }
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentImageClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "image",
    className: imageClass
  }, /*#__PURE__*/react.createElement("div", {
    className: imageContentClass
  }, /*#__PURE__*/react.createElement("img", {
    src: image,
    alt: "cert",
    id: "image-img",
    className: imageImgClass
  })))));
};
;// ./src/components/modals/modal/modal_content/modal_content-e/index.js

;// ./src/components/modals/modal/modal_content/modal_content-f/ModalContentF.jsx
function ModalContentF_extends() { return ModalContentF_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, ModalContentF_extends.apply(null, arguments); }
function ModalContentF_slicedToArray(r, e) { return ModalContentF_arrayWithHoles(r) || ModalContentF_iterableToArrayLimit(r, e) || ModalContentF_unsupportedIterableToArray(r, e) || ModalContentF_nonIterableRest(); }
function ModalContentF_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function ModalContentF_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return ModalContentF_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? ModalContentF_arrayLikeToArray(r, a) : void 0; } }
function ModalContentF_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ModalContentF_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function ModalContentF_arrayWithHoles(r) { if (Array.isArray(r)) return r; }









var ModalContentF = function ModalContentF(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentStockClass = classnames_default()("content".concat(queryNumber, "__stock"));
  var stockClass = classnames_default()("stock".concat(queryNumber));
  var stockTitleClass = classnames_default()("stock".concat(queryNumber, "__title"));
  var stockSliderClass = classnames_default()("stock".concat(queryNumber, "__slider"));
  var sliderStockClass = classnames_default()("slider-stock".concat(queryNumber));
  var sliderItemsClass = classnames_default()("slider".concat(queryNumber, "__items"));
  var sliderItemsStockClass = classnames_default()("slider".concat(queryNumber, "__items-stock"));
  var sliderItemClass = classnames_default()("slider".concat(queryNumber, "__item"));
  var sliderItemStockClass = classnames_default()("slider".concat(queryNumber, "__item-stock"));
  var sliderSlideStockClass = classnames_default()("slider".concat(queryNumber, "__slide-stock"));
  var slideClass = classnames_default()("slide".concat(queryNumber));
  var slideStockClass = classnames_default()("slide-stock".concat(queryNumber));
  var slideContentClass = classnames_default()("slide".concat(queryNumber, "__content"));
  var slideContentStockClass = classnames_default()("slide".concat(queryNumber, "__content-stock"));
  var slideStock1Class = classnames_default()("slide".concat(queryNumber, "__stock"));
  var slideValueClass = classnames_default()("slide".concat(queryNumber, "__value"));
  var slideSpanClass = classnames_default()("slide".concat(queryNumber, "__span"));
  var slideSpanNumClass = classnames_default()("slide".concat(queryNumber, "__span-num"));
  var slideSpanSymbolClass = classnames_default()("slide".concat(queryNumber, "__span-symbol"));
  var contentWranningClass = classnames_default()("content".concat(queryNumber, "__wranning"));
  var contentWranningStockClass = classnames_default()("content".concat(queryNumber, "__wranning-stock"));
  var contentInnerClass = classnames_default()("content".concat(queryNumber, "__inner"));
  var contentInnerStockClass = classnames_default()("content".concat(queryNumber, "__inner-stock"));
  var contentPClass = classnames_default()("content".concat(queryNumber, "__p"));
  var contentPStockClass = classnames_default()("content".concat(queryNumber, "__p-stock"));
  var contentPhoneClass = classnames_default()("content".concat(queryNumber, "__phone"));
  var contentPhoneStockClass = classnames_default()("content".concat(queryNumber, "__phone-stock"));
  var contentNumberClass = classnames_default()("content".concat(queryNumber, "__number"));
  var contentNumberStockClass = classnames_default()("content".concat(queryNumber, "__number-stock"));
  var _useState = (0,react.useState)(0),
    _useState2 = ModalContentF_slicedToArray(_useState, 2),
    index = _useState2[0],
    setIndex = _useState2[1];

  // const slides = document.querySelectorAll('.slider__slide-stock');

  var slideStock, slideStockActive;
  media1728 === true ? slideStock = 'slider--1728__slide-stock' : media1300 === true ? slideStock = 'slider--1300__slide-stock' : media1133 === true ? slideStock = 'slider--1133__slide-stock' : media900 === true ? slideStock = 'slider--900__slide-stock' : media744 === true ? slideStock = 'slider--744__slide-stock' : media744l === true ? slideStock = 'slider--744l__slide-stock' : media600 === true ? slideStock = 'slider--600__slide-stock' : media600l === true ? slideStock = 'slider--600l__slide-stock' : media375 === true ? slideStock = 'slider--375__slide-stock' : media275 === true ? slideStock = 'slider--275__slide-stock' : null;
  media1728 === true ? slideStockActive = 'slider--1728__slide-stock-active' : media1300 === true ? slideStockActive = 'slider--1300__slide-stock-active' : media1133 === true ? slideStockActive = 'slider--1133__slide-stock-active' : media900 === true ? slideStockActive = 'slider--900__slide-stock-active' : media744 === true ? slideStockActive = 'slider--744__slide-stock-active' : media744l === true ? slideStockActive = 'slider--744l__slide-stock-active' : media600 === true ? slideStockActive = 'slider--600__slide-stock-active' : media600l === true ? slideStockActive = 'slider--600l__slide-stock-active' : media375 === true ? slideStockActive = 'slider--375__slide-stock-active' : media275 === true ? slideStockActive = 'slider--275__slide-stock-active' : null;

  // (media1728 === true) ? slideStockActive = 'slider__slide-stock-active' :
  //     (media1133 === true) ? slideStockActive = 'slider--1133__slide-stock-active' :
  //         (media744 === true) ? slideStockActive = 'slider--744__slide-stock-active' : null;

  // (media1728 === true) ? slideStockActive = 'slider__slide-stock-active' :
  //     (media1133 === true) ? slideStockActive = 'slider--1133__slide-stock-active' :
  //         (media744 === true) ? slideStockActive = 'slider--744__slide-stock-active' :
  //             (media744l === true) ? slideStockActive = 'slider--744l__slide-stock-active' :
  //                 (media375 === true) ? slideStockActive = 'slider--375__slide-stock-active' :
  //                     (media275 === true) ? slideStockActive = 'slider--275__slide-stock-active' : null;

  var removeActiveSlides = function removeActiveSlides() {
    var slides = document.querySelectorAll(".".concat(slideStock));
    for (var i = 0; i < slides.length; i++) {
      slides[i].classList.remove("".concat(slideStockActive));
    }
  };
  var activeSlide = function activeSlide(n) {
    var slides = document.querySelectorAll(".".concat(slideStock));
    removeActiveSlides();
    slides[n].classList.add("".concat(slideStockActive));
  };
  var defaultSlide = function defaultSlide() {
    setIndex(0);
    activeSlide(index);
  };
  var nextSlide = function nextSlide() {
    var slides = document.querySelectorAll(".".concat(slideStock));
    if (index === slides.length - 1) {
      setIndex(0);
    } else {
      setIndex(index + 1);
    }
    activeSlide(index);
  };
  (0,react.useEffect)(function () {
    if (media275 || media375 || media600 || media600l || media744l) return;
    var timeout = setTimeout(function () {
      defaultSlide();
      setIndex(index + 1);
    }, 1000);
    return function () {
      clearTimeout(timeout);
    };
  }, []);
  (0,react.useEffect)(function () {
    if (media275 || media375 || media600 || media600l || media744l) return;
    var interval = setInterval(function () {
      nextSlide();
    }, 6000);
    return function () {
      clearInterval(interval);
    };
  }, [index]);
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0].children += " ".concat(value) : data[0].children += "".concat(value);
    });
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentStockClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "stock",
    className: stockClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "stock-title",
    className: stockTitleClass
  }, "\u0410\u043A\u0446\u0438\u044F"), /*#__PURE__*/react.createElement("div", {
    className: stockSliderClass
  }, /*#__PURE__*/react.createElement("div", {
    className: sliderStockClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(sliderItemsClass, " ").concat(sliderItemsStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(sliderItemClass, " ").concat(sliderItemStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: sliderSlideStockClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideClass, " ").concat(slideStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideContentClass, " ").concat(slideContentStockClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "slide-stock1",
    className: slideStock1Class
  }, "\u041F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u043C \u043A\u043B\u0438\u0435\u043D\u0442\u0430\u043C - \u0441\u043A\u0438\u0434\u043A\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "slide-value1",
    className: slideValueClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(slideSpanClass, " ").concat(slideSpanNumClass)
  }, "10"), /*#__PURE__*/react.createElement("span", {
    className: "".concat(slideSpanClass, " ").concat(slideSpanSymbolClass)
  }, "%"))))), /*#__PURE__*/react.createElement("div", {
    className: sliderSlideStockClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideClass, " ").concat(slideStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideContentClass, " ").concat(slideContentStockClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "slide-stock1",
    className: slideStock1Class
  }, "\u041F\u0435\u0440\u0432\u044B\u0439 \u0440\u0430\u0437 \u0443 \u043D\u0430\u0441 - c\u044D\u043A\u043E\u043D\u043E\u043C\u044C"), /*#__PURE__*/react.createElement("p", {
    id: "slide-value1",
    className: slideValueClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(slideSpanClass, " ").concat(slideSpanNumClass)
  }, "15"), /*#__PURE__*/react.createElement("span", {
    className: "".concat(slideSpanClass, " ").concat(slideSpanSymbolClass)
  }, "%"))))), /*#__PURE__*/react.createElement("div", {
    className: sliderSlideStockClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideClass, " ").concat(slideStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(slideContentClass, " ").concat(slideContentStockClass)
  }, /*#__PURE__*/react.createElement("p", {
    id: "slide-stock1",
    className: slideStock1Class
  }, "\u0414\u0435\u043D\u044C \u0440\u043E\u0436\u0434\u0435\u043D\u0438\u044F - \u043F\u043E\u0434\u0430\u0440\u043E\u043A"), /*#__PURE__*/react.createElement("p", {
    id: "slide-value1",
    className: slideValueClass
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(slideSpanClass, " ").concat(slideSpanNumClass)
  }, "20"), /*#__PURE__*/react.createElement("span", {
    className: "slide__span slide__span-symbol"
  }, "%")))))))))), /*#__PURE__*/react.createElement("div", {
    id: "content-stock",
    className: "".concat(contentWranningClass, " ").concat(contentWranningStockClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: media275 || media375 || media600 || media600l || media744l ? contentInnerStockClass : contentInnerClass
  }, media275 ? null : /*#__PURE__*/react.createElement("p", {
    id: "p-stock",
    className: "".concat(contentPClass, " ").concat(contentPStockClass)
  }, "\u0423\u0442\u043E\u0447\u043D\u044F\u0439\u0442\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043F\u043E \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0443"), /*#__PURE__*/react.createElement("phone", {
    id: "phone-stock",
    className: "".concat(contentPhoneClass, " ").concat(contentPhoneStockClass)
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, ModalContentF_extends({
      key: "uiLinkPhoneStock".concat(i)
    }, prop, {
      className: "".concat(contentNumberClass, " ").concat(contentNumberStockClass)
    }));
  }))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-f/index.js

;// ./src/components/modals/modal/modal_content/modal_content-g/ModalContentG.jsx
function ModalContentG_extends() { return ModalContentG_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, ModalContentG_extends.apply(null, arguments); }










var ModalContentG = function ModalContentG(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentHomeClass = classnames_default()("content".concat(queryNumber, "__home"));
  var homeClass = classnames_default()("home".concat(queryNumber));
  var homeBodyClass = classnames_default()("home".concat(queryNumber, "__body"));
  var homeTitleClass = classnames_default()("home".concat(queryNumber, "__title"));
  var homeTitleSubClass = classnames_default()("home".concat(queryNumber, "__title-sub"));
  var homeContentClass = classnames_default()("home".concat(queryNumber, "__content"));
  var homeBlockClass = classnames_default()("home".concat(queryNumber, "__block"));
  var homePClass = classnames_default()("home".concat(queryNumber, "__p}"));
  var homeImageClass = classnames_default()("home".concat(queryNumber, "__image"));
  var contentWranningClass = classnames_default()("content__wranning");
  var contentWranningHomeClass = classnames_default()("content".concat(queryNumber, "__wranning-home"));
  var contentInnerClass = classnames_default()("content".concat(queryNumber, "__inner"));
  var contentInnerHomeClass = classnames_default()("content".concat(queryNumber, "__inner-home"));
  var contentPClass = classnames_default()("content".concat(queryNumber, "__p"));
  var contentPHomeClass = classnames_default()("content".concat(queryNumber, "__p-home"));
  var contentPhoneClass = classnames_default()("content".concat(queryNumber, "__phone"));
  var contentPhoneHomeClass = classnames_default()("content".concat(queryNumber, "__phone-home"));
  var contentNumberClass = classnames_default()("content".concat(queryNumber, "__number"));
  var contentNumberHomeClass = classnames_default()("content".concat(queryNumber, "__number-home"));
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0].children += " ".concat(value) : data[0].children += "".concat(value);
    });
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentHomeClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "home",
    className: homeClass
  }, /*#__PURE__*/react.createElement("div", {
    className: homeBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "home-title",
    className: homeTitleClass
  }, "\u0412\u044B\u0435\u0437\u0434 \u043D\u0430 \u0434\u043E\u043C"), /*#__PURE__*/react.createElement("div", {
    className: homeContentClass
  }, /*#__PURE__*/react.createElement("div", {
    className: homeBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    className: "".concat(homeTitleClass, " ").concat(homeTitleSubClass)
  }, "\u041C\u0430\u0441\u0441\u0430\u04361"), /*#__PURE__*/react.createElement("p", {
    className: homePClass
  }, "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maiores nulla quo, sequi quasi necessitatibus unde reiciendis voluptate dolores natus, officiis odit eaque repellendus obcaecati ipsum nemo temporibus sit corrupti saepe?"), /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    className: homeImageClass
  })), /*#__PURE__*/react.createElement("div", {
    className: homeBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    className: "".concat(homeTitleClass, " ").concat(homeTitleSubClass)
  }, "\u041C\u0430\u0441\u0441\u0430\u04362"), /*#__PURE__*/react.createElement("p", {
    className: homePClass
  }, "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maiores nulla quo, sequi quasi necessitatibus unde reiciendis voluptate dolores natus, officiis odit eaque repellendus obcaecati ipsum nemo temporibus sit corrupti saepe?"), /*#__PURE__*/react.createElement("img", {
    src: fr_lifting_namespaceObject,
    alt: "",
    className: homeImageClass
  }))))), /*#__PURE__*/react.createElement("div", {
    id: "content-home",
    className: contentWranningHomeClass
  }, /*#__PURE__*/react.createElement("div", {
    className: media275 || media375 || media600 || media600l ? contentInnerHomeClass : contentInnerClass
  }, media275 ? null : /*#__PURE__*/react.createElement("p", {
    id: "p-home",
    className: "".concat(contentPClass, " ").concat(contentPHomeClass)
  }, "\u0423\u0442\u043E\u0447\u043D\u044F\u0439\u0442\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043F\u043E \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0443"), /*#__PURE__*/react.createElement("phone", {
    id: "phone-home",
    className: "".concat(contentPhoneClass, " ").concat(contentPhoneHomeClass)
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, ModalContentG_extends({
      key: "uiLinkPhoneHome".concat(i)
    }, prop, {
      className: "".concat(contentNumberClass, " ").concat(contentNumberHomeClass)
    }));
  }))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-g/index.js

// EXTERNAL MODULE: ./src/images/whatsapp-review.svg
var whatsapp_review = __webpack_require__(7914);
// EXTERNAL MODULE: ./src/images/telegram-review.svg
var telegram_review = __webpack_require__(1615);
;// ./src/components/modals/modal/modal_content/modal_content-h/ModalContentH.jsx








var ModalContentH = function ModalContentH(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var contentReviewsClass = classnames_default()("content".concat(queryNumber, "__reviews"));
  var reviewsClass = classnames_default()("reviews".concat(queryNumber));
  var reviewsBodyClass = classnames_default()("reviews".concat(queryNumber, "__body"));
  var reviewsContentClass = classnames_default()("reviews".concat(queryNumber, "__content"));
  var reviewsBlockClass = classnames_default()("reviews".concat(queryNumber, "__block"));
  var reviewsTitleClass = classnames_default()("reviews".concat(queryNumber, "__title"));
  var reviewsTitleSubClass = classnames_default()("reviews".concat(queryNumber, "__title-sub"));
  var reviewsPClass = classnames_default()("reviews".concat(queryNumber, "__p"));
  var contentWranningClass = classnames_default()("content".concat(queryNumber, "__wranning"));
  var contentWranningReviewsClass = classnames_default()("content".concat(queryNumber, "__wranning-reviews"));
  var contentInnerClass = classnames_default()("content".concat(queryNumber, "__inner"));
  var contentInnerReviewsClass = classnames_default()("content".concat(queryNumber, "__inner-reviews"));
  var contentInnerIconsClass = classnames_default()("content".concat(queryNumber, "__inner-icons"));
  var contentPClass = classnames_default()("content__p");
  var contentPReviewsClass = classnames_default()("content".concat(queryNumber, "__p-reviews"));
  var contentIconsClass = classnames_default()("content".concat(queryNumber, "__icons"));
  var contentIconsReviewsClass = classnames_default()("content".concat(queryNumber, "__icons-reviews"));
  var contentIconClass = classnames_default()("content".concat(queryNumber, "__icon"));
  var contentLinkClass = classnames_default()("content".concat(queryNumber, "__link"));
  var contentLinkReviewsClass = classnames_default()("content".concat(queryNumber, "__link-reviews"));
  var contentImgClass = classnames_default()("content".concat(queryNumber, "__img"));
  var contentImgWhatsappClass = classnames_default()("content".concat(queryNumber, "__img-whatsapp"));
  var contentImgTelegramClass = classnames_default()("content".concat(queryNumber, "__img-telegram"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: contentReviewsClass
  }, /*#__PURE__*/react.createElement("div", {
    id: "reviews",
    className: reviewsClass
  }, /*#__PURE__*/react.createElement("div", {
    className: reviewsBodyClass
  }, /*#__PURE__*/react.createElement("h2", {
    id: "reviews-title",
    className: reviewsTitleClass
  }, "\u041E\u0442\u0437\u044B\u0432\u044B"), /*#__PURE__*/react.createElement("div", {
    className: reviewsContentClass
  }, /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0410\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")), /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0415\u0444\u0438\u043C"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")), /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0410\u043B\u043B\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")), /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0410\u043B\u0435\u043A\u0441\u0435\u0439"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")), /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0415\u043A\u0430\u0442\u0435\u0440\u0438\u043D\u0430"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")), /*#__PURE__*/react.createElement("div", {
    className: reviewsBlockClass
  }, /*#__PURE__*/react.createElement("h3", {
    id: "user1",
    className: "".concat(reviewsTitleClass, " ").concat(reviewsTitleSubClass)
  }, "\u0410\u0441\u043B\u0430\u043D"), /*#__PURE__*/react.createElement("p", {
    id: "reviews1",
    className: reviewsPClass
  }, "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Consequuntur, accusamus ipsa doloribus commodi eaque iure ratione delectus voluptatem. Incidunt sed repellendus est aut veritatis officia laborum voluptate deleniti quidem esse.")))))), /*#__PURE__*/react.createElement("div", {
    id: "content-reviews",
    className: contentWranningReviewsClass
  }, /*#__PURE__*/react.createElement("div", {
    className: contentInnerClass
  }, /*#__PURE__*/react.createElement("p", {
    id: "p-reviews",
    className: "".concat(contentPClass, " ").concat(contentPReviewsClass)
  }, media275 ? " " : "Будем рады Вашим отзывам"), /*#__PURE__*/react.createElement("div", {
    className: "".concat(contentIconsClass, " ").concat(contentIconsReviewsClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: contentInnerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: contentIconClass
  }, /*#__PURE__*/react.createElement("a", {
    href: "",
    className: "".concat(contentLinkClass, " ").concat(contentLinkReviewsClass),
    id: "reviews-whatsapp-link"
  }, /*#__PURE__*/react.createElement("img", {
    src: whatsapp_review,
    alt: "",
    id: "reviews-whatsapp-img",
    className: "".concat(contentImgClass, " ").concat(contentImgWhatsappClass)
  }))), /*#__PURE__*/react.createElement("div", {
    "class": contentIconClass
  }, /*#__PURE__*/react.createElement("a", {
    href: "",
    className: "".concat(contentLinkClass, " ").concat(contentLinkReviewsClass),
    id: "reviews-telegram-link"
  }, /*#__PURE__*/react.createElement("img", {
    src: telegram_review,
    alt: "",
    id: "reviews-telegram-img",
    className: "".concat(contentImgClass, " ").concat(contentImgTelegramClass)
  }))))))));
};
;// ./src/components/modals/modal/modal_content/modal_content-h/index.js

;// ./src/components/modals/modal/modal_content/index.js









/***/ }),

/***/ 8690:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Bv: () => (/* reexport */ ui_button/* UiButton */.B),
  Q4: () => (/* reexport */ UiDiv),
  Ht: () => (/* reexport */ UiH2),
  Yo: () => (/* reexport */ UiImg),
  Yh: () => (/* reexport */ UiLi),
  bQ: () => (/* reexport */ UiLink),
  zx: () => (/* reexport */ UiP),
  dF: () => (/* reexport */ UiSpan)
});

// UNUSED EXPORTS: UiH1

// EXTERNAL MODULE: ./src/components/ui/ui_button/index.js + 1 modules
var ui_button = __webpack_require__(7767);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/components/ui/ui_div/UiDiv.jsx

var UiDiv = function UiDiv(_ref) {
  var className = _ref.className,
    id = _ref.id,
    children = _ref.children,
    ref = _ref.ref;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: className,
    id: id,
    ref: ref
  }, children));
};
;// ./src/components/ui/ui_div/index.js

;// ./src/components/ui/ui_h1/UiH1.jsx

var UiH1 = function UiH1(_ref) {
  var className = _ref.className,
    id = _ref.id,
    style = _ref.style,
    children = _ref.children;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("h1", {
    className: className,
    id: id,
    style: style
  }, children));
};
;// ./src/components/ui/ui_h1/index.js

;// ./src/components/ui/ui_h2/UiH2.jsx

var UiH2 = function UiH2(_ref) {
  var className = _ref.className,
    id = _ref.id,
    children = _ref.children;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("h2", {
    className: className,
    id: id
  }, children));
};
;// ./src/components/ui/ui_h2/index.js

// EXTERNAL MODULE: ./node_modules/react-spinners/esm/ClipLoader.js + 2 modules
var ClipLoader = __webpack_require__(769);
;// ./src/components/ui/ui_img/UiImg.jsx
"use client";



var LazyImage = /*#__PURE__*/(0,react.lazy)(function () {
  return __webpack_require__.e(/* import() */ 47).then(__webpack_require__.bind(__webpack_require__, 1047));
});
var override = {
  display: 'block',
  margin: '0 auto'
};
var color = "#C975D8";
var UiImg = function UiImg(_ref) {
  var src = _ref.src,
    alt = _ref.alt,
    className = _ref.className,
    id = _ref.id,
    ref = _ref.ref,
    style = _ref.style;
  return /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: color,
      cssOverride: override
    })
  }, /*#__PURE__*/react.createElement(LazyImage, {
    src: src,
    alt: alt,
    className: className,
    id: id,
    ref: ref,
    style: style
  }));
};
;// ./src/components/ui/ui_img/index.js

;// ./src/components/ui/ui_li/UilLi.jsx

var UiLi = function UiLi(_ref) {
  var className = _ref.className,
    id = _ref.id,
    children = _ref.children,
    onMouseEnter = _ref.onMouseEnter,
    onMouseLeave = _ref.onMouseLeave;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("li", {
    className: className,
    id: id,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave
  }, children));
};
;// ./src/components/ui/ui_li/index.js

;// ./src/components/ui/ui_link/UiLink.jsx

var UiLink = function UiLink(_ref) {
  var href = _ref.href,
    className = _ref.className,
    dataBlock = _ref.dataBlock,
    dataTab = _ref.dataTab,
    id = _ref.id,
    children = _ref.children,
    style = _ref.style,
    disabled = _ref.disabled,
    ref = _ref.ref;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("a", {
    href: href,
    className: className,
    "data-block": dataBlock,
    dataTab: dataTab,
    id: id,
    style: style,
    disabled: disabled,
    ref: ref
  }, children));
};
;// ./src/components/ui/ui_link/index.js

;// ./src/components/ui/ui_p/UiP.jsx

var UiP = function UiP(_ref) {
  var className = _ref.className,
    id = _ref.id,
    children = _ref.children;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("p", {
    className: className,
    id: id
  }, children));
};
;// ./src/components/ui/ui_p/index.js

;// ./src/components/ui/ui_span/UiSpan.jsx

var UiSpan = function UiSpan(_ref) {
  var id = _ref.id,
    className = _ref.className,
    children = _ref.children,
    ref = _ref.ref;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("span", {
    id: id,
    className: className,
    ref: ref
  }, children));
};
;// ./src/components/ui/ui_span/index.js

;// ./src/components/ui/index.js










/***/ }),

/***/ 7767:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  B: () => (/* reexport */ UiButton)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/components/ui/ui_button/UiButton.jsx

var UiButton = function UiButton(_ref) {
  var id = _ref.id,
    className = _ref.className,
    children = _ref.children,
    onClick = _ref.onClick,
    ref = _ref.ref,
    onMouseEnter = _ref.onMouseEnter,
    onMouseLeave = _ref.onMouseLeave,
    style = _ref.style,
    disabled = _ref.disabled;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("button", {
    id: id,
    className: className,
    onClick: onClick,
    ref: ref,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    style: style,
    disabled: disabled
  }, children));
};
;// ./src/components/ui/ui_button/index.js


/***/ }),

/***/ 9309:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  V: () => (/* reexport */ ModalContext),
  Z: () => (/* reexport */ ModalProvider)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/contexts/ModalContext/ModalContext.js

var ModalContext = /*#__PURE__*/(0,react.createContext)({
  openModal: function openModal() {},
  closeModal: function closeModal() {},
  playSliderProcCert: function playSliderProcCert() {},
  stopSliderProcCert: function stopSliderProcCert() {},
  setHeaderHeight: function setHeaderHeight() {},
  handleToggle: function handleToggle() {},
  autoPlaySliderProcCert: true,
  scrollbarWidthBody: null,
  modalOpened: false,
  headerHeight: 120,
  isToggled: false
});
// EXTERNAL MODULE: ./src/hooks/hook_scrollbar_width/index.js + 1 modules
var hook_scrollbar_width = __webpack_require__(4050);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(6942);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/hooks/index.js + 11 modules
var hooks = __webpack_require__(7597);
// EXTERNAL MODULE: ./src/func/func_query_number/funcQueryNumber.js
var funcQueryNumber = __webpack_require__(9868);
// EXTERNAL MODULE: ./src/components/modals/modal/modal_close/index.js + 2 modules
var modal_close = __webpack_require__(5662);
// EXTERNAL MODULE: ./src/contexts/index.js
var contexts = __webpack_require__(1469);
// EXTERNAL MODULE: ./src/data/data_modal/data_modal_close/dataModalClose.json
var dataModalClose = __webpack_require__(498);
// EXTERNAL MODULE: ./src/data/data_phone/dataPhone.json
var dataPhone = __webpack_require__(1282);
;// ./src/components/modals/modal/Modal.jsx
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }




// import { useBodyScrollLock } from '../../../hooks';







var Modal = function Modal(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var popupClass = classnames_default()("popup".concat(queryNumber));
  var popupContentClass = classnames_default()("popup".concat(queryNumber, "__content"));
  var contentClass = classnames_default()("content".concat(queryNumber));
  var contentBodyClass = classnames_default()("content".concat(queryNumber, "__body"));
  var popupBodyHideClass = classnames_default()("popup".concat(queryNumber, "__body-hide"));
  var popupHideClass = classnames_default()("popup-hide".concat(queryNumber));

  // useBodyScrollLock();

  var id = props.id,
    className = props.className,
    content = props.content;
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    closeModal = _useContext.closeModal,
    playSliderProcCert = _useContext.playSliderProcCert;
  var _useState = (0,react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    closing = _useState2[0],
    setClosing = _useState2[1];
  var handleClose = function handleClose() {
    setClosing(true);
    playSliderProcCert();
    closeModal();
  };
  var popupClasses = closing ? "".concat(popupClass, " ").concat(popupHideClass) : popupClass;
  // const popupClasses = closing ? 'popup popup-hide' : 'popup';
  var popupBodyClasses = closing ? "".concat(className, " ").concat(popupBodyHideClass) : className;
  // const popupBodyClasses = closing ? `${className} popup__body-hide` : className;

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    id: id,
    className: popupClasses,
    onClick: handleClose
  }, /*#__PURE__*/react.createElement("div", {
    className: popupBodyClasses,
    onClick: function onClick(event) {
      return event.stopPropagation();
    }
  }, /*#__PURE__*/react.createElement(modal_close/* ModalClose */.O, {
    data: dataModalClose,
    handleClose: handleClose
  }), /*#__PURE__*/react.createElement("div", {
    className: popupContentClass
  }, /*#__PURE__*/react.createElement("div", {
    className: contentClass
  }, /*#__PURE__*/react.createElement("div", {
    className: contentBodyClass
  }, content))))));
};
;// ./src/components/modals/modal/index.js

;// ./src/components/modals/index.js

;// ./src/contexts/ModalContext/ModalContextProvider.jsx
function ModalContextProvider_slicedToArray(r, e) { return ModalContextProvider_arrayWithHoles(r) || ModalContextProvider_iterableToArrayLimit(r, e) || ModalContextProvider_unsupportedIterableToArray(r, e) || ModalContextProvider_nonIterableRest(); }
function ModalContextProvider_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function ModalContextProvider_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return ModalContextProvider_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? ModalContextProvider_arrayLikeToArray(r, a) : void 0; } }
function ModalContextProvider_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ModalContextProvider_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function ModalContextProvider_arrayWithHoles(r) { if (Array.isArray(r)) return r; }


// import { useScrollbarWidth } from 'react-use';



var ModalProvider = function ModalProvider(_ref) {
  var children = _ref.children;
  var _useState = (0,react.useState)(false),
    _useState2 = ModalContextProvider_slicedToArray(_useState, 2),
    modalOpened = _useState2[0],
    setModalOpened = _useState2[1];
  var _useState3 = (0,react.useState)(null),
    _useState4 = ModalContextProvider_slicedToArray(_useState3, 2),
    modalContent = _useState4[0],
    setModalContent = _useState4[1];
  var _useState5 = (0,react.useState)(true),
    _useState6 = ModalContextProvider_slicedToArray(_useState5, 2),
    autoPlaySliderProcCert = _useState6[0],
    setAutoPlaySliderProcCert = _useState6[1];
  var _useState7 = (0,react.useState)(0),
    _useState8 = ModalContextProvider_slicedToArray(_useState7, 2),
    headerHeight = _useState8[0],
    setHeaderHeight = _useState8[1];
  var _useState9 = (0,react.useState)(false),
    _useState10 = ModalContextProvider_slicedToArray(_useState9, 2),
    isToggled = _useState10[0],
    setIsToggled = _useState10[1];
  var scrollbarWidthBody = (0,hook_scrollbar_width/* useScrollbarWidth */.y)();
  var openModal = function openModal(modalConfig) {
    // const { href, children } = modalConfig;
    setModalContent(modalConfig);
    setModalOpened(true);
    document.body.style.paddingRight = "".concat(scrollbarWidthBody, "px");
  };
  var closeModal = function closeModal() {
    setModalOpened(false);
    document.body.style.paddingRight = "0px";
  };
  var playSliderProcCert = function playSliderProcCert() {
    setAutoPlaySliderProcCert(true);
  };
  var stopSliderProcCert = function stopSliderProcCert() {
    setAutoPlaySliderProcCert(false);
  };
  var handleToggle = function handleToggle() {
    setIsToggled(!isToggled);
  };
  var valueModelProvider = {
    openModal: openModal,
    closeModal: closeModal,
    playSliderProcCert: playSliderProcCert,
    stopSliderProcCert: stopSliderProcCert,
    handleToggle: handleToggle,
    autoPlaySliderProcCert: autoPlaySliderProcCert,
    scrollbarWidthBody: scrollbarWidthBody,
    modalOpened: modalOpened,
    isToggled: isToggled
  };
  return /*#__PURE__*/react.createElement(ModalContext.Provider, {
    value: valueModelProvider
  }, modalOpened && /*#__PURE__*/react.createElement(Modal, modalContent), children);
};
;// ./src/contexts/ModalContext/index.js



/***/ }),

/***/ 5654:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  z: () => (/* reexport */ ProcSliderContext),
  R: () => (/* reexport */ ProcSliderProvider)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/contexts/ProcSliderContext/ProcSliderContext.js

var ProcSliderContext = /*#__PURE__*/(0,react.createContext)({
  goToSlide: function goToSlide() {},
  changeSlide: function changeSlide() {},
  handleChangeViewport: function handleChangeViewport() {},
  autoPlay: null,
  slideCount: null,
  slideNumber: null,
  countSlides: null,
  countViewport: null,
  countFirstSlideViewport: null,
  pauseAnimationSlide: null,
  pauseInterval: null,
  arrFirstSlideViewport: null,
  items: null
});
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(5556);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(6942);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/func/func_query_media/funcQueryMedia.js
var funcQueryMedia = __webpack_require__(2622);
// EXTERNAL MODULE: ./src/func/func_query_number/funcQueryNumber.js
var funcQueryNumber = __webpack_require__(9868);
// EXTERNAL MODULE: ./node_modules/gsap/index.js
var gsap = __webpack_require__(738);
// EXTERNAL MODULE: ./src/hooks/index.js + 11 modules
var hooks = __webpack_require__(7597);
// EXTERNAL MODULE: ./src/contexts/ModalContext/index.js + 5 modules
var ModalContext = __webpack_require__(9309);
// EXTERNAL MODULE: ./src/components/modals/modal/modal_content/index.js + 42 modules
var modal_content = __webpack_require__(2613);
;// ./src/data/data_modal/data_modal_content/data_modal_content_a/dataModalContentA.json
const dataModalContentA_namespaceObject = /*#__PURE__*/JSON.parse('{"id":"modal-a-link-phone","href":"","children":""}');
// EXTERNAL MODULE: ./src/data/data_phone/dataPhone.json
var dataPhone = __webpack_require__(1282);
// EXTERNAL MODULE: ./src/contexts/index.js
var contexts = __webpack_require__(1469);
// EXTERNAL MODULE: ./node_modules/gsap/CSSPlugin.js
var CSSPlugin = __webpack_require__(2650);
// EXTERNAL MODULE: ./src/components/ui/index.js + 16 modules
var ui = __webpack_require__(8690);
;// ./src/components/sliders/slider_proc/slider_proc_buttons/slider_proc_buttons_button/SliderProcButtonsButton.jsx
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }










var SliderProcButtonsButton = function SliderProcButtonsButton(_ref) {
  var id = _ref.id,
    numberFirstSlideViewport = _ref.numberFirstSlideViewport;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var buttonViewportClass = classnames_default()("button-viewport".concat(queryNumber));
  gsap/* default */.Ay.registerPlugin(CSSPlugin/* CSSPlugin */.H0);
  var _useContext = (0,react.useContext)(ProcSliderContext),
    handleChangeViewport = _useContext.handleChangeViewport;
  var _useState = (0,react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isHoverButton = _useState2[0],
    setIsHoverButton = _useState2[1];
  var buttonRef = (0,react.useRef)(null);
  var buttonAllClass = classnames_default()(buttonViewportClass, "button-viewport-hover".concat(queryNumber));
  var handleButtonMouseEnter = function handleButtonMouseEnter() {
    setIsHoverButton(true);
  };
  var handleButtonMouseLeave = function handleButtonMouseLeave() {
    setIsHoverButton(false);
  };
  if (buttonRef === null) throw new Error('ERROR_PROC_TABS_SLIDER_BUTTONS_BUTTON_REFS');
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
    className: buttonAllClass,
    onClick: function onClick() {
      return handleChangeViewport(numberFirstSlideViewport);
    },
    id: id,
    ref: buttonRef,
    onMouseEnter: handleButtonMouseEnter,
    onMouseLeave: handleButtonMouseLeave
  }));
};
;// ./src/components/sliders/slider_proc/slider_proc_buttons/slider_proc_buttons_button/index.js

;// ./src/components/sliders/slider_proc/slider_proc_buttons/SliderProcButtons.jsx










var SliderProcButtons = function SliderProcButtons(_ref) {
  var typeButtons = _ref.typeButtons;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var buttonsViewportClass = classnames_default()("buttons-viewport".concat(queryNumber));
  var buttonsPreClass = classnames_default()("buttons-pre".concat(queryNumber));
  var buttonsNextClass = classnames_default()("buttons-next".concat(queryNumber));
  var _useContext = (0,react.useContext)(ProcSliderContext),
    countSlides = _useContext.countSlides,
    countViewport = _useContext.countViewport,
    arrFirstSlideViewport = _useContext.arrFirstSlideViewport,
    countFirstSlideViewport = _useContext.countFirstSlideViewport,
    slideCount = _useContext.slideCount;
  var _useContext2 = (0,react.useContext)(contexts/* ModalContext */.Vs),
    autoPlaySliderProc = _useContext2.autoPlaySliderProc;
  var buttonsPreRef = (0,react.useRef)(null);
  var buttonsNextRef = (0,react.useRef)(null);
  var buttonsPreAllClass = classnames_default()(buttonsViewportClass, buttonsPreClass);
  var buttonsNextAllClass = classnames_default()(buttonsViewportClass, buttonsNextClass);
  var countViewports = Math.ceil(slideCount / countSlides);
  var countViewportNext = countViewports - countViewport;
  var countViewportPre = countViewports - countViewportNext;
  var renderButtons = function renderButtons() {
    var buttons = [];
    if (typeButtons === 'pre') {
      if (countViewport !== 1) {
        for (var i = 0; i < arrFirstSlideViewport.length - 1; i++) {
          if (arrFirstSlideViewport[i] < countFirstSlideViewport) {
            buttons.push(/*#__PURE__*/react.createElement(SliderProcButtonsButton, {
              key: "buttonPre".concat(i),
              id: "buttonPre".concat(i),
              numberFirstSlideViewport: arrFirstSlideViewport[i]
            }));
          }
        }
      }
    }
    if (typeButtons === 'next') {
      for (var _i = 0; _i < arrFirstSlideViewport.length; _i++) {
        if (arrFirstSlideViewport[_i] > countFirstSlideViewport) {
          buttons.push(/*#__PURE__*/react.createElement(SliderProcButtonsButton, {
            key: "buttonNext".concat(_i),
            id: "buttonNext".concat(_i),
            numberFirstSlideViewport: arrFirstSlideViewport[_i]
          }));
        }
      }
    }
    return buttons;
  };
  if (buttonsPreRef === null) throw new Error('ERROR_PROC_TABS_SLIDER_BUTTONS_REFS');
  if (buttonsNextRef === null) throw new Error('ERROR_PROC_TABS_SLIDER_BUTTONS_REFS');
  if (typeButtons === 'pre') {
    return /*#__PURE__*/react.createElement("div", {
      className: buttonsPreAllClass,
      ref: buttonsPreRef
    }, renderButtons());
  } else {
    return /*#__PURE__*/react.createElement("div", {
      className: buttonsNextAllClass,
      ref: buttonsNextRef
    }, renderButtons());
  }
};
;// ./src/components/sliders/slider_proc/slider_proc_buttons/index.js

;// ./src/components/sliders/slider_proc/slider_proc_dots/slider_proc_dots_dot/SliderProcDotsDot.jsx









var SliderProcDotsDot = function SliderProcDotsDot(_ref) {
  var number = _ref.number;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var dotsDotClass = classnames_default()("dots".concat(queryNumber, "__dot"));
  var dotsDotProceduresClass = classnames_default()("dots".concat(queryNumber, "__dot"));
  var dotsDotBodyClass = classnames_default()("dots".concat(queryNumber, "__dot-body"));
  gsap/* default */.Ay.registerPlugin(CSSPlugin/* CSSPlugin */.H0);
  var _useContext = (0,react.useContext)(ProcSliderContext),
    goToSlide = _useContext.goToSlide,
    slideNumber = _useContext.slideNumber,
    pauseAnimationSlide = _useContext.pauseAnimationSlide;
  var dotRef = (0,react.useRef)(null);
  var dotAllClass = classnames_default()(dotsDotClass, dotsDotProceduresClass, dotsDotBodyClass);
  var animationDot = function animationDot(current, time) {
    var pause = time;
    gsap/* default */.Ay.timeline().to(current, {
      scale: 1,
      duration: 0.25,
      delay: pause,
      ease: 'power1.in'
    }).to(current, {
      scale: 1,
      duration: 1,
      ease: 'power1.inOut'
    }).to(current, {
      scale: 0.9,
      // scale: 0.8,
      duration: 0.25,
      ease: 'power1.out'
    }, "+=".concat(pause));
  };
  (0,react.useLayoutEffect)(function () {
    if (dotRef.current === null) throw new Error('ERROR_PROC_TABS_SLIDER_DOTS_DOT_REFS');
    slideNumber === number ? animationDot(dotRef.current, pauseAnimationSlide) : null;
  }, [slideNumber, number]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    ref: dotRef,
    className: dotAllClass,
    onClick: function onClick() {
      return goToSlide(number);
    }
  }));
};
;// ./src/components/sliders/slider_proc/slider_proc_dots/slider_proc_dots_dot/index.js

;// ./src/components/sliders/slider_proc/slider_proc_dots/SliderProcDots.jsx








var SliderProcDots = function SliderProcDots(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var dotsBodyClass = classnames_default()("dots".concat(queryNumber, "__body"));
  var dotsBodyProceduresClass = classnames_default()("dots".concat(queryNumber, "__body-procedures"));
  var dotsBodyBodyClass = classnames_default()("dots".concat(queryNumber, "__body-body"));
  var _useContext = (0,react.useContext)(ProcSliderContext),
    countSlides = _useContext.countSlides,
    countFirstSlideViewport = _useContext.countFirstSlideViewport,
    slideCount = _useContext.slideCount;
  var dotsRef = (0,react.useRef)(null);
  var dotsAllClass = classnames_default()(dotsBodyClass, dotsBodyProceduresClass, dotsBodyBodyClass);
  var count = countFirstSlideViewport;
  var renderDots = function renderDots() {
    var dots = [];
    if (countFirstSlideViewport < slideCount - countSlides) {
      for (var i = count; i < count + countSlides; i++) {
        dots.push(/*#__PURE__*/react.createElement(SliderProcDotsDot, {
          key: "dot".concat(i),
          number: i,
          dotsRef: dotsRef.current
        }));
      }
    } else {
      for (var _i = slideCount - countSlides; _i < slideCount; _i++) {
        dots.push(/*#__PURE__*/react.createElement(SliderProcDotsDot, {
          key: "dot".concat(_i),
          number: _i,
          dotsRef: dotsRef.current
        }));
      }
    }
    return dots;
  };
  if (dotsRef === null) throw new Error('ERROR_PROC_TABS_SLIDER_DOTS_REFS');
  return /*#__PURE__*/react.createElement("div", {
    className: dotsAllClass,
    ref: dotsRef
  }, renderDots());
};
;// ./src/components/sliders/slider_proc/slider_proc_dots/index.js

;// ./src/contexts/ProcSliderContext/ProcSliderContextProvider.jsx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || ProcSliderContextProvider_unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return ProcSliderContextProvider_arrayLikeToArray(r); }
function _toArray(r) { return ProcSliderContextProvider_arrayWithHoles(r) || _iterableToArray(r) || ProcSliderContextProvider_unsupportedIterableToArray(r) || ProcSliderContextProvider_nonIterableRest(); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function ProcSliderContextProvider_slicedToArray(r, e) { return ProcSliderContextProvider_arrayWithHoles(r) || ProcSliderContextProvider_iterableToArrayLimit(r, e) || ProcSliderContextProvider_unsupportedIterableToArray(r, e) || ProcSliderContextProvider_nonIterableRest(); }
function ProcSliderContextProvider_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function ProcSliderContextProvider_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return ProcSliderContextProvider_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? ProcSliderContextProvider_arrayLikeToArray(r, a) : void 0; } }
function ProcSliderContextProvider_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ProcSliderContextProvider_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function ProcSliderContextProvider_arrayWithHoles(r) { if (Array.isArray(r)) return r; }
















var delay = function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};
var ProcSliderProvider = function ProcSliderProvider(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderClass = classnames_default()("slider".concat(queryNumber));
  var sliderProceduresClass = classnames_default()("slider-procedures".concat(queryNumber));
  var sliderBodyClass = classnames_default()("slider-body".concat(queryNumber));
  var sliderSlideClass = classnames_default()("slider".concat(queryNumber, "__slide"));
  var sliderSlideProceduresClass = classnames_default()("slider".concat(queryNumber, "__slide-procedures"));
  var sliderSlideBodyActiveClass = classnames_default()("slider".concat(queryNumber, "__slide-body-active"));
  var sliderLinkClass = classnames_default()("slider".concat(queryNumber, "__link"));
  var sliderLinkProceduresClass = classnames_default()("slider".concat(queryNumber, "__link-procedures"));
  var sliderCardClass = classnames_default()("slider".concat(queryNumber, "__card}"));
  var sliderCardProceduresClass = classnames_default()("slider".concat(queryNumber, "__card-procedures"));
  var buttonsClass = classnames_default()("buttons".concat(queryNumber));
  var dotsClass = classnames_default()("dots".concat(queryNumber));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var _useState = (0,react.useState)([]),
    _useState2 = ProcSliderContextProvider_slicedToArray(_useState, 2),
    items = _useState2[0],
    setItems = _useState2[1];
  var _useState3 = (0,react.useState)(0),
    _useState4 = ProcSliderContextProvider_slicedToArray(_useState3, 2),
    slide = _useState4[0],
    setSlide = _useState4[1];
  var _useState5 = (0,react.useState)(0),
    _useState6 = ProcSliderContextProvider_slicedToArray(_useState5, 2),
    slideWidth = _useState6[0],
    setSlideWidth = _useState6[1];
  var _useState7 = (0,react.useState)(0),
    _useState8 = ProcSliderContextProvider_slicedToArray(_useState7, 2),
    sliderWidth = _useState8[0],
    setSliderWidth = _useState8[1];
  var _useState9 = (0,react.useState)(0),
    _useState10 = ProcSliderContextProvider_slicedToArray(_useState9, 2),
    sliderHeight = _useState10[0],
    setSliderHeight = _useState10[1];
  var _useState11 = (0,react.useState)(1),
    _useState12 = ProcSliderContextProvider_slicedToArray(_useState11, 2),
    countViewport = _useState12[0],
    setCountViewport = _useState12[1];
  var _useState13 = (0,react.useState)(0),
    _useState14 = ProcSliderContextProvider_slicedToArray(_useState13, 2),
    countFirstSlideViewport = _useState14[0],
    setCountFirstSlideViewport = _useState14[1];
  var _useState15 = (0,react.useState)(0),
    _useState16 = ProcSliderContextProvider_slicedToArray(_useState15, 2),
    pauseAnimationSlide = _useState16[0],
    setPauseAnimationSlide = _useState16[1];
  var _useState17 = (0,react.useState)(0),
    _useState18 = ProcSliderContextProvider_slicedToArray(_useState17, 2),
    pauseInterval = _useState18[0],
    setPauseInterval = _useState18[1];
  var _useState19 = (0,react.useState)([]),
    _useState20 = ProcSliderContextProvider_slicedToArray(_useState19, 2),
    arrFirstSlideViewport = _useState20[0],
    setArrFirstSlideViewport = _useState20[1];
  var _useState21 = (0,react.useState)(true),
    _useState22 = ProcSliderContextProvider_slicedToArray(_useState21, 2),
    autoPlay = _useState22[0],
    setAutoPlay = _useState22[1];
  var _useState23 = (0,react.useState)(null),
    _useState24 = ProcSliderContextProvider_slicedToArray(_useState23, 2),
    touchPosition = _useState24[0],
    setTouchPosition = _useState24[1];
  var _useState25 = (0,react.useState)(0),
    _useState26 = ProcSliderContextProvider_slicedToArray(_useState25, 2),
    sliderDirection = _useState26[0],
    setSliderDirection = _useState26[1];
  var _useState27 = (0,react.useState)(0),
    _useState28 = ProcSliderContextProvider_slicedToArray(_useState27, 2),
    sliderPosition = _useState28[0],
    setSliderPosition = _useState28[1];
  var _useState29 = (0,react.useState)(false),
    _useState30 = ProcSliderContextProvider_slicedToArray(_useState29, 2),
    sliderLockRight = _useState30[0],
    setSliderLockRight = _useState30[1];
  var slidesRef = (0,react.useRef)(props.images.map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var sliderRef = (0,react.useRef)(null);
  var viewportWidth = props.viewportWidth;
  var viewportHeight = props.viewportHeight;

  // const countSlides = 4;

  var countSlides;
  media1728 === true ? countSlides = 4 : media1300 === true ? countSlides = 3 : media1133 === true ? countSlides = 3 : media900 === true ? countSlides = 3 : null;
  // (media744 === true) ? countSlides = 3 :
  //     (media744l === true) ? countSlides = 3 :
  //         (media600 === true) ? countSlides = 2 :
  //             (media600l === true) ? countSlides = 2 :
  //                 (media375 === true) ? countSlides = 2 :
  //                     (media275 === true) ? countSlides = 2 : null;

  var _useContext = (0,react.useContext)(ModalContext/* ModalContext */.V),
    openModal = _useContext.openModal,
    closeModal = _useContext.closeModal,
    playSliderProcCert = _useContext.playSliderProcCert,
    stopSliderProcCert = _useContext.stopSliderProcCert,
    autoPlaySliderProcCert = _useContext.autoPlaySliderProcCert;
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var propsData = function propsData(props) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [],
      _ref2 = _toArray(_ref),
      arg = _ref2.slice(0);
    var propsAll = props;
    var arrImages = _toConsumableArray(arg);
    var data = [[], []];
    arrImages.length !== -1 ? arrImages.map(function () {
      data[0].push(JSON.parse(JSON.stringify(propsAll.data[0])));
      data[1].push(JSON.parse(JSON.stringify(propsAll.data[1])));
    }) : null;
    data[0].length == arrImages.length ? data[0].map(function (value, i) {
      return data[0][i].id = "".concat(propsAll.data[0].id).concat(i);
    }) : null;
    data[1].length == arrImages.length ? data[1].map(function (value, i) {
      return data[1][i].id = "".concat(propsAll.data[1].id).concat(i);
    }) : null;
    data[1].length == arrImages.length ? data[1].map(function (value, i) {
      return data[1][i].alt = "".concat(propsAll.data[1].alt).concat(i);
    }) : null;
    data[1].length == arrImages.length ? arrImages.map(function (value, i) {
      return data[1][i].src = value;
    }) : null;
    return data;
  };
  var sliderSlideAllClass = classnames_default()(sliderSlideClass, sliderSlideProceduresClass, sliderSlideBodyActiveClass);
  var sliderSlide = function sliderSlide(number) {
    // const current = `#uiDivProcedureBody${number}`;
    var slideRef = slidesRef.current[number];
    var current = slideRef.current;
    return current;
  };
  var sliderDefault = function sliderDefault() {
    var current;
    media1728 === true ? current = '.slider--1728__slide-body-active' : media1300 === true ? current = '.slider--1300__slide-body-active' : media1133 === true ? current = '.slider--1133__slide-body-active' : null;
    // let current = '.slider__slide-body-active';
    animationSliderDefault(current);
  };
  var slidesAllActive = function slidesAllActive() {
    var current;
    media900 === true ? current = '.slider--900__slide-body-active' : media744 === true ? current = '.slider--744__slide-body-active' : media744l === true ? current = '.slider--744l__slide-body-active' : media600 === true ? current = '.slider--600__slide-body-active' : media600l === true ? current = '.slider--600l__slide-body-active' : media375 === true ? current = '.slider--375__slide-body-active' : media275 === true ? current = '.slider--275__slide-body-active' : null;
    // let current = '.slider__slide-body-active';
    animationSlidesAllActive(current);
  };
  (0,react.useEffect)(function () {
    var loadData = function loadData() {
      setItems(props.images);
    };
    loadData();
    if (media900 || media744 || media744l || media600 || media375 || media275) {
      return slidesAllActive();
    }
    ;
    if (autoPlay || autoPlaySliderProcCert) {
      sliderDefault();
      var current = sliderSlide(0);
      animationSlide(current, 0);
    }
    var getArrCountFirstSlideViewport = function getArrCountFirstSlideViewport() {
      var arr = [];
      var count = countSlides;
      for (var i = 0; i < props.images.length - count; i += count) {
        arr.push(i);
      }
      arr.push(props.images.length - count);
      return arr;
    };
    var arrFirstSlideViewport = getArrCountFirstSlideViewport();
    setArrFirstSlideViewport(arrFirstSlideViewport);
    animationButtonsViewport();
  }, [items, autoPlay, autoPlaySliderProcCert, media744l, media375]);
  (0,react.useLayoutEffect)(function () {
    var widthSlider = 0;
    var heightSlider = 0;
    // let widthSlide = 336;
    var widthSlide;
    var heightSlide;
    media1728 || media1300 || media1133 ? widthSlide = 336 : media900 || media744 || media744l || media600 || media600l || media375 || media275 ? widthSlide = 204 : null;
    media1728 || media1300 || media1133 ? heightSlide = 364 : media900 || media744 || media744l || media600 || media600l || media375 || media275 ? heightSlide = 222 : null;
    for (var i = 0; i < items.length; i++) {
      // widthSlide = slidesRef.current[i].current.offsetWidth;
      var width = widthSlide + 30;
      widthSlider += width;
    }
    heightSlider = sliderRef.current.offsetHeight;
    setSlideWidth(widthSlide);
    setSliderWidth(widthSlider - 30);
    setSliderHeight(heightSlide);
  }, [items]);
  var animationSlide = function animationSlide(current, time) {
    var pause = time;
    gsap/* default */.Ay.timeline().to(current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 0.5,
      delay: pause,
      ease: 'elastic'
    }).to(current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 1
    }).to(current, {
      opacity: 0.7,
      blur: 1,
      scale: 0.95,
      duration: 0.5,
      ease: 'elastic'
    }, "+=".concat(pause));
  };
  var animationSliderDefault = function animationSliderDefault(current) {
    gsap/* default */.Ay.timeline().to(current, {
      opacity: 0.7,
      blur: 1,
      scale: 0.95,
      duration: 0.01
    });
  };
  var animationSlidesAllActive = function animationSlidesAllActive(current) {
    gsap/* default */.Ay.timeline().to(current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 0.01
    });
  };
  var animationButtonsViewport = function animationButtonsViewport() {
    gsap/* default */.Ay.timeline().to(".buttons-viewport".concat(queryNumber), {
      opacity: 0,
      blur: 1,
      scale: 0,
      duration: 1,
      onComplete: function onComplete() {
        setCountFirstSlideViewport(slide);
      }
    }).to(".buttons-viewport".concat(queryNumber), {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 1
    });
  };
  var animationSliderViewport = function animationSliderViewport(current, offsetX, duration, delay) {
    gsap/* default */.Ay.timeline().to(".buttons-viewport".concat(queryNumber), {
      opacity: 0,
      blur: 1,
      scale: 0,
      duration: 1,
      onComplete: function onComplete() {
        slide === items.length - 1 ? setCountViewport(1) : setCountViewport(function (nextActiveStep) {
          return nextActiveStep + 1;
        });
      }
    }).to(current, {
      translateX: offsetX,
      duration: duration,
      delay: delay
    }).to(".buttons-viewport".concat(queryNumber), {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 1
    });
  };
  var animationSliderViewportHandle = function animationSliderViewportHandle(current, offsetX, duration, delay) {
    gsap/* default */.Ay.timeline().to(".buttons-viewport".concat(queryNumber), {
      opacity: 0,
      blur: 1,
      scale: 0,
      duration: 1
    }).to(current, {
      translateX: offsetX,
      duration: duration,
      delay: delay
    }).to(".buttons-viewport".concat(queryNumber), {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 1
    });
  };
  var animationSliderTouchMove = function animationSliderTouchMove(x) {
    gsap/* default */.Ay.timeline().to(sliderRef.current, {
      x: x,
      duration: 0.3
    });
  };
  var changeSlide = function changeSlide() {
    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    if (!autoPlay || !autoPlaySliderProcCert) return;
    if (media900 || media744 || media744l || media600 || media600l || media375 || media275) {
      return slidesAllActive();
    }
    ;
    var slideNumber = 0;
    if (slide + direction < 0) {
      slideNumber = items.length - 1;
    } else {
      slideNumber = (slide + direction) % items.length;
    }
    setSlide(slideNumber);
    var currentSlide = sliderSlide(slideNumber);
    var time = 0;
    slideNumber === countViewport * countSlides ? time = 2 : time = 0;
    setPauseAnimationSlide(time);
    animationSlide(currentSlide, time);
  };
  var goToSlide = function goToSlide(number) {
    setSlide(number % items.length);
    var k = number / countSlides;
    if (number === 0) {
      setCountViewport(1);
      setCountFirstSlideViewport(number);
    }
    if (number === k * countSlides) {
      setCountViewport(k + 1);
      setCountFirstSlideViewport(number);
    }
  };
  var handleTouchStart = function handleTouchStart(e) {
    var touchDown = e.touches[0].clientX;
    // console.log(touchDown);
    setTouchPosition(touchDown);
  };
  var handleTouchMove = function handleTouchMove(e) {
    if (touchPosition === null) return;
    var currentPosition = e.touches[0].clientX;
    var direction = touchPosition - currentPosition;
    // console.log(direction);

    setSliderDirection(direction);
    // console.log(sliderDirection);

    setTouchPosition(null);
  };
  (0,react.useEffect)(function () {
    if (media1728 === true || media1300 || media1133 === true) return;
    var containerWidth = props.containerWidth;
    var k = 204 - (containerWidth - Math.floor(containerWidth / 234) * 234);
    if (sliderDirection > 5) {
      if (sliderLockRight === false) {
        if (Math.abs(sliderPosition) < sliderWidth - containerWidth - 234) {
          animationSliderTouchMove(sliderPosition - 234);
          setSliderPosition(sliderPosition - 234);
        } else {
          animationSliderTouchMove(sliderPosition - k);
          setSliderPosition(sliderPosition - k);
          setSliderLockRight(true);
        }
      }
    }
    if (sliderDirection < -5 && sliderLockRight === true) {
      animationSliderTouchMove(sliderPosition + k);
      setSliderPosition(sliderPosition + k);
      setSliderLockRight(false);
    }
    if (sliderDirection < -5 && sliderLockRight === false) {
      if (sliderPosition !== 0) {
        animationSliderTouchMove(sliderPosition + 234);
        setSliderPosition(sliderPosition + 234);
      }
    }
  }, [sliderDirection]);
  var handleClickModalA = function handleClickModalA(number) {
    stopSliderProcCert();
    openModal({
      id: "".concat(modalId, "a"),
      className: "".concat(modalBodyClassName, "a"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentA */.an, {
        dataPhone: dataPhone,
        data: dataModalContentA_namespaceObject,
        sliderType: props.sliderType,
        sliderNumber: Number(number)
      })
    });
  };
  var handleSlideMouseEnter = function handleSlideMouseEnter(current) {
    setAutoPlay(false);
    gsap/* default */.Ay.to(current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 0.5,
      ease: "elastic"
    });
  };
  var handleSlideMouseLeave = function handleSlideMouseLeave(current) {
    gsap/* default */.Ay.to(current, {
      opacity: 0.7,
      blur: 1,
      scale: 0.95,
      duration: 0.5,
      ease: "elastic"
    });
    setAutoPlay(true);
  };
  var handleChangeViewport = function handleChangeViewport(number) {
    if (!autoPlay || !autoPlaySliderProcCert) return;
    if (media900 || media744 || media744l || media600 || media375 || media275) {
      return slidesAllActive();
    }
    ;
    setAutoPlay(false);
    goToSlide(number);
    var currentSlider = sliderRef.current;
    var ratio = sliderWidth / viewportWidth;
    var ratioFloor = Math.floor(ratio);
    var offsetX = -(sliderWidth - viewportWidth);
    var time = 0;
    if (number === 0) {
      animationSliderViewportHandle(currentSlider, 0, 1, 0);
    }
    if (number === items.length - countSlides) {
      animationSliderViewportHandle(currentSlider, -(sliderWidth - viewportWidth), 1, 0);
    }
    if (number > 0 && number < items.length - countSlides) {
      var k = number / countSlides;
      animationSliderViewportHandle(currentSlider, -(k * (viewportWidth + 30)), 1, 0);
    }
    var currentSlide = sliderSlide(number);
    animationSlide(currentSlide, 1);
    var timeout = setTimeout(function () {
      setAutoPlay(true);
    }, 1000);
    return function () {
      clearTimeout(timeout);
    };
  };
  (0,react.useEffect)(function () {
    if (!autoPlay || !autoPlaySliderProcCert) return;
    if (media900 || media744 || media744l || media600 || media600l || media375 || media275) {
      return slidesAllActive();
    }
    ;
    var currentSlider = sliderRef.current;
    var ratio = sliderWidth / viewportWidth;
    var ratioFloor = Math.floor(ratio);
    var offsetX = -(sliderWidth - viewportWidth);
    var time = 0;
    if (slide === 0) {
      animationButtonsViewport();
    }
    if (slide > countViewport * countSlides - 1 && ratioFloor === countViewport) {
      var run = function run() {
        animationSliderViewport(currentSlider, offsetX, 1, 0);
      };
      run();
      time = 4000;
      setCountFirstSlideViewport(slide);
    }
    if (slide > countViewport * countSlides - 1 && ratioFloor > countViewport) {
      var _run = function _run() {
        animationSliderViewport(currentSlider, -(countViewport * countSlides * (slideWidth + 30)), 1, 0);
      };
      _run();
      time = 4000;
      setCountFirstSlideViewport(slide);
    }
    if (slide === items.length - countSlides + 1) {
      setCountFirstSlideViewport(slide);
    }
    if (slide === items.length - 1) {
      var _run2 = function _run2() {
        animationSliderViewport(currentSlider, 0, 1, 2.5);
      };
      _run2();
      time = 4000;
      setCountViewport(1);
    }
    setPauseInterval(time);
    var interval = setInterval(function () {
      changeSlide(1);
    }, props.autoPlayTime + time);
    return function () {
      clearInterval(interval);
    };
  }, [items.length, slide, autoPlay, autoPlaySliderProcCert, media744l, media375]);
  var valueModelProvider = {
    goToSlide: goToSlide,
    changeSlide: changeSlide,
    handleChangeViewport: handleChangeViewport,
    autoPlay: autoPlay,
    slideCount: items.length,
    slideNumber: slide,
    countSlides: countSlides,
    countViewport: countViewport,
    countFirstSlideViewport: countFirstSlideViewport,
    pauseAnimationSlide: pauseAnimationSlide,
    pauseInterval: pauseInterval,
    arrFirstSlideViewport: arrFirstSlideViewport,
    items: items
  };
  if (slidesRef === null || sliderRef === null) throw new Error('ERROR_PROC_SLIDER_REFS');
  if (viewportWidth === null && typeof viewportWidth === 'undefined' || viewportHeight === null && typeof viewportHeight === 'undefined') throw new Error('ERROR_PROC_SLIDER_VIEWPORT');
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(ProcSliderContext.Provider, {
    value: valueModelProvider
  }, /*#__PURE__*/react.createElement("div", {
    id: "slider-procedures",
    ref: sliderRef,
    className: "".concat(sliderProceduresClass),
    style: {
      width: "".concat(sliderWidth, "px"),
      height: "".concat(sliderHeight, "px")
    },
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove
  }, propsData(props, props.images)[0].map(function (propi, i) {
    return /*#__PURE__*/react.createElement("div", {
      key: "uiDivProcedure".concat(i),
      id: "uiDivProcedure".concat(i),
      ref: slidesRef.current[i],
      className: sliderSlideAllClass,
      onMouseEnter: function onMouseEnter() {
        handleSlideMouseEnter(slidesRef.current[i].current);
      },
      onMouseLeave: function onMouseLeave() {
        handleSlideMouseLeave(slidesRef.current[i].current);
      }
      // onClick={() => { handleClickModalA() }}
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, _extends({
      key: "uiLinkProcedure".concat(i)
    }, propi, {
      className: "".concat(sliderLinkClass, " ").concat(sliderLinkProceduresClass),
      onClick: function onClick() {
        handleClickModalA(i);
      }
    }), propsData(props, props.images)[1].map(function (propj, j) {
      return i === j ? /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, _extends({
        key: "uiImgProcedure".concat(j)
      }, propj, {
        className: "".concat(sliderCardClass, " ").concat(sliderCardProceduresClass)
      })) : null;
    })));
  })), media1728 || media1300 || media1133 ? /*#__PURE__*/react.createElement("div", {
    className: buttonsClass
  }, /*#__PURE__*/react.createElement(SliderProcButtons, {
    typeButtons: 'pre'
  }), /*#__PURE__*/react.createElement("div", {
    className: dotsClass
  }, /*#__PURE__*/react.createElement(SliderProcDots, null)), /*#__PURE__*/react.createElement(SliderProcButtons, {
    typeButtons: 'next'
  })) : null));
};
ProcSliderProvider.propTypes = {
  autoPlay: (prop_types_default()).bool,
  autoPlayTime: (prop_types_default()).number,
  typeButtons: (prop_types_default()).string
};
ProcSliderProvider.defaultProps = {
  autoPlay: true,
  autoPlayTime: 2500
};
;// ./src/contexts/ProcSliderContext/index.js



/***/ }),

/***/ 1469:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Vs: () => (/* reexport safe */ _ModalContext__WEBPACK_IMPORTED_MODULE_0__.V),
/* harmony export */   Zn: () => (/* reexport safe */ _ModalContext__WEBPACK_IMPORTED_MODULE_0__.Z)
/* harmony export */ });
/* harmony import */ var _ModalContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9309);
/* harmony import */ var _ProcSliderContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5654);



/***/ }),

/***/ 8414:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var arrPhone = function arrPhone(props) {
  var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var arr = [];
  arr.push(props.dataPhone[index].code);
  props.dataPhone[index].number.split("").map(function (n) {
    return arr.push(n);
  });
  return arr;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrPhone);

/***/ }),

/***/ 7008:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var hrefPhone = function hrefPhone(props) {
  var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return "tel:".concat(props.dataPhone[index].code).concat(props.dataPhone[index].number);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hrefPhone);

/***/ }),

/***/ 8427:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _toArray(r) {
  return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
var propsData = function propsData(props) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [],
    _ref2 = _toArray(_ref),
    arg = _ref2.slice(0);
  var propsAll = props;
  var arrImages = _toConsumableArray(arg);
  arrImages.length !== -1 ? arrImages.map(function (value, i) {
    return propsAll.data[i].src = value;
  }) : null;
  return propsAll.data;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (propsData);

/***/ }),

/***/ 2622:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var funcQueryMedia = function funcQueryMedia() {
  return {
    query1728: "screen and (min-width: 1728px)",
    query1300: "screen and (min-width: 1300px) and (max-width: 1727px)",
    query1133: "screen and (min-width: 1133px) and (max-width: 1299px)",
    query900: "screen and (min-width: 900px) and (max-width: 1132px)",
    query744: "screen and (min-width: 744px) and (max-width: 899px) and (orientation: portrait)",
    // query744: "screen and (min-width: 744px) and (max-width: 899px) and (min-height: 745px)",
    query744l: "screen and (min-width: 744px) and (max-width: 899px) and (orientation: landscape)",
    // query744l: "screen and (min-width: 744px) and (max-width: 899px) and (max-height: 744px)",
    query600: "screen and (min-width: 600px) and (max-width: 743px) and (orientation: portrait)",
    // query600: "screen and (min-width: 600px) and (max-width: 743px) and (min-height: 601px)",
    query600l: "screen and (min-width: 600px) and (max-width: 743px) and (orientation: landscape)",
    // query600l: "screen and (min-width: 600px) and (max-width: 743px) and (max-height: 600px)",
    query375: "screen and (min-width: 375px) and (max-width: 599px) and (orientation: portrait)",
    // query375: "screen and (min-width: 375px) and (max-width: 599px)",
    query275: "screen and (min-width: 275px) and (max-width: 374px) and (orientation: portrait)",
    // query275: "screen and (min-width: 275px) and (max-width: 374px)",
    portrait: "orientation: portrait",
    landscape: "orientation: landscape"
  };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (funcQueryMedia);

/***/ }),

/***/ 9868:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6540);
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7597);


var funcQueryNumber = function funcQueryNumber() {
  var queryMedia = {
    query1728: "screen and (min-width: 1728px)",
    query1300: "screen and (min-width: 1300px) and (max-width: 1727px)",
    query1133: "screen and (min-width: 1133px) and (max-width: 1299px)",
    query900: "screen and (min-width: 900px) and (max-width: 1132px)",
    query744: "screen and (min-width: 744px) and (max-width: 899px) and (orientation: portrait)",
    // query744: "screen and (min-width: 744px) and (max-width: 899px) and (min-height: 745px)",
    query744l: "screen and (min-width: 744px) and (max-width: 899px) and (orientation: landscape)",
    // query744l: "screen and (min-width: 744px) and (max-width: 899px) and (max-height: 744px)",
    query600: "screen and (min-width: 600px) and (max-width: 743px) and (orientation: portrait)",
    // query600: "screen and (min-width: 600px) and (max-width: 743px) and (min-height: 601px)",
    query600l: "screen and (min-width: 600px) and (max-width: 743px) and (orientation: landscape)",
    // query600l: "screen and (min-width: 600px) and (max-width: 743px) and (max-height: 600px)",
    query375: "screen and (min-width: 375px) and (max-width: 599px) and (orientation: portrait)",
    // query375: "screen and (min-width: 375px) and (max-width: 599px)",
    query275: "screen and (min-width: 275px) and (max-width: 374px) and (orientation: portrait)",
    // query275: "screen and (min-width: 275px) and (max-width: 374px)",
    portrait: "orientation: portrait",
    landscape: "orientation: landscape"
  };
  var media1728 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query1728);
  var media1133 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query1133);
  var media744 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query744);
  var media744l = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query744l);
  var media375 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query375);
  var media275 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query275);
  var media1300 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query1300);
  var media900 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query900);
  var media600 = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query600);
  var media600l = (0,_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useMediaQuery */ .Ub)(queryMedia.query600l);
  var queryNumber = '';
  media1728 === true ? queryNumber = '--1728' : media1300 === true ? queryNumber = '--1300' : media1133 === true ? queryNumber = '--1133' : media900 === true ? queryNumber = '--900' : media744 === true ? queryNumber = '--744' : media744l === true ? queryNumber = '--744l' : media600 === true ? queryNumber = '--600' : media600l === true ? queryNumber = '--600l' : media375 === true ? queryNumber = '--375' : media275 === true ? queryNumber = '--275' : null;
  return queryNumber;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (funcQueryNumber);

/***/ }),

/***/ 4050:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  y: () => (/* reexport */ useScrollbarWidth)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/hooks/hook_scrollbar_width/useScrollbarWidth.js

var useScrollbarWidth = function useScrollbarWidth() {
  var didCompute = react.useRef(false);
  var widthRef = react.useRef(0);
  if (didCompute.current) return widthRef.current;
  var outer = document.createElement('div');
  outer.style.visibility = 'hidden';
  outer.style.overflow = 'scroll';
  outer.style.msOverflowStyle = 'scrollbar';
  document.body.appendChild(outer);
  var inner = document.createElement('div');
  outer.appendChild(inner);
  var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;
  outer.parentNode.removeChild(outer);
  didCompute.current = true;
  widthRef.current = scrollbarWidth;
  return scrollbarWidth;
};
;// ./src/hooks/hook_scrollbar_width/index.js


/***/ }),

/***/ 7597:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  yJ: () => (/* reexport */ useBodyScrollLock),
  ws: () => (/* reexport */ useLoadImageBg),
  Ub: () => (/* reexport */ useMediaQuery),
  yR: () => (/* reexport */ hook_scrollbar_width/* useScrollbarWidth */.y),
  xJ: () => (/* reexport */ useWindowHeight),
  SO: () => (/* reexport */ useWindowWidth)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./src/hooks/hooks_load_image/hook_load_image_bg/useLoadImageBg.js
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}

var useLoadImageBg = function useLoadImageBg(src) {
  var _useState = (0,react.useState)(null),
    _useState2 = _slicedToArray(_useState, 2),
    sourceLoaded = _useState2[0],
    setSourceLoaded = _useState2[1];
  (0,react.useEffect)(function () {
    var img = new Image();
    img.src = src;
    img.onload = function () {
      return setSourceLoaded(src);
    };
  }, [src]);
  return sourceLoaded;
};
;// ./src/hooks/hooks_load_image/hook_load_image_bg/index.js

;// ./src/hooks/hooks_load_image/index.js

;// ./src/hooks/hook_body_scroll_lock/useBodyScrollLock.js

var useBodyScrollLock = function useBodyScrollLock() {
  (0,react.useLayoutEffect)(function () {
    var originalStyle = window.getComputedStyle(document.body).overflow;
    document.body.style.overflow = "hidden";
    return function () {
      return document.body.style.overflow = originalStyle;
    };
  }, []);
};
;// ./src/hooks/hook_body_scroll_lock/index.js

// EXTERNAL MODULE: ./src/hooks/hook_scrollbar_width/index.js + 1 modules
var hook_scrollbar_width = __webpack_require__(4050);
;// ./src/hooks/hook_media_query/useMediaQuery.js
function useMediaQuery_slicedToArray(r, e) {
  return useMediaQuery_arrayWithHoles(r) || useMediaQuery_iterableToArrayLimit(r, e) || useMediaQuery_unsupportedIterableToArray(r, e) || useMediaQuery_nonIterableRest();
}
function useMediaQuery_nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useMediaQuery_unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return useMediaQuery_arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useMediaQuery_arrayLikeToArray(r, a) : void 0;
  }
}
function useMediaQuery_arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function useMediaQuery_iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function useMediaQuery_arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}

var mq = function mq(query) {
  return window.matchMedia(query).matches;
};
var useMediaQuery = function useMediaQuery(query) {
  var _useState = (0,react.useState)(mq(query)),
    _useState2 = useMediaQuery_slicedToArray(_useState, 2),
    isMatches = _useState2[0],
    setMatches = _useState2[1];
  var update = function update() {
    return setMatches(mq(query));
  };
  (0,react.useEffect)(function () {
    window.addEventListener("resize", update);
    return function () {
      window.removeEventListener("resize", update);
    };
  }, []);
  return isMatches;
};

// import { useState, useEffect } from 'react';

// export const useMediaQuery = (query) => {
//     const [isMatches, setIsMatches] = useState(false);

//     useEffect(() => {
//         const matchQueryList = window.matchMedia(query);

//         function handleChange(e) {
//             setIsMatches(e.matches);
//         }
//         matchQueryList.addEventListener("change", handleChange);
//         return () => {
//             matchQueryList.removeEventListener("change", handleChange);
//         };
//     }, [query]);

//     return isMatches;
// };
;// ./src/hooks/hook_media_query/index.js

;// ./src/hooks/hook_window_height/useWindowHeight.js
function useWindowHeight_slicedToArray(r, e) {
  return useWindowHeight_arrayWithHoles(r) || useWindowHeight_iterableToArrayLimit(r, e) || useWindowHeight_unsupportedIterableToArray(r, e) || useWindowHeight_nonIterableRest();
}
function useWindowHeight_nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useWindowHeight_unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return useWindowHeight_arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useWindowHeight_arrayLikeToArray(r, a) : void 0;
  }
}
function useWindowHeight_arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function useWindowHeight_iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function useWindowHeight_arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}

var useWindowHeight = function useWindowHeight() {
  var _useState = (0,react.useState)(window.innerHeight),
    _useState2 = useWindowHeight_slicedToArray(_useState, 2),
    windowHeight = _useState2[0],
    setWindowHeight = _useState2[1];
  (0,react.useEffect)(function () {
    var handleResize = function handleResize() {
      setWindowHeight(window.innerHeight);
    };
    window.addEventListener('resize', handleResize);
    return function () {
      window.removeEventListener('resize', handleResize);
    };
  });
  return windowHeight;
};
;// ./src/hooks/hook_window_height/index.js

;// ./src/hooks/hook_window_width/useWindowWidth.js
function useWindowWidth_slicedToArray(r, e) {
  return useWindowWidth_arrayWithHoles(r) || useWindowWidth_iterableToArrayLimit(r, e) || useWindowWidth_unsupportedIterableToArray(r, e) || useWindowWidth_nonIterableRest();
}
function useWindowWidth_nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useWindowWidth_unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return useWindowWidth_arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useWindowWidth_arrayLikeToArray(r, a) : void 0;
  }
}
function useWindowWidth_arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function useWindowWidth_iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function useWindowWidth_arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}

var useWindowWidth = function useWindowWidth() {
  var _useState = (0,react.useState)(window.innerWidth),
    _useState2 = useWindowWidth_slicedToArray(_useState, 2),
    windowWidth = _useState2[0],
    setWindowWidth = _useState2[1];
  (0,react.useEffect)(function () {
    var handleResize = function handleResize() {
      setWindowWidth(window.innerWidth);
    };
    window.addEventListener('resize', handleResize);
    return function () {
      window.removeEventListener('resize', handleResize);
    };
  });
  return windowWidth;
};
;// ./src/hooks/hook_window_width/index.js

;// ./src/hooks/index.js







/***/ }),

/***/ 2650:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H0: () => (/* binding */ CSSPlugin)
/* harmony export */ });
/* unused harmony exports default, _getBBox, _createElement, checkPrefix */
/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8607);
/*!
 * CSSPlugin 3.12.7
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/

/* eslint-disable */


var _win,
    _doc,
    _docElement,
    _pluginInitted,
    _tempDiv,
    _tempDivStyler,
    _recentSetterPlugin,
    _reverting,
    _windowExists = function _windowExists() {
  return typeof window !== "undefined";
},
    _transformProps = {},
    _RAD2DEG = 180 / Math.PI,
    _DEG2RAD = Math.PI / 180,
    _atan2 = Math.atan2,
    _bigNum = 1e8,
    _capsExp = /([A-Z])/g,
    _horizontalExp = /(left|right|width|margin|padding|x)/i,
    _complexExp = /[\s,\(]\S/,
    _propertyAliases = {
  autoAlpha: "opacity,visibility",
  scale: "scaleX,scaleY",
  alpha: "opacity"
},
    _renderCSSProp = function _renderCSSProp(ratio, data) {
  return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
},
    _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
  return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
},
    _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
  return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
},
    //if units change, we need a way to render the original unit/value when the tween goes all the way back to the beginning (ratio:0)
_renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
  var value = data.s + data.c * ratio;
  data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);
},
    _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
  return data.set(data.t, data.p, ratio ? data.e : data.b, data);
},
    _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
  return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
},
    _setterCSSStyle = function _setterCSSStyle(target, property, value) {
  return target.style[property] = value;
},
    _setterCSSProp = function _setterCSSProp(target, property, value) {
  return target.style.setProperty(property, value);
},
    _setterTransform = function _setterTransform(target, property, value) {
  return target._gsap[property] = value;
},
    _setterScale = function _setterScale(target, property, value) {
  return target._gsap.scaleX = target._gsap.scaleY = value;
},
    _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
  var cache = target._gsap;
  cache.scaleX = cache.scaleY = value;
  cache.renderTransform(ratio, cache);
},
    _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
  var cache = target._gsap;
  cache[property] = value;
  cache.renderTransform(ratio, cache);
},
    _transformProp = "transform",
    _transformOriginProp = _transformProp + "Origin",
    _saveStyle = function _saveStyle(property, isNotCSS) {
  var _this = this;

  var target = this.target,
      style = target.style,
      cache = target._gsap;

  if (property in _transformProps && style) {
    this.tfm = this.tfm || {};

    if (property !== "transform") {
      property = _propertyAliases[property] || property;
      ~property.indexOf(",") ? property.split(",").forEach(function (a) {
        return _this.tfm[a] = _get(target, a);
      }) : this.tfm[property] = cache.x ? cache[property] : _get(target, property); // note: scale would map to "scaleX,scaleY", thus we loop and apply them both.

      property === _transformOriginProp && (this.tfm.zOrigin = cache.zOrigin);
    } else {
      return _propertyAliases.transform.split(",").forEach(function (p) {
        return _saveStyle.call(_this, p, isNotCSS);
      });
    }

    if (this.props.indexOf(_transformProp) >= 0) {
      return;
    }

    if (cache.svg) {
      this.svgo = target.getAttribute("data-svg-origin");
      this.props.push(_transformOriginProp, isNotCSS, "");
    }

    property = _transformProp;
  }

  (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
},
    _removeIndependentTransforms = function _removeIndependentTransforms(style) {
  if (style.translate) {
    style.removeProperty("translate");
    style.removeProperty("scale");
    style.removeProperty("rotate");
  }
},
    _revertStyle = function _revertStyle() {
  var props = this.props,
      target = this.target,
      style = target.style,
      cache = target._gsap,
      i,
      p;

  for (i = 0; i < props.length; i += 3) {
    // stored like this: property, isNotCSS, value
    if (!props[i + 1]) {
      props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].substr(0, 2) === "--" ? props[i] : props[i].replace(_capsExp, "-$1").toLowerCase());
    } else if (props[i + 1] === 2) {
      // non-CSS value (function-based)
      target[props[i]](props[i + 2]);
    } else {
      // non-CSS value (not function-based)
      target[props[i]] = props[i + 2];
    }
  }

  if (this.tfm) {
    for (p in this.tfm) {
      cache[p] = this.tfm[p];
    }

    if (cache.svg) {
      cache.renderTransform();
      target.setAttribute("data-svg-origin", this.svgo || "");
    }

    i = _reverting();

    if ((!i || !i.isStart) && !style[_transformProp]) {
      _removeIndependentTransforms(style);

      if (cache.zOrigin && style[_transformOriginProp]) {
        style[_transformOriginProp] += " " + cache.zOrigin + "px"; // since we're uncaching, we must put the zOrigin back into the transformOrigin so that we can pull it out accurately when we parse again. Otherwise, we'd lose the z portion of the origin since we extract it to protect from Safari bugs.

        cache.zOrigin = 0;
        cache.renderTransform();
      }

      cache.uncache = 1; // if it's a startAt that's being reverted in the _initTween() of the core, we don't need to uncache transforms. This is purely a performance optimization.
    }
  }
},
    _getStyleSaver = function _getStyleSaver(target, properties) {
  var saver = {
    target: target,
    props: [],
    revert: _revertStyle,
    save: _saveStyle
  };
  target._gsap || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.core.getCache(target); // just make sure there's a _gsap cache defined because we read from it in _saveStyle() and it's more efficient to just check it here once.

  properties && target.style && target.nodeType && properties.split(",").forEach(function (p) {
    return saver.save(p);
  }); // make sure it's a DOM node too.

  return saver;
},
    _supports3D,
    _createElement = function _createElement(type, ns) {
  var e = _doc.createElementNS ? _doc.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making "style" inaccessible.

  return e && e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).
},
    _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
  var cs = getComputedStyle(target);
  return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || ""; //css variables may not need caps swapped out for dashes and lowercase.
},
    _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
    _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
  var e = element || _tempDiv,
      s = e.style,
      i = 5;

  if (property in s && !preferPrefix) {
    return property;
  }

  property = property.charAt(0).toUpperCase() + property.substr(1);

  while (i-- && !(_prefixes[i] + property in s)) {}

  return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
},
    _initCore = function _initCore() {
  if (_windowExists() && window.document) {
    _win = window;
    _doc = _win.document;
    _docElement = _doc.documentElement;
    _tempDiv = _createElement("div") || {
      style: {}
    };
    _tempDivStyler = _createElement("div");
    _transformProp = _checkPropPrefix(_transformProp);
    _transformOriginProp = _transformProp + "Origin";
    _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0"; //make sure to override certain properties that may contaminate measurements, in case the user has overreaching style sheets.

    _supports3D = !!_checkPropPrefix("perspective");
    _reverting = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.core.reverting;
    _pluginInitted = 1;
  }
},
    _getReparentedCloneBBox = function _getReparentedCloneBBox(target) {
  //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).
  var owner = target.ownerSVGElement,
      svg = _createElement("svg", owner && owner.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
      clone = target.cloneNode(true),
      bbox;

  clone.style.display = "block";
  svg.appendChild(clone);

  _docElement.appendChild(svg);

  try {
    bbox = clone.getBBox();
  } catch (e) {}

  svg.removeChild(clone);

  _docElement.removeChild(svg);

  return bbox;
},
    _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
  var i = attributesArray.length;

  while (i--) {
    if (target.hasAttribute(attributesArray[i])) {
      return target.getAttribute(attributesArray[i]);
    }
  }
},
    _getBBox = function _getBBox(target) {
  var bounds, cloned;

  try {
    bounds = target.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118
  } catch (error) {
    bounds = _getReparentedCloneBBox(target);
    cloned = 1;
  }

  bounds && (bounds.width || bounds.height) || cloned || (bounds = _getReparentedCloneBBox(target)); //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.

  return bounds && !bounds.width && !bounds.x && !bounds.y ? {
    x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
    y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
    width: 0,
    height: 0
  } : bounds;
},
    _isSVG = function _isSVG(e) {
  return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
},
    //reports if the element is an SVG on which getBBox() actually works
_removeProperty = function _removeProperty(target, property) {
  if (property) {
    var style = target.style,
        first2Chars;

    if (property in _transformProps && property !== _transformOriginProp) {
      property = _transformProp;
    }

    if (style.removeProperty) {
      first2Chars = property.substr(0, 2);

      if (first2Chars === "ms" || property.substr(0, 6) === "webkit") {
        //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be "ms-transform" instead of "-ms-transform" for IE9, for example)
        property = "-" + property;
      }

      style.removeProperty(first2Chars === "--" ? property : property.replace(_capsExp, "-$1").toLowerCase());
    } else {
      //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
      style.removeAttribute(property);
    }
  }
},
    _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
  var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
  plugin._pt = pt;
  pt.b = beginning;
  pt.e = end;

  plugin._props.push(property);

  return pt;
},
    _nonConvertibleUnits = {
  deg: 1,
  rad: 1,
  turn: 1
},
    _nonStandardLayouts = {
  grid: 1,
  flex: 1
},
    //takes a single value like 20px and converts it to the unit specified, like "%", returning only the numeric amount.
_convertToUnit = function _convertToUnit(target, property, value, unit) {
  var curValue = parseFloat(value) || 0,
      curUnit = (value + "").trim().substr((curValue + "").length) || "px",
      // some browsers leave extra whitespace at the beginning of CSS variables, hence the need to trim()
  style = _tempDiv.style,
      horizontal = _horizontalExp.test(property),
      isRootSVG = target.tagName.toLowerCase() === "svg",
      measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
      amount = 100,
      toPixels = unit === "px",
      toPercent = unit === "%",
      px,
      parent,
      cache,
      isSVG;

  if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
    return curValue;
  }

  curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
  isSVG = target.getCTM && _isSVG(target);

  if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
    px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(toPercent ? curValue / px * amount : curValue / 100 * px);
  }

  style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
  parent = unit !== "rem" && ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;

  if (isSVG) {
    parent = (target.ownerSVGElement || {}).parentNode;
  }

  if (!parent || parent === _doc || !parent.appendChild) {
    parent = _doc.body;
  }

  cache = parent._gsap;

  if (cache && toPercent && cache.width && horizontal && cache.time === _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._ticker */ .au.time && !cache.uncache) {
    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(curValue / cache.width * amount);
  } else {
    if (toPercent && (property === "height" || property === "width")) {
      // if we're dealing with width/height that's inside a container with padding and/or it's a flexbox/grid container, we must apply it to the target itself rather than the _tempDiv in order to ensure complete accuracy, factoring in the parent's padding.
      var v = target.style[property];
      target.style[property] = amount + unit;
      px = target[measureProperty];
      v ? target.style[property] = v : _removeProperty(target, property);
    } else {
      (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static"); // like for borderRadius, if it's a % we must have it relative to the target itself but that may not have position: relative or position: absolute in which case it'd go up the chain until it finds its offsetParent (bad). position: static protects against that.

      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";
    }

    if (horizontal && toPercent) {
      cache = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._getCache */ .a0)(parent);
      cache.time = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._ticker */ .au.time;
      cache.width = parent[measureProperty];
    }
  }

  return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
},
    _get = function _get(target, property, unit, uncache) {
  var value;
  _pluginInitted || _initCore();

  if (property in _propertyAliases && property !== "transform") {
    property = _propertyAliases[property];

    if (~property.indexOf(",")) {
      property = property.split(",")[0];
    }
  }

  if (_transformProps[property] && property !== "transform") {
    value = _parseTransform(target, uncache);
    value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
  } else {
    value = target.style[property];

    if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
      value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._getProperty */ .n)(target, property) || (property === "opacity" ? 1 : 0); // note: some browsers, like Firefox, don't report borderRadius correctly! Instead, it only reports every corner like  borderTopLeftRadius
    }
  }

  return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
},
    _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
  // note: we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
  if (!start || start === "none") {
    // some browsers like Safari actually PREFER the prefixed property and mis-report the unprefixed value like clipPath (BUG). In other words, even though clipPath exists in the style ("clipPath" in target.style) and it's set in the CSS properly (along with -webkit-clip-path), Safari reports clipPath as "none" whereas WebkitClipPath reports accurately like "ellipse(100% 0% at 50% 0%)", so in this case we must SWITCH to using the prefixed property instead. See https://gsap.com/forums/topic/18310-clippath-doesnt-work-on-ios/
    var p = _checkPropPrefix(prop, target, 1),
        s = p && _getComputedProperty(target, p, 1);

    if (s && s !== start) {
      prop = p;
      start = s;
    } else if (prop === "borderColor") {
      start = _getComputedProperty(target, "borderTopColor"); // Firefox bug: always reports "borderColor" as "", so we must fall back to borderTopColor. See https://gsap.com/forums/topic/24583-how-to-return-colors-that-i-had-after-reverse/
    }
  }

  var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(this._pt, target.style, prop, 0, 1, _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._renderComplexString */ .l1),
      index = 0,
      matchIndex = 0,
      a,
      result,
      startValues,
      startNum,
      color,
      startValue,
      endValue,
      endNum,
      chunk,
      endUnit,
      startUnit,
      endValues;
  pt.b = start;
  pt.e = end;
  start += ""; // ensure values are strings

  end += "";

  if (end === "auto") {
    startValue = target.style[prop];
    target.style[prop] = end;
    end = _getComputedProperty(target, prop) || end;
    startValue ? target.style[prop] = startValue : _removeProperty(target, prop);
  }

  a = [start, end];

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._colorStringFilter */ .Uc)(a); // pass an array with the starting and ending values and let the filter do whatever it needs to the values. If colors are found, it returns true and then we must match where the color shows up order-wise because for things like boxShadow, sometimes the browser provides the computed values with the color FIRST, but the user provides it with the color LAST, so flip them if necessary. Same for drop-shadow().


  start = a[0];
  end = a[1];
  startValues = start.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._numWithUnitExp */ .vM) || [];
  endValues = end.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._numWithUnitExp */ .vM) || [];

  if (endValues.length) {
    while (result = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._numWithUnitExp */ .vM.exec(end)) {
      endValue = result[0];
      chunk = end.substring(index, result.index);

      if (color) {
        color = (color + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
        color = 1;
      }

      if (endValue !== (startValue = startValues[matchIndex++] || "")) {
        startNum = parseFloat(startValue) || 0;
        startUnit = startValue.substr((startNum + "").length);
        endValue.charAt(1) === "=" && (endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._parseRelative */ .B0)(startNum, endValue) + startUnit);
        endNum = parseFloat(endValue);
        endUnit = endValue.substr((endNum + "").length);
        index = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._numWithUnitExp */ .vM.lastIndex - endUnit.length;

        if (!endUnit) {
          //if something like "perspective:300" is passed in and we must add a unit to the end
          endUnit = endUnit || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units[prop] || startUnit;

          if (index === end.length) {
            end += endUnit;
            pt.e += endUnit;
          }
        }

        if (startUnit !== endUnit) {
          startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
        } // these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.


        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
          s: startNum,
          c: endNum - startNum,
          m: color && color < 4 || prop === "zIndex" ? Math.round : 0
        };
      }
    }

    pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)
  } else {
    pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
  }

  _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._relExp */ .Ks.test(end) && (pt.e = 0); //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).

  this._pt = pt; //start the linked list with this new PropTween. Remember, we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within another plugin too, thus "this" would refer to the plugin.

  return pt;
},
    _keywordToPercent = {
  top: "0%",
  bottom: "100%",
  left: "0%",
  right: "100%",
  center: "50%"
},
    _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
  var split = value.split(" "),
      x = split[0],
      y = split[1] || "50%";

  if (x === "top" || x === "bottom" || y === "left" || y === "right") {
    //the user provided them in the wrong order, so flip them
    value = x;
    x = y;
    y = value;
  }

  split[0] = _keywordToPercent[x] || x;
  split[1] = _keywordToPercent[y] || y;
  return split.join(" ");
},
    _renderClearProps = function _renderClearProps(ratio, data) {
  if (data.tween && data.tween._time === data.tween._dur) {
    var target = data.t,
        style = target.style,
        props = data.u,
        cache = target._gsap,
        prop,
        clearTransforms,
        i;

    if (props === "all" || props === true) {
      style.cssText = "";
      clearTransforms = 1;
    } else {
      props = props.split(",");
      i = props.length;

      while (--i > -1) {
        prop = props[i];

        if (_transformProps[prop]) {
          clearTransforms = 1;
          prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
        }

        _removeProperty(target, prop);
      }
    }

    if (clearTransforms) {
      _removeProperty(target, _transformProp);

      if (cache) {
        cache.svg && target.removeAttribute("transform");
        style.scale = style.rotate = style.translate = "none";

        _parseTransform(target, 1); // force all the cached values back to "normal"/identity, otherwise if there's another tween that's already set to render transforms on this element, it could display the wrong values.


        cache.uncache = 1;

        _removeIndependentTransforms(style);
      }
    }
  }
},
    // note: specialProps should return 1 if (and only if) they have a non-zero priority. It indicates we need to sort the linked list.
_specialProps = {
  clearProps: function clearProps(plugin, target, property, endValue, tween) {
    if (tween.data !== "isFromStart") {
      var pt = plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(plugin._pt, target, property, 0, 0, _renderClearProps);
      pt.u = endValue;
      pt.pr = -10;
      pt.tween = tween;

      plugin._props.push(property);

      return 1;
    }
  }
  /* className feature (about 0.4kb gzipped).
  , className(plugin, target, property, endValue, tween) {
  	let _renderClassName = (ratio, data) => {
  			data.css.render(ratio, data.css);
  			if (!ratio || ratio === 1) {
  				let inline = data.rmv,
  					target = data.t,
  					p;
  				target.setAttribute("class", ratio ? data.e : data.b);
  				for (p in inline) {
  					_removeProperty(target, p);
  				}
  			}
  		},
  		_getAllStyles = (target) => {
  			let styles = {},
  				computed = getComputedStyle(target),
  				p;
  			for (p in computed) {
  				if (isNaN(p) && p !== "cssText" && p !== "length") {
  					styles[p] = computed[p];
  				}
  			}
  			_setDefaults(styles, _parseTransform(target, 1));
  			return styles;
  		},
  		startClassList = target.getAttribute("class"),
  		style = target.style,
  		cssText = style.cssText,
  		cache = target._gsap,
  		classPT = cache.classPT,
  		inlineToRemoveAtEnd = {},
  		data = {t:target, plugin:plugin, rmv:inlineToRemoveAtEnd, b:startClassList, e:(endValue.charAt(1) !== "=") ? endValue : startClassList.replace(new RegExp("(?:\\s|^)" + endValue.substr(2) + "(?![\\w-])"), "") + ((endValue.charAt(0) === "+") ? " " + endValue.substr(2) : "")},
  		changingVars = {},
  		startVars = _getAllStyles(target),
  		transformRelated = /(transform|perspective)/i,
  		endVars, p;
  	if (classPT) {
  		classPT.r(1, classPT.d);
  		_removeLinkedListItem(classPT.d.plugin, classPT, "_pt");
  	}
  	target.setAttribute("class", data.e);
  	endVars = _getAllStyles(target, true);
  	target.setAttribute("class", startClassList);
  	for (p in endVars) {
  		if (endVars[p] !== startVars[p] && !transformRelated.test(p)) {
  			changingVars[p] = endVars[p];
  			if (!style[p] && style[p] !== "0") {
  				inlineToRemoveAtEnd[p] = 1;
  			}
  		}
  	}
  	cache.classPT = plugin._pt = new PropTween(plugin._pt, target, "className", 0, 0, _renderClassName, data, 0, -11);
  	if (style.cssText !== cssText) { //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://gsap.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.
  		style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
  	}
  	_parseTransform(target, true); //to clear the caching of transforms
  	data.css = new gsap.plugins.css();
  	data.css.init(target, changingVars, tween);
  	plugin._props.push(...data.css._props);
  	return 1;
  }
  */

},

/*
 * --------------------------------------------------------------------------------------
 * TRANSFORMS
 * --------------------------------------------------------------------------------------
 */
_identity2DMatrix = [1, 0, 0, 1, 0, 0],
    _rotationalProperties = {},
    _isNullTransform = function _isNullTransform(value) {
  return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
},
    _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
  var matrixString = _getComputedProperty(target, _transformProp);

  return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._numExp */ .vX).map(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_);
},
    _getMatrix = function _getMatrix(target, force2D) {
  var cache = target._gsap || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._getCache */ .a0)(target),
      style = target.style,
      matrix = _getComputedTransformMatrixAsArray(target),
      parent,
      nextSibling,
      temp,
      addedToDOM;

  if (cache.svg && target.getAttribute("transform")) {
    temp = target.transform.baseVal.consolidate().matrix; //ensures that even complex values like "translate(50,60) rotate(135,0,0)" are parsed because it mashes it into a matrix.

    matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
    return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
  } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
    //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397
    //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not "none". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).
    temp = style.display;
    style.display = "block";
    parent = target.parentNode;

    if (!parent || !target.offsetParent && !target.getBoundingClientRect().width) {
      // note: in 3.3.0 we switched target.offsetParent to _doc.body.contains(target) to avoid [sometimes unnecessary] MutationObserver calls but that wasn't adequate because there are edge cases where nested position: fixed elements need to get reparented to accurately sense transforms. See https://github.com/greensock/GSAP/issues/388 and https://github.com/greensock/GSAP/issues/375. Note: position: fixed elements report a null offsetParent but they could also be invisible because they're in an ancestor with display: none, so we check getBoundingClientRect(). We only want to alter the DOM if we absolutely have to because it can cause iframe content to reload, like a Vimeo video.
      addedToDOM = 1; //flag

      nextSibling = target.nextElementSibling;

      _docElement.appendChild(target); //we must add it to the DOM in order to get values properly

    }

    matrix = _getComputedTransformMatrixAsArray(target);
    temp ? style.display = temp : _removeProperty(target, "display");

    if (addedToDOM) {
      nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
    }
  }

  return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
},
    _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
  var cache = target._gsap,
      matrix = matrixArray || _getMatrix(target, true),
      xOriginOld = cache.xOrigin || 0,
      yOriginOld = cache.yOrigin || 0,
      xOffsetOld = cache.xOffset || 0,
      yOffsetOld = cache.yOffset || 0,
      a = matrix[0],
      b = matrix[1],
      c = matrix[2],
      d = matrix[3],
      tx = matrix[4],
      ty = matrix[5],
      originSplit = origin.split(" "),
      xOrigin = parseFloat(originSplit[0]) || 0,
      yOrigin = parseFloat(originSplit[1]) || 0,
      bounds,
      determinant,
      x,
      y;

  if (!originIsAbsolute) {
    bounds = _getBBox(target);
    xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
    yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin); // if (!("xOrigin" in cache) && (xOrigin || yOrigin)) { // added in 3.12.3, reverted in 3.12.4; requires more exploration
    // 	xOrigin -= bounds.x;
    // 	yOrigin -= bounds.y;
    // }
  } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
    //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.
    x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
    y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
    xOrigin = x;
    yOrigin = y; // theory: we only had to do this for smoothing and it assumes that the previous one was not originIsAbsolute.
  }

  if (smooth || smooth !== false && cache.smooth) {
    tx = xOrigin - xOriginOld;
    ty = yOrigin - yOriginOld;
    cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
    cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
  } else {
    cache.xOffset = cache.yOffset = 0;
  }

  cache.xOrigin = xOrigin;
  cache.yOrigin = yOrigin;
  cache.smooth = !!smooth;
  cache.origin = origin;
  cache.originIsAbsolute = !!originIsAbsolute;
  target.style[_transformOriginProp] = "0px 0px"; //otherwise, if someone sets  an origin via CSS, it will likely interfere with the SVG transform attribute ones (because remember, we're baking the origin into the matrix() value).

  if (pluginToAddPropTweensTo) {
    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
  }

  target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
},
    _parseTransform = function _parseTransform(target, uncache) {
  var cache = target._gsap || new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .GSCache */ .n6(target);

  if ("x" in cache && !uncache && !cache.uncache) {
    return cache;
  }

  var style = target.style,
      invertedScaleX = cache.scaleX < 0,
      px = "px",
      deg = "deg",
      cs = getComputedStyle(target),
      origin = _getComputedProperty(target, _transformOriginProp) || "0",
      x,
      y,
      z,
      scaleX,
      scaleY,
      rotation,
      rotationX,
      rotationY,
      skewX,
      skewY,
      perspective,
      xOrigin,
      yOrigin,
      matrix,
      angle,
      cos,
      sin,
      a,
      b,
      c,
      d,
      a12,
      a22,
      t1,
      t2,
      t3,
      a13,
      a23,
      a33,
      a42,
      a43,
      a32;
  x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
  scaleX = scaleY = 1;
  cache.svg = !!(target.getCTM && _isSVG(target));

  if (cs.translate) {
    // accommodate independent transforms by combining them into normal ones.
    if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") {
      style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
    }

    style.scale = style.rotate = style.translate = "none";
  }

  matrix = _getMatrix(target, cache.svg);

  if (cache.svg) {
    if (cache.uncache) {
      // if cache.uncache is true (and maybe if origin is 0,0), we need to set element.style.transformOrigin = (cache.xOrigin - bbox.x) + "px " + (cache.yOrigin - bbox.y) + "px". Previously we let the data-svg-origin stay instead, but when introducing revert(), it complicated things.
      t2 = target.getBBox();
      origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
      t1 = "";
    } else {
      t1 = !uncache && target.getAttribute("data-svg-origin"); //  Remember, to work around browser inconsistencies we always force SVG elements' transformOrigin to 0,0 and offset the translation accordingly.
    }

    _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
  }

  xOrigin = cache.xOrigin || 0;
  yOrigin = cache.yOrigin || 0;

  if (matrix !== _identity2DMatrix) {
    a = matrix[0]; //a11

    b = matrix[1]; //a21

    c = matrix[2]; //a31

    d = matrix[3]; //a41

    x = a12 = matrix[4];
    y = a22 = matrix[5]; //2D matrix

    if (matrix.length === 6) {
      scaleX = Math.sqrt(a * a + b * b);
      scaleY = Math.sqrt(d * d + c * c);
      rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).

      skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
      skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));

      if (cache.svg) {
        x -= xOrigin - (xOrigin * a + yOrigin * c);
        y -= yOrigin - (xOrigin * b + yOrigin * d);
      } //3D matrix

    } else {
      a32 = matrix[6];
      a42 = matrix[7];
      a13 = matrix[8];
      a23 = matrix[9];
      a33 = matrix[10];
      a43 = matrix[11];
      x = matrix[12];
      y = matrix[13];
      z = matrix[14];
      angle = _atan2(a32, a33);
      rotationX = angle * _RAD2DEG; //rotationX

      if (angle) {
        cos = Math.cos(-angle);
        sin = Math.sin(-angle);
        t1 = a12 * cos + a13 * sin;
        t2 = a22 * cos + a23 * sin;
        t3 = a32 * cos + a33 * sin;
        a13 = a12 * -sin + a13 * cos;
        a23 = a22 * -sin + a23 * cos;
        a33 = a32 * -sin + a33 * cos;
        a43 = a42 * -sin + a43 * cos;
        a12 = t1;
        a22 = t2;
        a32 = t3;
      } //rotationY


      angle = _atan2(-c, a33);
      rotationY = angle * _RAD2DEG;

      if (angle) {
        cos = Math.cos(-angle);
        sin = Math.sin(-angle);
        t1 = a * cos - a13 * sin;
        t2 = b * cos - a23 * sin;
        t3 = c * cos - a33 * sin;
        a43 = d * sin + a43 * cos;
        a = t1;
        b = t2;
        c = t3;
      } //rotationZ


      angle = _atan2(b, a);
      rotation = angle * _RAD2DEG;

      if (angle) {
        cos = Math.cos(angle);
        sin = Math.sin(angle);
        t1 = a * cos + b * sin;
        t2 = a12 * cos + a22 * sin;
        b = b * cos - a * sin;
        a22 = a22 * cos - a12 * sin;
        a = t1;
        a12 = t2;
      }

      if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
        //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.
        rotationX = rotation = 0;
        rotationY = 180 - rotationY;
      }

      scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(Math.sqrt(a * a + b * b + c * c));
      scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(Math.sqrt(a22 * a22 + a32 * a32));
      angle = _atan2(a12, a22);
      skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
      perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
    }

    if (cache.svg) {
      //sense if there are CSS transforms applied on an SVG element in which case we must overwrite them when rendering. The transform attribute is more reliable cross-browser, but we can't just remove the CSS ones because they may be applied in a CSS rule somewhere (not just inline).
      t1 = target.getAttribute("transform");
      cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
      t1 && target.setAttribute("transform", t1);
    }
  }

  if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
    if (invertedScaleX) {
      scaleX *= -1;
      skewX += rotation <= 0 ? 180 : -180;
      rotation += rotation <= 0 ? 180 : -180;
    } else {
      scaleY *= -1;
      skewX += skewX <= 0 ? 180 : -180;
    }
  }

  uncache = uncache || cache.uncache;
  cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
  cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
  cache.z = z + px;
  cache.scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(scaleX);
  cache.scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(scaleY);
  cache.rotation = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(rotation) + deg;
  cache.rotationX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(rotationX) + deg;
  cache.rotationY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(rotationY) + deg;
  cache.skewX = skewX + deg;
  cache.skewY = skewY + deg;
  cache.transformPerspective = perspective + px;

  if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || !uncache && cache.zOrigin || 0) {
    style[_transformOriginProp] = _firstTwoOnly(origin);
  }

  cache.xOffset = cache.yOffset = 0;
  cache.force3D = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.force3D;
  cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
  cache.uncache = 0;
  return cache;
},
    _firstTwoOnly = function _firstTwoOnly(value) {
  return (value = value.split(" "))[0] + " " + value[1];
},
    //for handling transformOrigin values, stripping out the 3rd dimension
_addPxTranslate = function _addPxTranslate(target, start, value) {
  var unit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(start);
  return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
},
    _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
  cache.z = "0px";
  cache.rotationY = cache.rotationX = "0deg";
  cache.force3D = 0;

  _renderCSSTransforms(ratio, cache);
},
    _zeroDeg = "0deg",
    _zeroPx = "0px",
    _endParenthesis = ") ",
    _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
  var _ref = cache || this,
      xPercent = _ref.xPercent,
      yPercent = _ref.yPercent,
      x = _ref.x,
      y = _ref.y,
      z = _ref.z,
      rotation = _ref.rotation,
      rotationY = _ref.rotationY,
      rotationX = _ref.rotationX,
      skewX = _ref.skewX,
      skewY = _ref.skewY,
      scaleX = _ref.scaleX,
      scaleY = _ref.scaleY,
      transformPerspective = _ref.transformPerspective,
      force3D = _ref.force3D,
      target = _ref.target,
      zOrigin = _ref.zOrigin,
      transforms = "",
      use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true; // Safari has a bug that causes it not to render 3D transform-origin values properly, so we force the z origin to 0, record it in the cache, and then do the math here to offset the translate values accordingly (basically do the 3D transform-origin part manually)


  if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
    var angle = parseFloat(rotationY) * _DEG2RAD,
        a13 = Math.sin(angle),
        a33 = Math.cos(angle),
        cos;

    angle = parseFloat(rotationX) * _DEG2RAD;
    cos = Math.cos(angle);
    x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
    y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
    z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
  }

  if (transformPerspective !== _zeroPx) {
    transforms += "perspective(" + transformPerspective + _endParenthesis;
  }

  if (xPercent || yPercent) {
    transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
  }

  if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
    transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
  }

  if (rotation !== _zeroDeg) {
    transforms += "rotate(" + rotation + _endParenthesis;
  }

  if (rotationY !== _zeroDeg) {
    transforms += "rotateY(" + rotationY + _endParenthesis;
  }

  if (rotationX !== _zeroDeg) {
    transforms += "rotateX(" + rotationX + _endParenthesis;
  }

  if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
    transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
  }

  if (scaleX !== 1 || scaleY !== 1) {
    transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
  }

  target.style[_transformProp] = transforms || "translate(0, 0)";
},
    _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
  var _ref2 = cache || this,
      xPercent = _ref2.xPercent,
      yPercent = _ref2.yPercent,
      x = _ref2.x,
      y = _ref2.y,
      rotation = _ref2.rotation,
      skewX = _ref2.skewX,
      skewY = _ref2.skewY,
      scaleX = _ref2.scaleX,
      scaleY = _ref2.scaleY,
      target = _ref2.target,
      xOrigin = _ref2.xOrigin,
      yOrigin = _ref2.yOrigin,
      xOffset = _ref2.xOffset,
      yOffset = _ref2.yOffset,
      forceCSS = _ref2.forceCSS,
      tx = parseFloat(x),
      ty = parseFloat(y),
      a11,
      a21,
      a12,
      a22,
      temp;

  rotation = parseFloat(rotation);
  skewX = parseFloat(skewX);
  skewY = parseFloat(skewY);

  if (skewY) {
    //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.
    skewY = parseFloat(skewY);
    skewX += skewY;
    rotation += skewY;
  }

  if (rotation || skewX) {
    rotation *= _DEG2RAD;
    skewX *= _DEG2RAD;
    a11 = Math.cos(rotation) * scaleX;
    a21 = Math.sin(rotation) * scaleX;
    a12 = Math.sin(rotation - skewX) * -scaleY;
    a22 = Math.cos(rotation - skewX) * scaleY;

    if (skewX) {
      skewY *= _DEG2RAD;
      temp = Math.tan(skewX - skewY);
      temp = Math.sqrt(1 + temp * temp);
      a12 *= temp;
      a22 *= temp;

      if (skewY) {
        temp = Math.tan(skewY);
        temp = Math.sqrt(1 + temp * temp);
        a11 *= temp;
        a21 *= temp;
      }
    }

    a11 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(a11);
    a21 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(a21);
    a12 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(a12);
    a22 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(a22);
  } else {
    a11 = scaleX;
    a22 = scaleY;
    a21 = a12 = 0;
  }

  if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
    tx = _convertToUnit(target, "x", x, "px");
    ty = _convertToUnit(target, "y", y, "px");
  }

  if (xOrigin || yOrigin || xOffset || yOffset) {
    tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
    ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
  }

  if (xPercent || yPercent) {
    //The SVG spec doesn't support percentage-based translation in the "transform" attribute, so we merge it into the translation to simulate it.
    temp = target.getBBox();
    tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(tx + xPercent / 100 * temp.width);
    ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._round */ .E_)(ty + yPercent / 100 * temp.height);
  }

  temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
  target.setAttribute("transform", temp);
  forceCSS && (target.style[_transformProp] = temp); //some browsers prioritize CSS transforms over the transform attribute. When we sense that the user has CSS transforms applied, we must overwrite them this way (otherwise some browser simply won't render the transform attribute changes!)
},
    _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {
  var cap = 360,
      isString = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._isString */ .vQ)(endValue),
      endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
      change = endNum - startNum,
      finalValue = startNum + change + "deg",
      direction,
      pt;

  if (isString) {
    direction = endValue.split("_")[1];

    if (direction === "short") {
      change %= cap;

      if (change !== change % (cap / 2)) {
        change += change < 0 ? cap : -cap;
      }
    }

    if (direction === "cw" && change < 0) {
      change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;
    } else if (direction === "ccw" && change > 0) {
      change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;
    }
  }

  plugin._pt = pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
  pt.e = finalValue;
  pt.u = "deg";

  plugin._props.push(property);

  return pt;
},
    _assign = function _assign(target, source) {
  // Internet Explorer doesn't have Object.assign(), so we recreate it here.
  for (var p in source) {
    target[p] = source[p];
  }

  return target;
},
    _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
  //for handling cases where someone passes in a whole transform string, like transform: "scale(2, 3) rotate(20deg) translateY(30em)"
  var startCache = _assign({}, target._gsap),
      exclude = "perspective,force3D,transformOrigin,svgOrigin",
      style = target.style,
      endCache,
      p,
      startValue,
      endValue,
      startNum,
      endNum,
      startUnit,
      endUnit;

  if (startCache.svg) {
    startValue = target.getAttribute("transform");
    target.setAttribute("transform", "");
    style[_transformProp] = transforms;
    endCache = _parseTransform(target, 1);

    _removeProperty(target, _transformProp);

    target.setAttribute("transform", startValue);
  } else {
    startValue = getComputedStyle(target)[_transformProp];
    style[_transformProp] = transforms;
    endCache = _parseTransform(target, 1);
    style[_transformProp] = startValue;
  }

  for (p in _transformProps) {
    startValue = startCache[p];
    endValue = endCache[p];

    if (startValue !== endValue && exclude.indexOf(p) < 0) {
      //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.
      startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(startValue);
      endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(endValue);
      startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
      endNum = parseFloat(endValue);
      plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
      plugin._pt.u = endUnit || 0;

      plugin._props.push(p);
    }
  }

  _assign(endCache, startCache);
}; // handle splitting apart padding, margin, borderWidth, and borderRadius into their 4 components. Firefox, for example, won't report borderRadius correctly - it will only do borderTopLeftRadius and the other corners. We also want to handle paddingTop, marginLeft, borderRightWidth, etc.


(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._forEachName */ .fA)("padding,margin,Width,Radius", function (name, index) {
  var t = "Top",
      r = "Right",
      b = "Bottom",
      l = "Left",
      props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function (side) {
    return index < 2 ? name + side : "border" + side + name;
  });

  _specialProps[index > 1 ? "border" + name : name] = function (plugin, target, property, endValue, tween) {
    var a, vars;

    if (arguments.length < 4) {
      // getter, passed target, property, and unit (from _get())
      a = props.map(function (prop) {
        return _get(plugin, prop, property);
      });
      vars = a.join(" ");
      return vars.split(a[0]).length === 5 ? a[0] : vars;
    }

    a = (endValue + "").split(" ");
    vars = {};
    props.forEach(function (prop, i) {
      return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
    });
    plugin.init(target, vars, tween);
  };
});

var CSSPlugin = {
  name: "css",
  register: _initCore,
  targetTest: function targetTest(target) {
    return target.style && target.nodeType;
  },
  init: function init(target, vars, tween, index, targets) {
    var props = this._props,
        style = target.style,
        startAt = tween.vars.startAt,
        startValue,
        endValue,
        endNum,
        startNum,
        type,
        specialProp,
        p,
        startUnit,
        endUnit,
        relative,
        isTransformRelated,
        transformPropTween,
        cache,
        smooth,
        hasPriority,
        inlineProps;
    _pluginInitted || _initCore(); // we may call init() multiple times on the same plugin instance, like when adding special properties, so make sure we don't overwrite the revert data or inlineProps

    this.styles = this.styles || _getStyleSaver(target);
    inlineProps = this.styles.props;
    this.tween = tween;

    for (p in vars) {
      if (p === "autoRound") {
        continue;
      }

      endValue = vars[p];

      if (_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._plugins */ .wU[p] && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._checkPlugin */ .Zm)(p, vars, tween, index, target, targets)) {
        // plugins
        continue;
      }

      type = typeof endValue;
      specialProp = _specialProps[p];

      if (type === "function") {
        endValue = endValue.call(tween, index, target, targets);
        type = typeof endValue;
      }

      if (type === "string" && ~endValue.indexOf("random(")) {
        endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._replaceRandom */ .Vy)(endValue);
      }

      if (specialProp) {
        specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
      } else if (p.substr(0, 2) === "--") {
        //CSS variable
        startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
        endValue += "";
        _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._colorExp */ .qA.lastIndex = 0;

        if (!_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._colorExp */ .qA.test(startValue)) {
          // colors don't have units
          startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(startValue);
          endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(endValue);
        }

        endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
        this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
        props.push(p);
        inlineProps.push(p, 0, style[p]);
      } else if (type !== "undefined") {
        if (startAt && p in startAt) {
          // in case someone hard-codes a complex value as the start, like top: "calc(2vh / 2)". Without this, it'd use the computed value (always in px)
          startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
          (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._isString */ .vQ)(startValue) && ~startValue.indexOf("random(") && (startValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._replaceRandom */ .Vy)(startValue));
          (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(startValue + "") || startValue === "auto" || (startValue += _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units[p] || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(_get(target, p)) || ""); // for cases when someone passes in a unitless value like {x: 100}; if we try setting translate(100, 0px) it won't work.

          (startValue + "").charAt(1) === "=" && (startValue = _get(target, p)); // can't work with relative values
        } else {
          startValue = _get(target, p);
        }

        startNum = parseFloat(startValue);
        relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
        relative && (endValue = endValue.substr(2));
        endNum = parseFloat(endValue);

        if (p in _propertyAliases) {
          if (p === "autoAlpha") {
            //special case where we control the visibility along with opacity. We still allow the opacity value to pass through and get tweened.
            if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
              //if visibility is initially set to "hidden", we should interpret that as intent to make opacity 0 (a convenience)
              startNum = 0;
            }

            inlineProps.push("visibility", 0, style.visibility);

            _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
          }

          if (p !== "scale" && p !== "transform") {
            p = _propertyAliases[p];
            ~p.indexOf(",") && (p = p.split(",")[0]);
          }
        }

        isTransformRelated = p in _transformProps; //--- TRANSFORM-RELATED ---

        if (isTransformRelated) {
          this.styles.save(p);

          if (!transformPropTween) {
            cache = target._gsap;
            cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform); // if, for example, gsap.set(... {transform:"translateX(50vw)"}), the _get() call doesn't parse the transform, thus cache.renderTransform won't be set yet so force the parsing of the transform here.

            smooth = vars.smoothOrigin !== false && cache.smooth;
            transformPropTween = this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1); //the first time through, create the rendering PropTween so that it runs LAST (in the linked list, we keep adding to the beginning)

            transformPropTween.dep = 1; //flag it as dependent so that if things get killed/overwritten and this is the only PropTween left, we can safely kill the whole tween.
          }

          if (p === "scale") {
            this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(this._pt, cache, "scaleY", cache.scaleY, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._parseRelative */ .B0)(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);
            this._pt.u = 0;
            props.push("scaleY", p);
            p += "X";
          } else if (p === "transformOrigin") {
            inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
            endValue = _convertKeywordsToPercentages(endValue); //in case something like "left top" or "bottom right" is passed in. Convert to percentages.

            if (cache.svg) {
              _applySVGOrigin(target, endValue, 0, smooth, 0, this);
            } else {
              endUnit = parseFloat(endValue.split(" ")[2]) || 0; //handle the zOrigin separately!

              endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);

              _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
            }

            continue;
          } else if (p === "svgOrigin") {
            _applySVGOrigin(target, endValue, 1, smooth, 0, this);

            continue;
          } else if (p in _rotationalProperties) {
            _addRotationalPropTween(this, cache, p, startNum, relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._parseRelative */ .B0)(startNum, relative + endValue) : endValue);

            continue;
          } else if (p === "smoothOrigin") {
            _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);

            continue;
          } else if (p === "force3D") {
            cache[p] = endValue;
            continue;
          } else if (p === "transform") {
            _addRawTransformPTs(this, endValue, target);

            continue;
          }
        } else if (!(p in style)) {
          p = _checkPropPrefix(p) || p;
        }

        if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
          startUnit = (startValue + "").substr((startNum + "").length);
          endNum || (endNum = 0); // protect against NaN

          endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .getUnit */ .l_)(endValue) || (p in _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units ? _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units[p] : startUnit);
          startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
          this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .PropTween */ .J7(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._parseRelative */ .B0)(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
          this._pt.u = endUnit || 0;

          if (startUnit !== endUnit && endUnit !== "%") {
            //when the tween goes all the way back to the beginning, we need to revert it to the OLD/ORIGINAL value (with those units). We record that as a "b" (beginning) property and point to a render method that handles that. (performance optimization)
            this._pt.b = startValue;
            this._pt.r = _renderCSSPropWithBeginning;
          }
        } else if (!(p in style)) {
          if (p in target) {
            //maybe it's not a style - it could be a property added directly to an element in which case we'll try to animate that.
            this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
          } else if (p !== "parseTransform") {
            (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._missingPlugin */ .dg)(p, endValue);

            continue;
          }
        } else {
          _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
        }

        isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : typeof target[p] === "function" ? inlineProps.push(p, 2, target[p]()) : inlineProps.push(p, 1, startValue || target[p]));
        props.push(p);
      }
    }

    hasPriority && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._sortPropTweensByPriority */ .St)(this);
  },
  render: function render(ratio, data) {
    if (data.tween._time || !_reverting()) {
      var pt = data._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }
    } else {
      data.styles.revert();
    }
  },
  get: _get,
  aliases: _propertyAliases,
  getSetter: function getSetter(target, property, plugin) {
    //returns a setter function that accepts target, property, value and applies it accordingly. Remember, properties like "x" aren't as simple as target.style.property = value because they've got to be applied to a proxy object and then merged into a transform string in a renderer.
    var p = _propertyAliases[property];
    p && p.indexOf(",") < 0 && (property = p);
    return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._isUndefined */ .OF)(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._getSetter */ .Dx)(target, property);
  },
  core: {
    _removeProperty: _removeProperty,
    _getMatrix: _getMatrix
  }
};
_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.utils.checkPrefix = _checkPropPrefix;
_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.core.getStyleSaver = _getStyleSaver;

(function (positionAndScale, rotation, others, aliases) {
  var all = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._forEachName */ .fA)(positionAndScale + "," + rotation + "," + others, function (name) {
    _transformProps[name] = 1;
  });

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._forEachName */ .fA)(rotation, function (name) {
    _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units[name] = "deg";
    _rotationalProperties[name] = 1;
  });

  _propertyAliases[all[13]] = positionAndScale + "," + rotation;

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._forEachName */ .fA)(aliases, function (name) {
    var split = name.split(":");
    _propertyAliases[split[1]] = all[split[0]];
  });
})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");

(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._forEachName */ .fA)("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
  _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* ._config */ .Yz.units[name] = "px";
});

_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.registerPlugin(CSSPlugin);


/***/ }),

/***/ 8607:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B0: () => (/* binding */ _parseRelative),
/* harmony export */   Dx: () => (/* binding */ _getSetter),
/* harmony export */   E_: () => (/* binding */ _round),
/* harmony export */   J7: () => (/* binding */ PropTween),
/* harmony export */   Ks: () => (/* binding */ _relExp),
/* harmony export */   OF: () => (/* binding */ _isUndefined),
/* harmony export */   St: () => (/* binding */ _sortPropTweensByPriority),
/* harmony export */   Uc: () => (/* binding */ _colorStringFilter),
/* harmony export */   Vy: () => (/* binding */ _replaceRandom),
/* harmony export */   Yz: () => (/* binding */ _config),
/* harmony export */   Zm: () => (/* binding */ _checkPlugin),
/* harmony export */   a0: () => (/* binding */ _getCache),
/* harmony export */   au: () => (/* binding */ _ticker),
/* harmony export */   dg: () => (/* binding */ _missingPlugin),
/* harmony export */   fA: () => (/* binding */ _forEachName),
/* harmony export */   l1: () => (/* binding */ _renderComplexString),
/* harmony export */   l_: () => (/* binding */ getUnit),
/* harmony export */   n: () => (/* binding */ _getProperty),
/* harmony export */   n6: () => (/* binding */ GSCache),
/* harmony export */   os: () => (/* binding */ gsap),
/* harmony export */   qA: () => (/* binding */ _colorExp),
/* harmony export */   vM: () => (/* binding */ _numWithUnitExp),
/* harmony export */   vQ: () => (/* binding */ _isString),
/* harmony export */   vX: () => (/* binding */ _numExp),
/* harmony export */   wU: () => (/* binding */ _plugins)
/* harmony export */ });
/* unused harmony exports Animation, Timeline, Tween, Power0, Power1, Power2, Power3, Power4, Linear, Quad, Cubic, Quart, Quint, Strong, Elastic, Back, SteppedEase, Bounce, Sine, Expo, Circ, TweenMax, TweenLite, TimelineMax, TimelineLite, default, wrap, wrapYoyo, distribute, random, snap, normalize, clamp, splitColor, toArray, selector, mapRange, pipe, unitize, interpolate, shuffle, _setDefaults, _removeLinkedListItem, _roundModifier */
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*!
 * GSAP 3.12.7
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/

/* eslint-disable */
var _config = {
  autoSleep: 120,
  force3D: "auto",
  nullTargetWarn: 1,
  units: {
    lineHeight: ""
  }
},
    _defaults = {
  duration: .5,
  overwrite: false,
  delay: 0
},
    _suppressOverwrites,
    _reverting,
    _context,
    _bigNum = 1e8,
    _tinyNum = 1 / _bigNum,
    _2PI = Math.PI * 2,
    _HALF_PI = _2PI / 4,
    _gsID = 0,
    _sqrt = Math.sqrt,
    _cos = Math.cos,
    _sin = Math.sin,
    _isString = function _isString(value) {
  return typeof value === "string";
},
    _isFunction = function _isFunction(value) {
  return typeof value === "function";
},
    _isNumber = function _isNumber(value) {
  return typeof value === "number";
},
    _isUndefined = function _isUndefined(value) {
  return typeof value === "undefined";
},
    _isObject = function _isObject(value) {
  return typeof value === "object";
},
    _isNotFalse = function _isNotFalse(value) {
  return value !== false;
},
    _windowExists = function _windowExists() {
  return typeof window !== "undefined";
},
    _isFuncOrString = function _isFuncOrString(value) {
  return _isFunction(value) || _isString(value);
},
    _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function () {},
    // note: IE10 has ArrayBuffer, but NOT ArrayBuffer.isView().
_isArray = Array.isArray,
    _strictNumExp = /(?:-?\.?\d|\.)+/gi,
    //only numbers (including negatives and decimals) but NOT relative values.
_numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
    //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.
_numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
    _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
    //duplicate so that while we're looping through matches from exec(), it doesn't contaminate the lastIndex of _numExp which we use to search for colors too.
_relExp = /[+-]=-?[.\d]+/,
    _delimitedValueExp = /[^,'"\[\]\s]+/gi,
    // previously /[#\-+.]*\b[a-z\d\-=+%.]+/gi but didn't catch special characters.
_unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
    _globalTimeline,
    _win,
    _coreInitted,
    _doc,
    _globals = {},
    _installScope = {},
    _coreReady,
    _install = function _install(scope) {
  return (_installScope = _merge(scope, _globals)) && gsap;
},
    _missingPlugin = function _missingPlugin(property, value) {
  return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
},
    _warn = function _warn(message, suppress) {
  return !suppress && console.warn(message);
},
    _addGlobal = function _addGlobal(name, obj) {
  return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
},
    _emptyFunc = function _emptyFunc() {
  return 0;
},
    _startAtRevertConfig = {
  suppressEvents: true,
  isStart: true,
  kill: false
},
    _revertConfigNoKill = {
  suppressEvents: true,
  kill: false
},
    _revertConfig = {
  suppressEvents: true
},
    _reservedProps = {},
    _lazyTweens = [],
    _lazyLookup = {},
    _lastRenderedFrame,
    _plugins = {},
    _effects = {},
    _nextGCFrame = 30,
    _harnessPlugins = [],
    _callbackNames = "",
    _harness = function _harness(targets) {
  var target = targets[0],
      harnessPlugin,
      i;
  _isObject(target) || _isFunction(target) || (targets = [targets]);

  if (!(harnessPlugin = (target._gsap || {}).harness)) {
    // find the first target with a harness. We assume targets passed into an animation will be of similar type, meaning the same kind of harness can be used for them all (performance optimization)
    i = _harnessPlugins.length;

    while (i-- && !_harnessPlugins[i].targetTest(target)) {}

    harnessPlugin = _harnessPlugins[i];
  }

  i = targets.length;

  while (i--) {
    targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
  }

  return targets;
},
    _getCache = function _getCache(target) {
  return target._gsap || _harness(toArray(target))[0]._gsap;
},
    _getProperty = function _getProperty(target, property, v) {
  return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
},
    _forEachName = function _forEachName(names, func) {
  return (names = names.split(",")).forEach(func) || names;
},
    //split a comma-delimited list of names into an array, then run a forEach() function and return the split array (this is just a way to consolidate/shorten some code).
_round = function _round(value) {
  return Math.round(value * 100000) / 100000 || 0;
},
    _roundPrecise = function _roundPrecise(value) {
  return Math.round(value * 10000000) / 10000000 || 0;
},
    // increased precision mostly for timing values.
_parseRelative = function _parseRelative(start, value) {
  var operator = value.charAt(0),
      end = parseFloat(value.substr(2));
  start = parseFloat(start);
  return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
},
    _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
  //searches one array to find matches for any of the items in the toFind array. As soon as one is found, it returns true. It does NOT return all the matches; it's simply a boolean search.
  var l = toFind.length,
      i = 0;

  for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l;) {}

  return i < l;
},
    _lazyRender = function _lazyRender() {
  var l = _lazyTweens.length,
      a = _lazyTweens.slice(0),
      i,
      tween;

  _lazyLookup = {};
  _lazyTweens.length = 0;

  for (i = 0; i < l; i++) {
    tween = a[i];
    tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
  }
},
    _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
  _lazyTweens.length && !_reverting && _lazyRender();
  animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
  _lazyTweens.length && !_reverting && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.
},
    _numericIfPossible = function _numericIfPossible(value) {
  var n = parseFloat(value);
  return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
},
    _passThrough = function _passThrough(p) {
  return p;
},
    _setDefaults = function _setDefaults(obj, defaults) {
  for (var p in defaults) {
    p in obj || (obj[p] = defaults[p]);
  }

  return obj;
},
    _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {
  return function (obj, defaults) {
    for (var p in defaults) {
      p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults[p]);
    }
  };
},
    _merge = function _merge(base, toMerge) {
  for (var p in toMerge) {
    base[p] = toMerge[p];
  }

  return base;
},
    _mergeDeep = function _mergeDeep(base, toMerge) {
  for (var p in toMerge) {
    p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
  }

  return base;
},
    _copyExcluding = function _copyExcluding(obj, excluding) {
  var copy = {},
      p;

  for (p in obj) {
    p in excluding || (copy[p] = obj[p]);
  }

  return copy;
},
    _inheritDefaults = function _inheritDefaults(vars) {
  var parent = vars.parent || _globalTimeline,
      func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;

  if (_isNotFalse(vars.inherit)) {
    while (parent) {
      func(vars, parent.vars.defaults);
      parent = parent.parent || parent._dp;
    }
  }

  return vars;
},
    _arraysMatch = function _arraysMatch(a1, a2) {
  var i = a1.length,
      match = i === a2.length;

  while (match && i-- && a1[i] === a2[i]) {}

  return i < 0;
},
    _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
  if (firstProp === void 0) {
    firstProp = "_first";
  }

  if (lastProp === void 0) {
    lastProp = "_last";
  }

  var prev = parent[lastProp],
      t;

  if (sortBy) {
    t = child[sortBy];

    while (prev && prev[sortBy] > t) {
      prev = prev._prev;
    }
  }

  if (prev) {
    child._next = prev._next;
    prev._next = child;
  } else {
    child._next = parent[firstProp];
    parent[firstProp] = child;
  }

  if (child._next) {
    child._next._prev = child;
  } else {
    parent[lastProp] = child;
  }

  child._prev = prev;
  child.parent = child._dp = parent;
  return child;
},
    _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
  if (firstProp === void 0) {
    firstProp = "_first";
  }

  if (lastProp === void 0) {
    lastProp = "_last";
  }

  var prev = child._prev,
      next = child._next;

  if (prev) {
    prev._next = next;
  } else if (parent[firstProp] === child) {
    parent[firstProp] = next;
  }

  if (next) {
    next._prev = prev;
  } else if (parent[lastProp] === child) {
    parent[lastProp] = prev;
  }

  child._next = child._prev = child.parent = null; // don't delete the _dp just so we can revert if necessary. But parent should be null to indicate the item isn't in a linked list.
},
    _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
  child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove && child.parent.remove(child);
  child._act = 0;
},
    _uncache = function _uncache(animation, child) {
  if (animation && (!child || child._end > animation._dur || child._start < 0)) {
    // performance optimization: if a child animation is passed in we should only uncache if that child EXTENDS the animation (its end time is beyond the end)
    var a = animation;

    while (a) {
      a._dirty = 1;
      a = a.parent;
    }
  }

  return animation;
},
    _recacheAncestors = function _recacheAncestors(animation) {
  var parent = animation.parent;

  while (parent && parent.parent) {
    //sometimes we must force a re-sort of all children and update the duration/totalDuration of all ancestor timelines immediately in case, for example, in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.
    parent._dirty = 1;
    parent.totalDuration();
    parent = parent.parent;
  }

  return animation;
},
    _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {
  return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
},
    _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
  return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
},
    _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
  return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
},
    // feed in the totalTime and cycleDuration and it'll return the cycle (iteration minus 1) and if the playhead is exactly at the very END, it will NOT bump up to the next cycle.
_animationCycle = function _animationCycle(tTime, cycleDuration) {
  var whole = Math.floor(tTime = _roundPrecise(tTime / cycleDuration));
  return tTime && whole === tTime ? whole - 1 : whole;
},
    _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
  return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
},
    _setEnd = function _setEnd(animation) {
  return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
},
    _alignPlayhead = function _alignPlayhead(animation, totalTime) {
  // adjusts the animation's _start and _end according to the provided totalTime (only if the parent's smoothChildTiming is true and the animation isn't paused). It doesn't do any rendering or forcing things back into parent timelines, etc. - that's what totalTime() is for.
  var parent = animation._dp;

  if (parent && parent.smoothChildTiming && animation._ts) {
    animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));

    _setEnd(animation);

    parent._dirty || _uncache(parent, animation); //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.
  }

  return animation;
},

/*
_totalTimeToTime = (clampedTotalTime, duration, repeat, repeatDelay, yoyo) => {
	let cycleDuration = duration + repeatDelay,
		time = _round(clampedTotalTime % cycleDuration);
	if (time > duration) {
		time = duration;
	}
	return (yoyo && (~~(clampedTotalTime / cycleDuration) & 1)) ? duration - time : time;
},
*/
_postAddChecks = function _postAddChecks(timeline, child) {
  var t;

  if (child._time || !child._dur && child._initted || child._start < timeline._time && (child._dur || !child.add)) {
    // in case, for example, the _start is moved on a tween that has already rendered, or if it's being inserted into a timeline BEFORE where the playhead is currently. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning. Special case: if it's a timeline (has .add() method) and no duration, we can skip rendering because the user may be populating it AFTER adding it to a parent timeline (unconventional, but possible, and we wouldn't want it to get removed if the parent's autoRemoveChildren is true).
    t = _parentToChildTotalTime(timeline.rawTime(), child);

    if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
      child.render(t, true);
    }
  } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.


  if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
    //in case any of the ancestors had completed but should now be enabled...
    if (timeline._dur < timeline.duration()) {
      t = timeline;

      while (t._dp) {
        t.rawTime() >= 0 && t.totalTime(t._tTime); //moves the timeline (shifts its startTime) if necessary, and also enables it. If it's currently zero, though, it may not be scheduled to render until later so there's no need to force it to align with the current playhead position. Only move to catch up with the playhead.

        t = t._dp;
      }
    }

    timeline._zTime = -_tinyNum; // helps ensure that the next render() will be forced (crossingStart = true in render()), even if the duration hasn't changed (we're adding a child which would need to get rendered). Definitely an edge case. Note: we MUST do this AFTER the loop above where the totalTime() might trigger a render() because this _addToTimeline() method gets called from the Animation constructor, BEFORE tweens even record their targets, etc. so we wouldn't want things to get triggered in the wrong order.
  }
},
    _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
  child.parent && _removeFromParent(child);
  child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
  child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));

  _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);

  _isFromOrFromStart(child) || (timeline._recent = child);
  skipChecks || _postAddChecks(timeline, child);
  timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime); // if the timeline is reversed and the new child makes it longer, we may need to adjust the parent's _start (push it back)

  return timeline;
},
    _scrollTrigger = function _scrollTrigger(animation, trigger) {
  return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
},
    _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {
  _initTween(tween, time, tTime);

  if (!tween._initted) {
    return 1;
  }

  if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
    _lazyTweens.push(tween);

    tween._lazy = [tTime, suppressEvents];
    return 1;
  }
},
    _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {
  var parent = _ref.parent;
  return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));
},
    // check parent's _lock because when a timeline repeats/yoyos and does its artificial wrapping, we shouldn't force the ratio back to 0
_isFromOrFromStart = function _isFromOrFromStart(_ref2) {
  var data = _ref2.data;
  return data === "isFromStart" || data === "isStart";
},
    _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
  var prevRatio = tween.ratio,
      ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1,
      // if the tween or its parent is reversed and the totalTime is 0, we should go to a ratio of 0. Edge case: if a from() or fromTo() stagger tween is placed later in a timeline, the "startAt" zero-duration tween could initially render at a time when the parent timeline's playhead is technically BEFORE where this tween is, so make sure that any "from" and "fromTo" startAt tweens are rendered the first time at a ratio of 1.
  repeatDelay = tween._rDelay,
      tTime = 0,
      pt,
      iteration,
      prevIteration;

  if (repeatDelay && tween._repeat) {
    // in case there's a zero-duration tween that has a repeat with a repeatDelay
    tTime = _clamp(0, tween._tDur, totalTime);
    iteration = _animationCycle(tTime, repeatDelay);
    tween._yoyo && iteration & 1 && (ratio = 1 - ratio);

    if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
      // if iteration changed
      prevRatio = 1 - ratio;
      tween.vars.repeatRefresh && tween._initted && tween.invalidate();
    }
  }

  if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
    if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {
      // if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.
      return;
    }

    prevIteration = tween._zTime;
    tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0); // when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.

    suppressEvents || (suppressEvents = totalTime && !prevIteration); // if it was rendered previously at exactly 0 (_zTime) and now the playhead is moving away, DON'T fire callbacks otherwise they'll seem like duplicates.

    tween.ratio = ratio;
    tween._from && (ratio = 1 - ratio);
    tween._time = 0;
    tween._tTime = tTime;
    pt = tween._pt;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }

    totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
    tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
    tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");

    if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
      ratio && _removeFromParent(tween, 1);

      if (!suppressEvents && !_reverting) {
        _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);

        tween._prom && tween._prom();
      }
    }
  } else if (!tween._zTime) {
    tween._zTime = totalTime;
  }
},
    _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
  var child;

  if (time > prevTime) {
    child = animation._first;

    while (child && child._start <= time) {
      if (child.data === "isPause" && child._start > prevTime) {
        return child;
      }

      child = child._next;
    }
  } else {
    child = animation._last;

    while (child && child._start >= time) {
      if (child.data === "isPause" && child._start < prevTime) {
        return child;
      }

      child = child._prev;
    }
  }
},
    _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {
  var repeat = animation._repeat,
      dur = _roundPrecise(duration) || 0,
      totalProgress = animation._tTime / animation._tDur;
  totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
  animation._dur = dur;
  animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
  totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
  animation.parent && _setEnd(animation);
  skipUncache || _uncache(animation.parent, animation);
  return animation;
},
    _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
  return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
},
    _zeroPosition = {
  _start: 0,
  endTime: _emptyFunc,
  totalDuration: _emptyFunc
},
    _parsePosition = function _parsePosition(animation, position, percentAnimation) {
  var labels = animation.labels,
      recent = animation._recent || _zeroPosition,
      clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur,
      //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.
  i,
      offset,
      isPercent;

  if (_isString(position) && (isNaN(position) || position in labels)) {
    //if the string is a number like "1", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).
    offset = position.charAt(0);
    isPercent = position.substr(-1) === "%";
    i = position.indexOf("=");

    if (offset === "<" || offset === ">") {
      i >= 0 && (position = position.replace(/=/, ""));
      return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
    }

    if (i < 0) {
      position in labels || (labels[position] = clippedDuration);
      return labels[position];
    }

    offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));

    if (isPercent && percentAnimation) {
      offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
    }

    return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
  }

  return position == null ? clippedDuration : +position;
},
    _createTweenType = function _createTweenType(type, params, timeline) {
  var isLegacy = _isNumber(params[1]),
      varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
      vars = params[varsIndex],
      irVars,
      parent;

  isLegacy && (vars.duration = params[1]);
  vars.parent = timeline;

  if (type) {
    irVars = vars;
    parent = timeline;

    while (parent && !("immediateRender" in irVars)) {
      // inheritance hasn't happened yet, but someone may have set a default in an ancestor timeline. We could do vars.immediateRender = _isNotFalse(_inheritDefaults(vars).immediateRender) but that'd exact a slight performance penalty because _inheritDefaults() also runs in the Tween constructor. We're paying a small kb price here to gain speed.
      irVars = parent.vars.defaults || {};
      parent = _isNotFalse(parent.vars.inherit) && parent.parent;
    }

    vars.immediateRender = _isNotFalse(irVars.immediateRender);
    type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1]; // "from" vars
  }

  return new Tween(params[0], vars, params[varsIndex + 1]);
},
    _conditionalReturn = function _conditionalReturn(value, func) {
  return value || value === 0 ? func(value) : func;
},
    _clamp = function _clamp(min, max, value) {
  return value < min ? min : value > max ? max : value;
},
    getUnit = function getUnit(value, v) {
  return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
},
    // note: protect against padded numbers as strings, like "100.100". That shouldn't return "00" as the unit. If it's numeric, return no unit.
clamp = function clamp(min, max, value) {
  return _conditionalReturn(value, function (v) {
    return _clamp(min, max, v);
  });
},
    _slice = [].slice,
    _isArrayLike = function _isArrayLike(value, nonEmpty) {
  return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
},
    _flatten = function _flatten(ar, leaveStrings, accumulator) {
  if (accumulator === void 0) {
    accumulator = [];
  }

  return ar.forEach(function (value) {
    var _accumulator;

    return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
  }) || accumulator;
},
    //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.
toArray = function toArray(value, scope, leaveStrings) {
  return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
},
    selector = function selector(value) {
  value = toArray(value)[0] || _warn("Invalid scope") || {};
  return function (v) {
    var el = value.current || value.nativeElement || value;
    return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
  };
},
    shuffle = function shuffle(a) {
  return a.sort(function () {
    return .5 - Math.random();
  });
},
    // alternative that's a bit faster and more reliably diverse but bigger:   for (let j, v, i = a.length; i; j = (Math.random() * i) | 0, v = a[--i], a[i] = a[j], a[j] = v); return a;
//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following
distribute = function distribute(v) {
  if (_isFunction(v)) {
    return v;
  }

  var vars = _isObject(v) ? v : {
    each: v
  },
      //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total "amount" that's chunked out among them all.
  ease = _parseEase(vars.ease),
      from = vars.from || 0,
      base = parseFloat(vars.base) || 0,
      cache = {},
      isDecimal = from > 0 && from < 1,
      ratios = isNaN(from) || isDecimal,
      axis = vars.axis,
      ratioX = from,
      ratioY = from;

  if (_isString(from)) {
    ratioX = ratioY = {
      center: .5,
      edges: .5,
      end: 1
    }[from] || 0;
  } else if (!isDecimal && ratios) {
    ratioX = from[0];
    ratioY = from[1];
  }

  return function (i, target, a) {
    var l = (a || vars).length,
        distances = cache[l],
        originX,
        originY,
        x,
        y,
        d,
        j,
        max,
        min,
        wrapAt;

    if (!distances) {
      wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];

      if (!wrapAt) {
        max = -_bigNum;

        while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {}

        wrapAt < l && wrapAt--;
      }

      distances = cache[l] = [];
      originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
      originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
      max = 0;
      min = _bigNum;

      for (j = 0; j < l; j++) {
        x = j % wrapAt - originX;
        y = originY - (j / wrapAt | 0);
        distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
        d > max && (max = d);
        d < min && (min = d);
      }

      from === "random" && shuffle(distances);
      distances.max = max - min;
      distances.min = min;
      distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
      distances.b = l < 0 ? base - l : base;
      distances.u = getUnit(vars.amount || vars.each) || 0; //unit

      ease = ease && l < 0 ? _invertEase(ease) : ease;
    }

    l = (distances[i] - distances.min) / distances.max || 0;
    return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u; //round in order to work around floating point errors
  };
},
    _roundModifier = function _roundModifier(v) {
  //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.
  var p = Math.pow(10, ((v + "").split(".")[1] || "").length); //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed())

  return function (raw) {
    var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);

    return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw)); // n - n % 1 replaces Math.floor() in order to handle negative values properly. For example, Math.floor(-150.00000000000003) is 151!
  };
},
    snap = function snap(snapTo, value) {
  var isArray = _isArray(snapTo),
      radius,
      is2D;

  if (!isArray && _isObject(snapTo)) {
    radius = isArray = snapTo.radius || _bigNum;

    if (snapTo.values) {
      snapTo = toArray(snapTo.values);

      if (is2D = !_isNumber(snapTo[0])) {
        radius *= radius; //performance optimization so we don't have to Math.sqrt() in the loop.
      }
    } else {
      snapTo = _roundModifier(snapTo.increment);
    }
  }

  return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
    is2D = snapTo(raw);
    return Math.abs(is2D - raw) <= radius ? is2D : raw;
  } : function (raw) {
    var x = parseFloat(is2D ? raw.x : raw),
        y = parseFloat(is2D ? raw.y : 0),
        min = _bigNum,
        closest = 0,
        i = snapTo.length,
        dx,
        dy;

    while (i--) {
      if (is2D) {
        dx = snapTo[i].x - x;
        dy = snapTo[i].y - y;
        dx = dx * dx + dy * dy;
      } else {
        dx = Math.abs(snapTo[i] - x);
      }

      if (dx < min) {
        min = dx;
        closest = i;
      }
    }

    closest = !radius || min <= radius ? snapTo[closest] : raw;
    return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
  });
},
    random = function random(min, max, roundingIncrement, returnFunction) {
  return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
    return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
  });
},
    pipe = function pipe() {
  for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
    functions[_key] = arguments[_key];
  }

  return function (value) {
    return functions.reduce(function (v, f) {
      return f(v);
    }, value);
  };
},
    unitize = function unitize(func, unit) {
  return function (value) {
    return func(parseFloat(value)) + (unit || getUnit(value));
  };
},
    normalize = function normalize(min, max, value) {
  return mapRange(min, max, 0, 1, value);
},
    _wrapArray = function _wrapArray(a, wrapper, value) {
  return _conditionalReturn(value, function (index) {
    return a[~~wrapper(index)];
  });
},
    wrap = function wrap(min, max, value) {
  // NOTE: wrap() CANNOT be an arrow function! A very odd compiling bug causes problems (unrelated to GSAP).
  var range = max - min;
  return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function (value) {
    return (range + (value - min) % range) % range + min;
  });
},
    wrapYoyo = function wrapYoyo(min, max, value) {
  var range = max - min,
      total = range * 2;
  return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function (value) {
    value = (total + (value - min) % total) % total || 0;
    return min + (value > range ? total - value : value);
  });
},
    _replaceRandom = function _replaceRandom(value) {
  //replaces all occurrences of random(...) in a string with the calculated random value. can be a range like random(-100, 100, 5) or an array like random([0, 100, 500])
  var prev = 0,
      s = "",
      i,
      nums,
      end,
      isArray;

  while (~(i = value.indexOf("random(", prev))) {
    end = value.indexOf(")", i);
    isArray = value.charAt(i + 7) === "[";
    nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
    s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
    prev = end + 1;
  }

  return s + value.substr(prev, value.length - prev);
},
    mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
  var inRange = inMax - inMin,
      outRange = outMax - outMin;
  return _conditionalReturn(value, function (value) {
    return outMin + ((value - inMin) / inRange * outRange || 0);
  });
},
    interpolate = function interpolate(start, end, progress, mutate) {
  var func = isNaN(start + end) ? 0 : function (p) {
    return (1 - p) * start + p * end;
  };

  if (!func) {
    var isString = _isString(start),
        master = {},
        p,
        i,
        interpolators,
        l,
        il;

    progress === true && (mutate = 1) && (progress = null);

    if (isString) {
      start = {
        p: start
      };
      end = {
        p: end
      };
    } else if (_isArray(start) && !_isArray(end)) {
      interpolators = [];
      l = start.length;
      il = l - 2;

      for (i = 1; i < l; i++) {
        interpolators.push(interpolate(start[i - 1], start[i])); //build the interpolators up front as a performance optimization so that when the function is called many times, it can just reuse them.
      }

      l--;

      func = function func(p) {
        p *= l;
        var i = Math.min(il, ~~p);
        return interpolators[i](p - i);
      };

      progress = end;
    } else if (!mutate) {
      start = _merge(_isArray(start) ? [] : {}, start);
    }

    if (!interpolators) {
      for (p in end) {
        _addPropTween.call(master, start, p, "get", end[p]);
      }

      func = function func(p) {
        return _renderPropTweens(p, master) || (isString ? start.p : start);
      };
    }
  }

  return _conditionalReturn(progress, func);
},
    _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
  //used for nextLabel() and previousLabel()
  var labels = timeline.labels,
      min = _bigNum,
      p,
      distance,
      label;

  for (p in labels) {
    distance = labels[p] - fromTime;

    if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
      label = p;
      min = distance;
    }
  }

  return label;
},
    _callback = function _callback(animation, type, executeLazyFirst) {
  var v = animation.vars,
      callback = v[type],
      prevContext = _context,
      context = animation._ctx,
      params,
      scope,
      result;

  if (!callback) {
    return;
  }

  params = v[type + "Params"];
  scope = v.callbackScope || animation;
  executeLazyFirst && _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.

  context && (_context = context);
  result = params ? callback.apply(scope, params) : callback.call(scope);
  _context = prevContext;
  return result;
},
    _interrupt = function _interrupt(animation) {
  _removeFromParent(animation);

  animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
  animation.progress() < 1 && _callback(animation, "onInterrupt");
  return animation;
},
    _quickTween,
    _registerPluginQueue = [],
    _createPlugin = function _createPlugin(config) {
  if (!config) return;
  config = !config.name && config["default"] || config; // UMD packaging wraps things oddly, so for example MotionPathHelper becomes {MotionPathHelper:MotionPathHelper, default:MotionPathHelper}.

  if (_windowExists() || config.headless) {
    // edge case: some build tools may pass in a null/undefined value
    var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
      this._props = [];
    } : config,
        //in case someone passes in an object that's not a plugin, like CustomEase
    instanceDefaults = {
      init: _emptyFunc,
      render: _renderPropTweens,
      add: _addPropTween,
      kill: _killPropTweensOf,
      modifier: _addPluginModifier,
      rawVars: 0
    },
        statics = {
      targetTest: 0,
      get: 0,
      getSetter: _getSetter,
      aliases: {},
      register: 0
    };

    _wake();

    if (config !== Plugin) {
      if (_plugins[name]) {
        return;
      }

      _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics)); //static methods


      _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics))); //instance methods


      _plugins[Plugin.prop = name] = Plugin;

      if (config.targetTest) {
        _harnessPlugins.push(Plugin);

        _reservedProps[name] = 1;
      }

      name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin"; //for the global name. "motionPath" should become MotionPathPlugin
    }

    _addGlobal(name, Plugin);

    config.register && config.register(gsap, Plugin, PropTween);
  } else {
    _registerPluginQueue.push(config);
  }
},

/*
 * --------------------------------------------------------------------------------------
 * COLORS
 * --------------------------------------------------------------------------------------
 */
_255 = 255,
    _colorLookup = {
  aqua: [0, _255, _255],
  lime: [0, _255, 0],
  silver: [192, 192, 192],
  black: [0, 0, 0],
  maroon: [128, 0, 0],
  teal: [0, 128, 128],
  blue: [0, 0, _255],
  navy: [0, 0, 128],
  white: [_255, _255, _255],
  olive: [128, 128, 0],
  yellow: [_255, _255, 0],
  orange: [_255, 165, 0],
  gray: [128, 128, 128],
  purple: [128, 0, 128],
  green: [0, 128, 0],
  red: [_255, 0, 0],
  pink: [_255, 192, 203],
  cyan: [0, _255, _255],
  transparent: [_255, _255, _255, 0]
},
    // possible future idea to replace the hard-coded color name values - put this in the ticker.wake() where we set the _doc:
// let ctx = _doc.createElement("canvas").getContext("2d");
// _forEachName("aqua,lime,silver,black,maroon,teal,blue,navy,white,olive,yellow,orange,gray,purple,green,red,pink,cyan", color => {ctx.fillStyle = color; _colorLookup[color] = splitColor(ctx.fillStyle)});
_hue = function _hue(h, m1, m2) {
  h += h < 0 ? 1 : h > 1 ? -1 : 0;
  return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
},
    splitColor = function splitColor(v, toHSL, forceAlpha) {
  var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0,
      r,
      g,
      b,
      h,
      s,
      l,
      max,
      min,
      d,
      wasHSL;

  if (!a) {
    if (v.substr(-1) === ",") {
      //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
      v = v.substr(0, v.length - 1);
    }

    if (_colorLookup[v]) {
      a = _colorLookup[v];
    } else if (v.charAt(0) === "#") {
      if (v.length < 6) {
        //for shorthand like #9F0 or #9F0F (could have alpha)
        r = v.charAt(1);
        g = v.charAt(2);
        b = v.charAt(3);
        v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
      }

      if (v.length === 9) {
        // hex with alpha, like #fd5e53ff
        a = parseInt(v.substr(1, 6), 16);
        return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
      }

      v = parseInt(v.substr(1), 16);
      a = [v >> 16, v >> 8 & _255, v & _255];
    } else if (v.substr(0, 3) === "hsl") {
      a = wasHSL = v.match(_strictNumExp);

      if (!toHSL) {
        h = +a[0] % 360 / 360;
        s = +a[1] / 100;
        l = +a[2] / 100;
        g = l <= .5 ? l * (s + 1) : l + s - l * s;
        r = l * 2 - g;
        a.length > 3 && (a[3] *= 1); //cast as number

        a[0] = _hue(h + 1 / 3, r, g);
        a[1] = _hue(h, r, g);
        a[2] = _hue(h - 1 / 3, r, g);
      } else if (~v.indexOf("=")) {
        //if relative values are found, just return the raw strings with the relative prefixes in place.
        a = v.match(_numExp);
        forceAlpha && a.length < 4 && (a[3] = 1);
        return a;
      }
    } else {
      a = v.match(_strictNumExp) || _colorLookup.transparent;
    }

    a = a.map(Number);
  }

  if (toHSL && !wasHSL) {
    r = a[0] / _255;
    g = a[1] / _255;
    b = a[2] / _255;
    max = Math.max(r, g, b);
    min = Math.min(r, g, b);
    l = (max + min) / 2;

    if (max === min) {
      h = s = 0;
    } else {
      d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
      h *= 60;
    }

    a[0] = ~~(h + .5);
    a[1] = ~~(s * 100 + .5);
    a[2] = ~~(l * 100 + .5);
  }

  forceAlpha && a.length < 4 && (a[3] = 1);
  return a;
},
    _colorOrderData = function _colorOrderData(v) {
  // strips out the colors from the string, finds all the numeric slots (with units) and returns an array of those. The Array also has a "c" property which is an Array of the index values where the colors belong. This is to help work around issues where there's a mis-matched order of color/numeric data like drop-shadow(#f00 0px 1px 2px) and drop-shadow(0x 1px 2px #f00). This is basically a helper function used in _formatColors()
  var values = [],
      c = [],
      i = -1;
  v.split(_colorExp).forEach(function (v) {
    var a = v.match(_numWithUnitExp) || [];
    values.push.apply(values, a);
    c.push(i += a.length + 1);
  });
  values.c = c;
  return values;
},
    _formatColors = function _formatColors(s, toHSL, orderMatchData) {
  var result = "",
      colors = (s + result).match(_colorExp),
      type = toHSL ? "hsla(" : "rgba(",
      i = 0,
      c,
      shell,
      d,
      l;

  if (!colors) {
    return s;
  }

  colors = colors.map(function (color) {
    return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
  });

  if (orderMatchData) {
    d = _colorOrderData(s);
    c = orderMatchData.c;

    if (c.join(result) !== d.c.join(result)) {
      shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
      l = shell.length - 1;

      for (; i < l; i++) {
        result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
      }
    }
  }

  if (!shell) {
    shell = s.split(_colorExp);
    l = shell.length - 1;

    for (; i < l; i++) {
      result += shell[i] + colors[i];
    }
  }

  return result + shell[l];
},
    _colorExp = function () {
  var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
      //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.,
  p;

  for (p in _colorLookup) {
    s += "|" + p + "\\b";
  }

  return new RegExp(s + ")", "gi");
}(),
    _hslExp = /hsl[a]?\(/,
    _colorStringFilter = function _colorStringFilter(a) {
  var combined = a.join(" "),
      toHSL;
  _colorExp.lastIndex = 0;

  if (_colorExp.test(combined)) {
    toHSL = _hslExp.test(combined);
    a[1] = _formatColors(a[1], toHSL);
    a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1])); // make sure the order of numbers/colors match with the END value.

    return true;
  }
},

/*
 * --------------------------------------------------------------------------------------
 * TICKER
 * --------------------------------------------------------------------------------------
 */
_tickerActive,
    _ticker = function () {
  var _getTime = Date.now,
      _lagThreshold = 500,
      _adjustedLag = 33,
      _startTime = _getTime(),
      _lastUpdate = _startTime,
      _gap = 1000 / 240,
      _nextTime = _gap,
      _listeners = [],
      _id,
      _req,
      _raf,
      _self,
      _delta,
      _i,
      _tick = function _tick(v) {
    var elapsed = _getTime() - _lastUpdate,
        manual = v === true,
        overlap,
        dispatch,
        time,
        frame;

    (elapsed > _lagThreshold || elapsed < 0) && (_startTime += elapsed - _adjustedLag);
    _lastUpdate += elapsed;
    time = _lastUpdate - _startTime;
    overlap = time - _nextTime;

    if (overlap > 0 || manual) {
      frame = ++_self.frame;
      _delta = time - _self.time * 1000;
      _self.time = time = time / 1000;
      _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
      dispatch = 1;
    }

    manual || (_id = _req(_tick)); //make sure the request is made before we dispatch the "tick" event so that timing is maintained. Otherwise, if processing the "tick" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.

    if (dispatch) {
      for (_i = 0; _i < _listeners.length; _i++) {
        // use _i and check _listeners.length instead of a variable because a listener could get removed during the loop, and if that happens to an element less than the current index, it'd throw things off in the loop.
        _listeners[_i](time, _delta, frame, v);
      }
    }
  };

  _self = {
    time: 0,
    frame: 0,
    tick: function tick() {
      _tick(true);
    },
    deltaRatio: function deltaRatio(fps) {
      return _delta / (1000 / (fps || 60));
    },
    wake: function wake() {
      if (_coreReady) {
        if (!_coreInitted && _windowExists()) {
          _win = _coreInitted = window;
          _doc = _win.document || {};
          _globals.gsap = gsap;
          (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);

          _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});

          _registerPluginQueue.forEach(_createPlugin);
        }

        _raf = typeof requestAnimationFrame !== "undefined" && requestAnimationFrame;
        _id && _self.sleep();

        _req = _raf || function (f) {
          return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);
        };

        _tickerActive = 1;

        _tick(2);
      }
    },
    sleep: function sleep() {
      (_raf ? cancelAnimationFrame : clearTimeout)(_id);
      _tickerActive = 0;
      _req = _emptyFunc;
    },
    lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
      _lagThreshold = threshold || Infinity; // zero should be interpreted as basically unlimited

      _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);
    },
    fps: function fps(_fps) {
      _gap = 1000 / (_fps || 240);
      _nextTime = _self.time * 1000 + _gap;
    },
    add: function add(callback, once, prioritize) {
      var func = once ? function (t, d, f, v) {
        callback(t, d, f, v);

        _self.remove(func);
      } : callback;

      _self.remove(callback);

      _listeners[prioritize ? "unshift" : "push"](func);

      _wake();

      return func;
    },
    remove: function remove(callback, i) {
      ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
    },
    _listeners: _listeners
  };
  return _self;
}(),
    _wake = function _wake() {
  return !_tickerActive && _ticker.wake();
},
    //also ensures the core classes are initialized.

/*
* -------------------------------------------------
* EASING
* -------------------------------------------------
*/
_easeMap = {},
    _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
    _quotesExp = /["']/g,
    _parseObjectInString = function _parseObjectInString(value) {
  //takes a string like "{wiggles:10, type:anticipate})" and turns it into a real object. Notice it ends in ")" and includes the {} wrappers. This is because we only use this function for parsing ease configs and prioritized optimization rather than reusability.
  var obj = {},
      split = value.substr(1, value.length - 3).split(":"),
      key = split[0],
      i = 1,
      l = split.length,
      index,
      val,
      parsedVal;

  for (; i < l; i++) {
    val = split[i];
    index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
    parsedVal = val.substr(0, index);
    obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
    key = val.substr(index + 1).trim();
  }

  return obj;
},
    _valueInParentheses = function _valueInParentheses(value) {
  var open = value.indexOf("(") + 1,
      close = value.indexOf(")"),
      nested = value.indexOf("(", open);
  return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
},
    _configEaseFromString = function _configEaseFromString(name) {
  //name can be a string like "elastic.out(1,0.5)", and pass in _easeMap as obj and it'll parse it out and call the actual function like _easeMap.Elastic.easeOut.config(1,0.5). It will also parse custom ease strings as long as CustomEase is loaded and registered (internally as _easeMap._CE).
  var split = (name + "").split("("),
      ease = _easeMap[split[0]];
  return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
},
    _invertEase = function _invertEase(ease) {
  return function (p) {
    return 1 - ease(1 - p);
  };
},
    // allow yoyoEase to be set in children and have those affected when the parent/ancestor timeline yoyos.
_propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {
  var child = timeline._first,
      ease;

  while (child) {
    if (child instanceof Timeline) {
      _propagateYoyoEase(child, isYoyo);
    } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
      if (child.timeline) {
        _propagateYoyoEase(child.timeline, isYoyo);
      } else {
        ease = child._ease;
        child._ease = child._yEase;
        child._yEase = ease;
        child._yoyo = isYoyo;
      }
    }

    child = child._next;
  }
},
    _parseEase = function _parseEase(ease, defaultEase) {
  return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
},
    _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
  if (easeOut === void 0) {
    easeOut = function easeOut(p) {
      return 1 - easeIn(1 - p);
    };
  }

  if (easeInOut === void 0) {
    easeInOut = function easeInOut(p) {
      return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
    };
  }

  var ease = {
    easeIn: easeIn,
    easeOut: easeOut,
    easeInOut: easeInOut
  },
      lowercaseName;

  _forEachName(names, function (name) {
    _easeMap[name] = _globals[name] = ease;
    _easeMap[lowercaseName = name.toLowerCase()] = easeOut;

    for (var p in ease) {
      _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
    }
  });

  return ease;
},
    _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
  return function (p) {
    return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
  };
},
    _configElastic = function _configElastic(type, amplitude, period) {
  var p1 = amplitude >= 1 ? amplitude : 1,
      //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.
  p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1),
      p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
      easeOut = function easeOut(p) {
    return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
  },
      ease = type === "out" ? easeOut : type === "in" ? function (p) {
    return 1 - easeOut(1 - p);
  } : _easeInOutFromOut(easeOut);

  p2 = _2PI / p2; //precalculate to optimize

  ease.config = function (amplitude, period) {
    return _configElastic(type, amplitude, period);
  };

  return ease;
},
    _configBack = function _configBack(type, overshoot) {
  if (overshoot === void 0) {
    overshoot = 1.70158;
  }

  var easeOut = function easeOut(p) {
    return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
  },
      ease = type === "out" ? easeOut : type === "in" ? function (p) {
    return 1 - easeOut(1 - p);
  } : _easeInOutFromOut(easeOut);

  ease.config = function (overshoot) {
    return _configBack(type, overshoot);
  };

  return ease;
}; // a cheaper (kb and cpu) but more mild way to get a parameterized weighted ease by feeding in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEase = ratio => {
// 	let y = 0.5 + ratio / 2;
// 	return p => (2 * (1 - p) * p * y + p * p);
// },
// a stronger (but more expensive kb/cpu) parameterized weighted ease that lets you feed in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEaseStrong = ratio => {
// 	ratio = .5 + ratio / 2;
// 	let o = 1 / 3 * (ratio < .5 ? ratio : 1 - ratio),
// 		b = ratio - o,
// 		c = ratio + o;
// 	return p => p === 1 ? p : 3 * b * (1 - p) * (1 - p) * p + 3 * c * (1 - p) * p * p + p * p * p;
// };


_forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i) {
  var power = i < 5 ? i + 1 : i;

  _insertEase(name + ",Power" + (power - 1), i ? function (p) {
    return Math.pow(p, power);
  } : function (p) {
    return p;
  }, function (p) {
    return 1 - Math.pow(1 - p, power);
  }, function (p) {
    return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
  });
});

_easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;

_insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());

(function (n, c) {
  var n1 = 1 / c,
      n2 = 2 * n1,
      n3 = 2.5 * n1,
      easeOut = function easeOut(p) {
    return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
  };

  _insertEase("Bounce", function (p) {
    return 1 - easeOut(1 - p);
  }, easeOut);
})(7.5625, 2.75);

_insertEase("Expo", function (p) {
  return Math.pow(2, 10 * (p - 1)) * p + p * p * p * p * p * p * (1 - p);
}); // previously 2 ** (10 * (p - 1)) but that doesn't end up with the value quite at the right spot so we do a blended ease to ensure it lands where it should perfectly.


_insertEase("Circ", function (p) {
  return -(_sqrt(1 - p * p) - 1);
});

_insertEase("Sine", function (p) {
  return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
});

_insertEase("Back", _configBack("in"), _configBack("out"), _configBack());

_easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
  config: function config(steps, immediateStart) {
    if (steps === void 0) {
      steps = 1;
    }

    var p1 = 1 / steps,
        p2 = steps + (immediateStart ? 0 : 1),
        p3 = immediateStart ? 1 : 0,
        max = 1 - _tinyNum;
    return function (p) {
      return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
    };
  }
};
_defaults.ease = _easeMap["quad.out"];

_forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
  return _callbackNames += name + "," + name + "Params,";
});
/*
 * --------------------------------------------------------------------------------------
 * CACHE
 * --------------------------------------------------------------------------------------
 */


var GSCache = function GSCache(target, harness) {
  this.id = _gsID++;
  target._gsap = this;
  this.target = target;
  this.harness = harness;
  this.get = harness ? harness.get : _getProperty;
  this.set = harness ? harness.getSetter : _getSetter;
};
/*
 * --------------------------------------------------------------------------------------
 * ANIMATION
 * --------------------------------------------------------------------------------------
 */

var Animation = /*#__PURE__*/function () {
  function Animation(vars) {
    this.vars = vars;
    this._delay = +vars.delay || 0;

    if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
      // TODO: repeat: Infinity on a timeline's children must flag that timeline internally and affect its totalDuration, otherwise it'll stop in the negative direction when reaching the start.
      this._rDelay = vars.repeatDelay || 0;
      this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
    }

    this._ts = 1;

    _setDuration(this, +vars.duration, 1, 1);

    this.data = vars.data;

    if (_context) {
      this._ctx = _context;

      _context.data.push(this);
    }

    _tickerActive || _ticker.wake();
  }

  var _proto = Animation.prototype;

  _proto.delay = function delay(value) {
    if (value || value === 0) {
      this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
      this._delay = value;
      return this;
    }

    return this._delay;
  };

  _proto.duration = function duration(value) {
    return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
  };

  _proto.totalDuration = function totalDuration(value) {
    if (!arguments.length) {
      return this._tDur;
    }

    this._dirty = 0;
    return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
  };

  _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
    _wake();

    if (!arguments.length) {
      return this._tTime;
    }

    var parent = this._dp;

    if (parent && parent.smoothChildTiming && this._ts) {
      _alignPlayhead(this, _totalTime);

      !parent._dp || parent.parent || _postAddChecks(parent, this); // edge case: if this is a child of a timeline that already completed, for example, we must re-activate the parent.
      //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The start of that child would get pushed out, but one of the ancestors may have completed.

      while (parent && parent.parent) {
        if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
          parent.totalTime(parent._tTime, true);
        }

        parent = parent.parent;
      }

      if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
        //if the animation doesn't have a parent, put it back into its last parent (recorded as _dp for exactly cases like this). Limit to parents with autoRemoveChildren (like globalTimeline) so that if the user manually removes an animation from a timeline and then alters its playhead, it doesn't get added back in.
        _addToTimeline(this._dp, this, this._start - this._delay);
      }
    }

    if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
      // check for _ptLookup on a Tween instance to ensure it has actually finished being instantiated, otherwise if this.reverse() gets called in the Animation constructor, it could trigger a render() here even though the _targets weren't populated, thus when _init() is called there won't be any PropTweens (it'll act like the tween is non-functional)
      this._ts || (this._pTime = _totalTime); // otherwise, if an animation is paused, then the playhead is moved back to zero, then resumed, it'd revert back to the original time at the pause
      //if (!this._lock) { // avoid endless recursion (not sure we need this yet or if it's worth the performance hit)
      //   this._lock = 1;

      _lazySafeRender(this, _totalTime, suppressEvents); //   this._lock = 0;
      //}

    }

    return this;
  };

  _proto.time = function time(value, suppressEvents) {
    return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time; // note: if the modulus results in 0, the playhead could be exactly at the end or the beginning, and we always defer to the END with a non-zero value, otherwise if you set the time() to the very end (duration()), it would render at the START!
  };

  _proto.totalProgress = function totalProgress(value, suppressEvents) {
    return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.rawTime() >= 0 && this._initted ? 1 : 0;
  };

  _proto.progress = function progress(value, suppressEvents) {
    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.rawTime() > 0 ? 1 : 0;
  };

  _proto.iteration = function iteration(value, suppressEvents) {
    var cycleDuration = this.duration() + this._rDelay;

    return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
  } // potential future addition:
  // isPlayingBackwards() {
  // 	let animation = this,
  // 		orientation = 1; // 1 = forward, -1 = backward
  // 	while (animation) {
  // 		orientation *= animation.reversed() || (animation.repeat() && !(animation.iteration() & 1)) ? -1 : 1;
  // 		animation = animation.parent;
  // 	}
  // 	return orientation < 0;
  // }
  ;

  _proto.timeScale = function timeScale(value, suppressEvents) {
    if (!arguments.length) {
      return this._rts === -_tinyNum ? 0 : this._rts; // recorded timeScale. Special case: if someone calls reverse() on an animation with timeScale of 0, we assign it -_tinyNum to remember it's reversed.
    }

    if (this._rts === value) {
      return this;
    }

    var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime; // make sure to do the parentToChildTotalTime() BEFORE setting the new _ts because the old one must be used in that calculation.
    // future addition? Up side: fast and minimal file size. Down side: only works on this animation; if a timeline is reversed, for example, its childrens' onReverse wouldn't get called.
    //(+value < 0 && this._rts >= 0) && _callback(this, "onReverse", true);
    // prioritize rendering where the parent's playhead lines up instead of this._tTime because there could be a tween that's animating another tween's timeScale in the same rendering loop (same parent), thus if the timeScale tween renders first, it would alter _start BEFORE _tTime was set on that tick (in the rendering loop), effectively freezing it until the timeScale tween finishes.

    this._rts = +value || 0;
    this._ts = this._ps || value === -_tinyNum ? 0 : this._rts; // _ts is the functional timeScale which would be 0 if the animation is paused.

    this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), suppressEvents !== false);

    _setEnd(this); // if parent.smoothChildTiming was false, the end time didn't get updated in the _alignPlayhead() method, so do it here.


    return _recacheAncestors(this);
  };

  _proto.paused = function paused(value) {
    if (!arguments.length) {
      return this._ps;
    } // possible future addition - if an animation is removed from its parent and then .restart() or .play() or .resume() is called, perhaps we should force it back into the globalTimeline but be careful because what if it's already at its end? We don't want it to just persist forever and not get released for GC.
    // !this.parent && !value && this._tTime < this._tDur && this !== _globalTimeline && _globalTimeline.add(this);


    if (this._ps !== value) {
      this._ps = value;

      if (value) {
        this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()); // if the pause occurs during the delay phase, make sure that's factored in when resuming.

        this._ts = this._act = 0; // _ts is the functional timeScale, so a paused tween would effectively have a timeScale of 0. We record the "real" timeScale as _rts (recorded time scale)
      } else {
        _wake();

        this._ts = this._rts; //only defer to _pTime (pauseTime) if tTime is zero. Remember, someone could pause() an animation, then scrub the playhead and resume(). If the parent doesn't have smoothChildTiming, we render at the rawTime() because the startTime won't get updated.

        this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum)); // edge case: animation.progress(1).pause().play() wouldn't render again because the playhead is already at the end, but the call to totalTime() below will add it back to its parent...and not remove it again (since removing only happens upon rendering at a new time). Offsetting the _tTime slightly is done simply to cause the final render in totalTime() that'll pop it off its timeline (if autoRemoveChildren is true, of course). Check to make sure _zTime isn't -_tinyNum to avoid an edge case where the playhead is pushed to the end but INSIDE a tween/callback, the timeline itself is paused thus halting rendering and leaving a few unrendered. When resuming, it wouldn't render those otherwise.
      }
    }

    return this;
  };

  _proto.startTime = function startTime(value) {
    if (arguments.length) {
      this._start = value;
      var parent = this.parent || this._dp;
      parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
      return this;
    }

    return this._start;
  };

  _proto.endTime = function endTime(includeRepeats) {
    return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
  };

  _proto.rawTime = function rawTime(wrapRepeats) {
    var parent = this.parent || this._dp; // _dp = detached parent

    return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
  };

  _proto.revert = function revert(config) {
    if (config === void 0) {
      config = _revertConfig;
    }

    var prevIsReverting = _reverting;
    _reverting = config;

    if (this._initted || this._startAt) {
      this.timeline && this.timeline.revert(config);
      this.totalTime(-0.01, config.suppressEvents);
    }

    this.data !== "nested" && config.kill !== false && this.kill();
    _reverting = prevIsReverting;
    return this;
  };

  _proto.globalTime = function globalTime(rawTime) {
    var animation = this,
        time = arguments.length ? rawTime : animation.rawTime();

    while (animation) {
      time = animation._start + time / (Math.abs(animation._ts) || 1);
      animation = animation._dp;
    }

    return !this.parent && this._sat ? this._sat.globalTime(rawTime) : time; // the _startAt tweens for .fromTo() and .from() that have immediateRender should always be FIRST in the timeline (important for context.revert()). "_sat" stands for _startAtTween, referring to the parent tween that created the _startAt. We must discern if that tween had immediateRender so that we can know whether or not to prioritize it in revert().
  };

  _proto.repeat = function repeat(value) {
    if (arguments.length) {
      this._repeat = value === Infinity ? -2 : value;
      return _onUpdateTotalDuration(this);
    }

    return this._repeat === -2 ? Infinity : this._repeat;
  };

  _proto.repeatDelay = function repeatDelay(value) {
    if (arguments.length) {
      var time = this._time;
      this._rDelay = value;

      _onUpdateTotalDuration(this);

      return time ? this.time(time) : this;
    }

    return this._rDelay;
  };

  _proto.yoyo = function yoyo(value) {
    if (arguments.length) {
      this._yoyo = value;
      return this;
    }

    return this._yoyo;
  };

  _proto.seek = function seek(position, suppressEvents) {
    return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
  };

  _proto.restart = function restart(includeDelay, suppressEvents) {
    this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    this._dur || (this._zTime = -_tinyNum); // ensures onComplete fires on a zero-duration animation that gets restarted.

    return this;
  };

  _proto.play = function play(from, suppressEvents) {
    from != null && this.seek(from, suppressEvents);
    return this.reversed(false).paused(false);
  };

  _proto.reverse = function reverse(from, suppressEvents) {
    from != null && this.seek(from || this.totalDuration(), suppressEvents);
    return this.reversed(true).paused(false);
  };

  _proto.pause = function pause(atTime, suppressEvents) {
    atTime != null && this.seek(atTime, suppressEvents);
    return this.paused(true);
  };

  _proto.resume = function resume() {
    return this.paused(false);
  };

  _proto.reversed = function reversed(value) {
    if (arguments.length) {
      !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0)); // in case timeScale is zero, reversing would have no effect so we use _tinyNum.

      return this;
    }

    return this._rts < 0;
  };

  _proto.invalidate = function invalidate() {
    this._initted = this._act = 0;
    this._zTime = -_tinyNum;
    return this;
  };

  _proto.isActive = function isActive() {
    var parent = this.parent || this._dp,
        start = this._start,
        rawTime;
    return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
  };

  _proto.eventCallback = function eventCallback(type, callback, params) {
    var vars = this.vars;

    if (arguments.length > 1) {
      if (!callback) {
        delete vars[type];
      } else {
        vars[type] = callback;
        params && (vars[type + "Params"] = params);
        type === "onUpdate" && (this._onUpdate = callback);
      }

      return this;
    }

    return vars[type];
  };

  _proto.then = function then(onFulfilled) {
    var self = this;
    return new Promise(function (resolve) {
      var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
          _resolve = function _resolve() {
        var _then = self.then;
        self.then = null; // temporarily null the then() method to avoid an infinite loop (see https://github.com/greensock/GSAP/issues/322)

        _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
        resolve(f);
        self.then = _then;
      };

      if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {
        _resolve();
      } else {
        self._prom = _resolve;
      }
    });
  };

  _proto.kill = function kill() {
    _interrupt(this);
  };

  return Animation;
}();

_setDefaults(Animation.prototype, {
  _time: 0,
  _start: 0,
  _end: 0,
  _tTime: 0,
  _tDur: 0,
  _dirty: 0,
  _repeat: 0,
  _yoyo: false,
  parent: null,
  _initted: false,
  _rDelay: 0,
  _ts: 1,
  _dp: 0,
  ratio: 0,
  _zTime: -_tinyNum,
  _prom: 0,
  _ps: false,
  _rts: 1
});
/*
 * -------------------------------------------------
 * TIMELINE
 * -------------------------------------------------
 */


var Timeline = /*#__PURE__*/function (_Animation) {
  _inheritsLoose(Timeline, _Animation);

  function Timeline(vars, position) {
    var _this;

    if (vars === void 0) {
      vars = {};
    }

    _this = _Animation.call(this, vars) || this;
    _this.labels = {};
    _this.smoothChildTiming = !!vars.smoothChildTiming;
    _this.autoRemoveChildren = !!vars.autoRemoveChildren;
    _this._sort = _isNotFalse(vars.sortChildren);
    _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
    vars.reversed && _this.reverse();
    vars.paused && _this.paused(true);
    vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
    return _this;
  }

  var _proto2 = Timeline.prototype;

  _proto2.to = function to(targets, vars, position) {
    _createTweenType(0, arguments, this);

    return this;
  };

  _proto2.from = function from(targets, vars, position) {
    _createTweenType(1, arguments, this);

    return this;
  };

  _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
    _createTweenType(2, arguments, this);

    return this;
  };

  _proto2.set = function set(targets, vars, position) {
    vars.duration = 0;
    vars.parent = this;
    _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
    vars.immediateRender = !!vars.immediateRender;
    new Tween(targets, vars, _parsePosition(this, position), 1);
    return this;
  };

  _proto2.call = function call(callback, params, position) {
    return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
  } //ONLY for backward compatibility! Maybe delete?
  ;

  _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
    vars.duration = duration;
    vars.stagger = vars.stagger || stagger;
    vars.onComplete = onCompleteAll;
    vars.onCompleteParams = onCompleteAllParams;
    vars.parent = this;
    new Tween(targets, vars, _parsePosition(this, position));
    return this;
  };

  _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
    vars.runBackwards = 1;
    _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
    return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
  };

  _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
    toVars.startAt = fromVars;
    _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
    return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
  };

  _proto2.render = function render(totalTime, suppressEvents, force) {
    var prevTime = this._time,
        tDur = this._dirty ? this.totalDuration() : this._tDur,
        dur = this._dur,
        tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime),
        // if a paused timeline is resumed (or its _start is updated for another reason...which rounds it), that could result in the playhead shifting a **tiny** amount and a zero-duration child at that spot may get rendered at a different ratio, like its totalTime in render() may be 1e-17 instead of 0, for example.
    crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
        time,
        child,
        next,
        iteration,
        cycleDuration,
        prevPaused,
        pauseTween,
        timeScale,
        prevStart,
        prevIteration,
        yoyo,
        isYoyo;
    this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);

    if (tTime !== this._tTime || force || crossingStart) {
      if (prevTime !== this._time && dur) {
        //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).
        tTime += this._time - prevTime;
        totalTime += this._time - prevTime;
      }

      time = tTime;
      prevStart = this._start;
      timeScale = this._ts;
      prevPaused = !timeScale;

      if (crossingStart) {
        dur || (prevTime = this._zTime); //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.

        (totalTime || !suppressEvents) && (this._zTime = totalTime);
      }

      if (this._repeat) {
        //adjust the time for repeats and yoyos
        yoyo = this._yoyo;
        cycleDuration = dur + this._rDelay;

        if (this._repeat < -1 && totalTime < 0) {
          return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
        }

        time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)

        if (tTime === tDur) {
          // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
          iteration = this._repeat;
          time = dur;
        } else {
          prevIteration = _roundPrecise(tTime / cycleDuration); // full decimal version of iterations, not the previous iteration (we're reusing prevIteration variable for efficiency)

          iteration = ~~prevIteration;

          if (iteration && iteration === prevIteration) {
            time = dur;
            iteration--;
          }

          time > dur && (time = dur);
        }

        prevIteration = _animationCycle(this._tTime, cycleDuration);
        !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration); // edge case - if someone does addPause() at the very beginning of a repeating timeline, that pause is technically at the same spot as the end which causes this._time to get set to 0 when the totalTime would normally place the playhead at the end. See https://gsap.com/forums/topic/23823-closing-nav-animation-not-working-on-ie-and-iphone-6-maybe-other-older-browser/?tab=comments#comment-113005 also, this._tTime - prevIteration * cycleDuration - this._dur <= 0 just checks to make sure it wasn't previously in the "repeatDelay" portion

        if (yoyo && iteration & 1) {
          time = dur - time;
          isYoyo = 1;
        }
        /*
        make sure children at the end/beginning of the timeline are rendered properly. If, for example,
        a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which
        would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there
        could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So
        we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must
        ensure that zero-duration tweens at the very beginning or end of the Timeline work.
        */


        if (iteration !== prevIteration && !this._lock) {
          var rewinding = yoyo && prevIteration & 1,
              doesWrap = rewinding === (yoyo && iteration & 1);
          iteration < prevIteration && (rewinding = !rewinding);
          prevTime = rewinding ? 0 : tTime % dur ? dur : tTime; // if the playhead is landing exactly at the end of an iteration, use that totalTime rather than only the duration, otherwise it'll skip the 2nd render since it's effectively at the same time.

          this._lock = 1;
          this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
          this._tTime = tTime; // if a user gets the iteration() inside the onRepeat, for example, it should be accurate.

          !suppressEvents && this.parent && _callback(this, "onRepeat");
          this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);

          if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
            // if prevTime is 0 and we render at the very end, _time will be the end, thus won't match. So in this edge case, prevTime won't match _time but that's okay. If it gets killed in the onRepeat, eject as well.
            return this;
          }

          dur = this._dur; // in case the duration changed in the onRepeat

          tDur = this._tDur;

          if (doesWrap) {
            this._lock = 2;
            prevTime = rewinding ? dur : -0.0001;
            this.render(prevTime, true);
            this.vars.repeatRefresh && !isYoyo && this.invalidate();
          }

          this._lock = 0;

          if (!this._ts && !prevPaused) {
            return this;
          } //in order for yoyoEase to work properly when there's a stagger, we must swap out the ease in each sub-tween.


          _propagateYoyoEase(this, isYoyo);
        }
      }

      if (this._hasPause && !this._forcing && this._lock < 2) {
        pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));

        if (pauseTween) {
          tTime -= time - (time = pauseTween._start);
        }
      }

      this._tTime = tTime;
      this._time = time;
      this._act = !timeScale; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.

      if (!this._initted) {
        this._onUpdate = this.vars.onUpdate;
        this._initted = 1;
        this._zTime = totalTime;
        prevTime = 0; // upon init, the playhead should always go forward; someone could invalidate() a completed timeline and then if they restart(), that would make child tweens render in reverse order which could lock in the wrong starting values if they build on each other, like tl.to(obj, {x: 100}).to(obj, {x: 0}).
      }

      if (!prevTime && time && !suppressEvents && !iteration) {
        _callback(this, "onStart");

        if (this._tTime !== tTime) {
          // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
          return this;
        }
      }

      if (time >= prevTime && totalTime >= 0) {
        child = this._first;

        while (child) {
          next = child._next;

          if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
            if (child.parent !== this) {
              // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
              return this.render(totalTime, suppressEvents, force);
            }

            child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);

            if (time !== this._time || !this._ts && !prevPaused) {
              //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
              pauseTween = 0;
              next && (tTime += this._zTime = -_tinyNum); // it didn't finish rendering, so flag zTime as negative so that the next time render() is called it'll be forced (to render any remaining children)

              break;
            }
          }

          child = next;
        }
      } else {
        child = this._last;
        var adjustedTime = totalTime < 0 ? totalTime : time; //when the playhead goes backward beyond the start of this timeline, we must pass that information down to the child animations so that zero-duration tweens know whether to render their starting or ending values.

        while (child) {
          next = child._prev;

          if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
            if (child.parent !== this) {
              // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
              return this.render(totalTime, suppressEvents, force);
            }

            child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt)); // if reverting, we should always force renders of initted tweens (but remember that .fromTo() or .from() may have a _startAt but not _initted yet). If, for example, a .fromTo() tween with a stagger (which creates an internal timeline) gets reverted BEFORE some of its child tweens render for the first time, it may not properly trigger them to revert.

            if (time !== this._time || !this._ts && !prevPaused) {
              //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
              pauseTween = 0;
              next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum); // it didn't finish rendering, so adjust zTime so that so that the next time render() is called it'll be forced (to render any remaining children)

              break;
            }
          }

          child = next;
        }
      }

      if (pauseTween && !suppressEvents) {
        this.pause();
        pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;

        if (this._ts) {
          //the callback resumed playback! So since we may have held back the playhead due to where the pause is positioned, go ahead and jump to where it's SUPPOSED to be (if no pause happened).
          this._start = prevStart; //if the pause was at an earlier time and the user resumed in the callback, it could reposition the timeline (changing its startTime), throwing things off slightly, so we make sure the _start doesn't shift.

          _setEnd(this);

          return this.render(totalTime, suppressEvents, force);
        }
      }

      this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
      if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) if (!this._lock) {
        // remember, a child's callback may alter this timeline's playhead or timeScale which is why we need to add some of these checks.
        (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.

        if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
          _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);

          this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
        }
      }
    }

    return this;
  };

  _proto2.add = function add(child, position) {
    var _this2 = this;

    _isNumber(position) || (position = _parsePosition(this, position, child));

    if (!(child instanceof Animation)) {
      if (_isArray(child)) {
        child.forEach(function (obj) {
          return _this2.add(obj, position);
        });
        return this;
      }

      if (_isString(child)) {
        return this.addLabel(child, position);
      }

      if (_isFunction(child)) {
        child = Tween.delayedCall(0, child);
      } else {
        return this;
      }
    }

    return this !== child ? _addToTimeline(this, child, position) : this; //don't allow a timeline to be added to itself as a child!
  };

  _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
    if (nested === void 0) {
      nested = true;
    }

    if (tweens === void 0) {
      tweens = true;
    }

    if (timelines === void 0) {
      timelines = true;
    }

    if (ignoreBeforeTime === void 0) {
      ignoreBeforeTime = -_bigNum;
    }

    var a = [],
        child = this._first;

    while (child) {
      if (child._start >= ignoreBeforeTime) {
        if (child instanceof Tween) {
          tweens && a.push(child);
        } else {
          timelines && a.push(child);
          nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
        }
      }

      child = child._next;
    }

    return a;
  };

  _proto2.getById = function getById(id) {
    var animations = this.getChildren(1, 1, 1),
        i = animations.length;

    while (i--) {
      if (animations[i].vars.id === id) {
        return animations[i];
      }
    }
  };

  _proto2.remove = function remove(child) {
    if (_isString(child)) {
      return this.removeLabel(child);
    }

    if (_isFunction(child)) {
      return this.killTweensOf(child);
    }

    child.parent === this && _removeLinkedListItem(this, child);

    if (child === this._recent) {
      this._recent = this._last;
    }

    return _uncache(this);
  };

  _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
    if (!arguments.length) {
      return this._tTime;
    }

    this._forcing = 1;

    if (!this._dp && this._ts) {
      //special case for the global timeline (or any other that has no parent or detached parent).
      this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
    }

    _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);

    this._forcing = 0;
    return this;
  };

  _proto2.addLabel = function addLabel(label, position) {
    this.labels[label] = _parsePosition(this, position);
    return this;
  };

  _proto2.removeLabel = function removeLabel(label) {
    delete this.labels[label];
    return this;
  };

  _proto2.addPause = function addPause(position, callback, params) {
    var t = Tween.delayedCall(0, callback || _emptyFunc, params);
    t.data = "isPause";
    this._hasPause = 1;
    return _addToTimeline(this, t, _parsePosition(this, position));
  };

  _proto2.removePause = function removePause(position) {
    var child = this._first;
    position = _parsePosition(this, position);

    while (child) {
      if (child._start === position && child.data === "isPause") {
        _removeFromParent(child);
      }

      child = child._next;
    }
  };

  _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
    var tweens = this.getTweensOf(targets, onlyActive),
        i = tweens.length;

    while (i--) {
      _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
    }

    return this;
  };

  _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
    var a = [],
        parsedTargets = toArray(targets),
        child = this._first,
        isGlobalTime = _isNumber(onlyActive),
        // a number is interpreted as a global time. If the animation spans
    children;

    while (child) {
      if (child instanceof Tween) {
        if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
          // note: if this is for overwriting, it should only be for tweens that aren't paused and are initted.
          a.push(child);
        }
      } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
        a.push.apply(a, children);
      }

      child = child._next;
    }

    return a;
  } // potential future feature - targets() on timelines
  // targets() {
  // 	let result = [];
  // 	this.getChildren(true, true, false).forEach(t => result.push(...t.targets()));
  // 	return result.filter((v, i) => result.indexOf(v) === i);
  // }
  ;

  _proto2.tweenTo = function tweenTo(position, vars) {
    vars = vars || {};

    var tl = this,
        endTime = _parsePosition(tl, position),
        _vars = vars,
        startAt = _vars.startAt,
        _onStart = _vars.onStart,
        onStartParams = _vars.onStartParams,
        immediateRender = _vars.immediateRender,
        initted,
        tween = Tween.to(tl, _setDefaults({
      ease: vars.ease || "none",
      lazy: false,
      immediateRender: false,
      time: endTime,
      overwrite: "auto",
      duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
      onStart: function onStart() {
        tl.pause();

        if (!initted) {
          var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
          tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
          initted = 1;
        }

        _onStart && _onStart.apply(tween, onStartParams || []); //in case the user had an onStart in the vars - we don't want to overwrite it.
      }
    }, vars));

    return immediateRender ? tween.render(0) : tween;
  };

  _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
    return this.tweenTo(toPosition, _setDefaults({
      startAt: {
        time: _parsePosition(this, fromPosition)
      }
    }, vars));
  };

  _proto2.recent = function recent() {
    return this._recent;
  };

  _proto2.nextLabel = function nextLabel(afterTime) {
    if (afterTime === void 0) {
      afterTime = this._time;
    }

    return _getLabelInDirection(this, _parsePosition(this, afterTime));
  };

  _proto2.previousLabel = function previousLabel(beforeTime) {
    if (beforeTime === void 0) {
      beforeTime = this._time;
    }

    return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
  };

  _proto2.currentLabel = function currentLabel(value) {
    return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
  };

  _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
    if (ignoreBeforeTime === void 0) {
      ignoreBeforeTime = 0;
    }

    var child = this._first,
        labels = this.labels,
        p;

    while (child) {
      if (child._start >= ignoreBeforeTime) {
        child._start += amount;
        child._end += amount;
      }

      child = child._next;
    }

    if (adjustLabels) {
      for (p in labels) {
        if (labels[p] >= ignoreBeforeTime) {
          labels[p] += amount;
        }
      }
    }

    return _uncache(this);
  };

  _proto2.invalidate = function invalidate(soft) {
    var child = this._first;
    this._lock = 0;

    while (child) {
      child.invalidate(soft);
      child = child._next;
    }

    return _Animation.prototype.invalidate.call(this, soft);
  };

  _proto2.clear = function clear(includeLabels) {
    if (includeLabels === void 0) {
      includeLabels = true;
    }

    var child = this._first,
        next;

    while (child) {
      next = child._next;
      this.remove(child);
      child = next;
    }

    this._dp && (this._time = this._tTime = this._pTime = 0);
    includeLabels && (this.labels = {});
    return _uncache(this);
  };

  _proto2.totalDuration = function totalDuration(value) {
    var max = 0,
        self = this,
        child = self._last,
        prevStart = _bigNum,
        prev,
        start,
        parent;

    if (arguments.length) {
      return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
    }

    if (self._dirty) {
      parent = self.parent;

      while (child) {
        prev = child._prev; //record it here in case the tween changes position in the sequence...

        child._dirty && child.totalDuration(); //could change the tween._startTime, so make sure the animation's cache is clean before analyzing it.

        start = child._start;

        if (start > prevStart && self._sort && child._ts && !self._lock) {
          //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence
          self._lock = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add().

          _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
        } else {
          prevStart = start;
        }

        if (start < 0 && child._ts) {
          //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.
          max -= start;

          if (!parent && !self._dp || parent && parent.smoothChildTiming) {
            self._start += start / self._ts;
            self._time -= start;
            self._tTime -= start;
          }

          self.shiftChildren(-start, false, -1e999);
          prevStart = 0;
        }

        child._end > max && child._ts && (max = child._end);
        child = prev;
      }

      _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);

      self._dirty = 0;
    }

    return self._tDur;
  };

  Timeline.updateRoot = function updateRoot(time) {
    if (_globalTimeline._ts) {
      _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));

      _lastRenderedFrame = _ticker.frame;
    }

    if (_ticker.frame >= _nextGCFrame) {
      _nextGCFrame += _config.autoSleep || 120;
      var child = _globalTimeline._first;
      if (!child || !child._ts) if (_config.autoSleep && _ticker._listeners.length < 2) {
        while (child && !child._ts) {
          child = child._next;
        }

        child || _ticker.sleep();
      }
    }
  };

  return Timeline;
}(Animation);

_setDefaults(Timeline.prototype, {
  _lock: 0,
  _hasPause: 0,
  _forcing: 0
});

var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
  //note: we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
  var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
      index = 0,
      matchIndex = 0,
      result,
      startNums,
      color,
      endNum,
      chunk,
      startNum,
      hasRandom,
      a;
  pt.b = start;
  pt.e = end;
  start += ""; //ensure values are strings

  end += "";

  if (hasRandom = ~end.indexOf("random(")) {
    end = _replaceRandom(end);
  }

  if (stringFilter) {
    a = [start, end];
    stringFilter(a, target, prop); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.

    start = a[0];
    end = a[1];
  }

  startNums = start.match(_complexStringNumExp) || [];

  while (result = _complexStringNumExp.exec(end)) {
    endNum = result[0];
    chunk = end.substring(index, result.index);

    if (color) {
      color = (color + 1) % 5;
    } else if (chunk.substr(-5) === "rgba(") {
      color = 1;
    }

    if (endNum !== startNums[matchIndex++]) {
      startNum = parseFloat(startNums[matchIndex - 1]) || 0; //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.

      pt._pt = {
        _next: pt._pt,
        p: chunk || matchIndex === 1 ? chunk : ",",
        //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
        s: startNum,
        c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
        m: color && color < 4 ? Math.round : 0
      };
      index = _complexStringNumExp.lastIndex;
    }
  }

  pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)

  pt.fp = funcParam;

  if (_relExp.test(end) || hasRandom) {
    pt.e = 0; //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).
  }

  this._pt = pt; //start the linked list with this new PropTween. Remember, we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.

  return pt;
},
    _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
  _isFunction(end) && (end = end(index || 0, target, targets));
  var currentValue = target[prop],
      parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
      setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
      pt;

  if (_isString(end)) {
    if (~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }

    if (end.charAt(1) === "=") {
      pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);

      if (pt || pt === 0) {
        // to avoid isNaN, like if someone passes in a value like "!= whatever"
        end = pt;
      }
    }
  }

  if (!optional || parsedStart !== end || _forceAllPropTweens) {
    if (!isNaN(parsedStart * end) && end !== "") {
      // fun fact: any number multiplied by "" is evaluated as the number 0!
      pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
      funcParam && (pt.fp = funcParam);
      modifier && pt.modifier(modifier, this, target);
      return this._pt = pt;
    }

    !currentValue && !(prop in target) && _missingPlugin(prop, end);
    return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
  }
},
    //creates a copy of the vars object and processes any function-based values (putting the resulting values directly into the copy) as well as strings with "random()" in them. It does NOT process relative values.
_processVars = function _processVars(vars, index, target, targets, tween) {
  _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));

  if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
    return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
  }

  var copy = {},
      p;

  for (p in vars) {
    copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
  }

  return copy;
},
    _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
  var plugin, pt, ptLookup, i;

  if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
    tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);

    if (tween !== _quickTween) {
      ptLookup = tween._ptLookup[tween._targets.indexOf(target)]; //note: we can't use tween._ptLookup[index] because for staggered tweens, the index from the fullTargets array won't match what it is in each individual tween that spawns from the stagger.

      i = plugin._props.length;

      while (i--) {
        ptLookup[plugin._props[i]] = pt;
      }
    }
  }

  return plugin;
},
    _overwritingTween,
    //store a reference temporarily so we can avoid overwriting itself.
_forceAllPropTweens,
    _initTween = function _initTween(tween, time, tTime) {
  var vars = tween.vars,
      ease = vars.ease,
      startAt = vars.startAt,
      immediateRender = vars.immediateRender,
      lazy = vars.lazy,
      onUpdate = vars.onUpdate,
      runBackwards = vars.runBackwards,
      yoyoEase = vars.yoyoEase,
      keyframes = vars.keyframes,
      autoRevert = vars.autoRevert,
      dur = tween._dur,
      prevStartAt = tween._startAt,
      targets = tween._targets,
      parent = tween.parent,
      fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets,
      autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites,
      tl = tween.timeline,
      cleanVars,
      i,
      p,
      pt,
      target,
      hasPriority,
      gsData,
      harness,
      plugin,
      ptLookup,
      index,
      harnessVars,
      overwritten;
  tl && (!keyframes || !ease) && (ease = "none");
  tween._ease = _parseEase(ease, _defaults.ease);
  tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;

  if (yoyoEase && tween._yoyo && !tween._repeat) {
    //there must have been a parent timeline with yoyo:true that is currently in its yoyo phase, so flip the eases.
    yoyoEase = tween._yEase;
    tween._yEase = tween._ease;
    tween._ease = yoyoEase;
  }

  tween._from = !tl && !!vars.runBackwards; //nested timelines should never run backwards - the backwards-ness is in the child tweens.

  if (!tl || keyframes && !vars.stagger) {
    //if there's an internal timeline, skip all the parsing because we passed that task down the chain.
    harness = targets[0] ? _getCache(targets[0]).harness : 0;
    harnessVars = harness && vars[harness.prop]; //someone may need to specify CSS-specific values AND non-CSS values, like if the element has an "x" property plus it's a standard DOM element. We allow people to distinguish by wrapping plugin-specific stuff in a css:{} object for example.

    cleanVars = _copyExcluding(vars, _reservedProps);

    if (prevStartAt) {
      prevStartAt._zTime < 0 && prevStartAt.progress(1); // in case it's a lazy startAt that hasn't rendered yet.

      time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig); // if it's a "startAt" (not "from()" or runBackwards: true), we only need to do a shallow revert (keep transforms cached in CSSPlugin)
      // don't just _removeFromParent(prevStartAt.render(-1, true)) because that'll leave inline styles. We're creating a new _startAt for "startAt" tweens that re-capture things to ensure that if the pre-tween values changed since the tween was created, they're recorded.

      prevStartAt._lazy = 0;
    }

    if (startAt) {
      _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
        data: "isStart",
        overwrite: false,
        parent: parent,
        immediateRender: true,
        lazy: !prevStartAt && _isNotFalse(lazy),
        startAt: null,
        delay: 0,
        onUpdate: onUpdate && function () {
          return _callback(tween, "onUpdate");
        },
        stagger: 0
      }, startAt))); //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, from, to).fromTo(e, to, from);


      tween._startAt._dp = 0; // don't allow it to get put back into root timeline! Like when revert() is called and totalTime() gets set.

      tween._startAt._sat = tween; // used in globalTime(). _sat stands for _startAtTween

      time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill); // rare edge case, like if a render is forced in the negative direction of a non-initted tween.

      if (immediateRender) {
        if (dur && time <= 0 && tTime <= 0) {
          // check tTime here because in the case of a yoyo tween whose playhead gets pushed to the end like tween.progress(1), we should allow it through so that the onComplete gets fired properly.
          time && (tween._zTime = time);
          return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a Timeline, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.
        }
      }
    } else if (runBackwards && dur) {
      //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)
      if (!prevStartAt) {
        time && (immediateRender = false); //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0

        p = _setDefaults({
          overwrite: false,
          data: "isFromStart",
          //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
          lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),
          immediateRender: immediateRender,
          //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
          stagger: 0,
          parent: parent //ensures that nested tweens that had a stagger are handled properly, like gsap.from(".class", {y: gsap.utils.wrap([-100,100]), stagger: 0.5})

        }, cleanVars);
        harnessVars && (p[harness.prop] = harnessVars); // in case someone does something like .from(..., {css:{}})

        _removeFromParent(tween._startAt = Tween.set(targets, p));

        tween._startAt._dp = 0; // don't allow it to get put back into root timeline!

        tween._startAt._sat = tween; // used in globalTime()

        time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
        tween._zTime = time;

        if (!immediateRender) {
          _initTween(tween._startAt, _tinyNum, _tinyNum); //ensures that the initial values are recorded

        } else if (!time) {
          return;
        }
      }
    }

    tween._pt = tween._ptCache = 0;
    lazy = dur && _isNotFalse(lazy) || lazy && !dur;

    for (i = 0; i < targets.length; i++) {
      target = targets[i];
      gsData = target._gsap || _harness(targets)[i]._gsap;
      tween._ptLookup[i] = ptLookup = {};
      _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)

      index = fullTargets === targets ? i : fullTargets.indexOf(target);

      if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
        tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);

        plugin._props.forEach(function (name) {
          ptLookup[name] = pt;
        });

        plugin.priority && (hasPriority = 1);
      }

      if (!harness || harnessVars) {
        for (p in cleanVars) {
          if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
            plugin.priority && (hasPriority = 1);
          } else {
            ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
          }
        }
      }

      tween._op && tween._op[i] && tween.kill(target, tween._op[i]);

      if (autoOverwrite && tween._pt) {
        _overwritingTween = tween;

        _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time)); // make sure the overwriting doesn't overwrite THIS tween!!!


        overwritten = !tween.parent;
        _overwritingTween = 0;
      }

      tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
    }

    hasPriority && _sortPropTweensByPriority(tween);
    tween._onInit && tween._onInit(tween); //plugins like RoundProps must wait until ALL of the PropTweens are instantiated. In the plugin's init() function, it sets the _onInit on the tween instance. May not be pretty/intuitive, but it's fast and keeps file size down.
  }

  tween._onUpdate = onUpdate;
  tween._initted = (!tween._op || tween._pt) && !overwritten; // if overwrittenProps resulted in the entire tween being killed, do NOT flag it as initted or else it may render for one tick.

  keyframes && time <= 0 && tl.render(_bigNum, true, true); // if there's a 0% keyframe, it'll render in the "before" state for any staggered/delayed animations thus when the following tween initializes, it'll use the "before" state instead of the "after" state as the initial values.
},
    _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time, skipRecursion) {
  var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property],
      pt,
      rootPT,
      lookup,
      i;

  if (!ptCache) {
    ptCache = tween._ptCache[property] = [];
    lookup = tween._ptLookup;
    i = tween._targets.length;

    while (i--) {
      pt = lookup[i][property];

      if (pt && pt.d && pt.d._pt) {
        // it's a plugin, so find the nested PropTween
        pt = pt.d._pt;

        while (pt && pt.p !== property && pt.fp !== property) {
          // "fp" is functionParam for things like setting CSS variables which require .setProperty("--var-name", value)
          pt = pt._next;
        }
      }

      if (!pt) {
        // there is no PropTween associated with that property, so we must FORCE one to be created and ditch out of this
        // if the tween has other properties that already rendered at new positions, we'd normally have to rewind to put them back like tween.render(0, true) before forcing an _initTween(), but that can create another edge case like tweening a timeline's progress would trigger onUpdates to fire which could move other things around. It's better to just inform users that .resetTo() should ONLY be used for tweens that already have that property. For example, you can't gsap.to(...{ y: 0 }) and then tween.restTo("x", 200) for example.
        _forceAllPropTweens = 1; // otherwise, when we _addPropTween() and it finds no change between the start and end values, it skips creating a PropTween (for efficiency...why tween when there's no difference?) but in this case we NEED that PropTween created so we can edit it.

        tween.vars[property] = "+=0";

        _initTween(tween, time);

        _forceAllPropTweens = 0;
        return skipRecursion ? _warn(property + " not eligible for reset") : 1; // if someone tries to do a quickTo() on a special property like borderRadius which must get split into 4 different properties, that's not eligible for .resetTo().
      }

      ptCache.push(pt);
    }
  }

  i = ptCache.length;

  while (i--) {
    rootPT = ptCache[i];
    pt = rootPT._pt || rootPT; // complex values may have nested PropTweens. We only accommodate the FIRST value.

    pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
    pt.c = value - pt.s;
    rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e)); // mainly for CSSPlugin (end value)

    rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b)); // (beginning value)
  }
},
    _addAliasesToVars = function _addAliasesToVars(targets, vars) {
  var harness = targets[0] ? _getCache(targets[0]).harness : 0,
      propertyAliases = harness && harness.aliases,
      copy,
      p,
      i,
      aliases;

  if (!propertyAliases) {
    return vars;
  }

  copy = _merge({}, vars);

  for (p in propertyAliases) {
    if (p in copy) {
      aliases = propertyAliases[p].split(",");
      i = aliases.length;

      while (i--) {
        copy[aliases[i]] = copy[p];
      }
    }
  }

  return copy;
},
    // parses multiple formats, like {"0%": {x: 100}, {"50%": {x: -20}} and { x: {"0%": 100, "50%": -20} }, and an "ease" can be set on any object. We populate an "allProps" object with an Array for each property, like {x: [{}, {}], y:[{}, {}]} with data for each property tween. The objects have a "t" (time), "v", (value), and "e" (ease) property. This allows us to piece together a timeline later.
_parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {
  var ease = obj.ease || easeEach || "power1.inOut",
      p,
      a;

  if (_isArray(obj)) {
    a = allProps[prop] || (allProps[prop] = []); // t = time (out of 100), v = value, e = ease

    obj.forEach(function (value, i) {
      return a.push({
        t: i / (obj.length - 1) * 100,
        v: value,
        e: ease
      });
    });
  } else {
    for (p in obj) {
      a = allProps[p] || (allProps[p] = []);
      p === "ease" || a.push({
        t: parseFloat(prop),
        v: obj[p],
        e: ease
      });
    }
  }
},
    _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
  return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
},
    _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
    _staggerPropsToSkip = {};

_forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function (name) {
  return _staggerPropsToSkip[name] = 1;
});
/*
 * --------------------------------------------------------------------------------------
 * TWEEN
 * --------------------------------------------------------------------------------------
 */


var Tween = /*#__PURE__*/function (_Animation2) {
  _inheritsLoose(Tween, _Animation2);

  function Tween(targets, vars, position, skipInherit) {
    var _this3;

    if (typeof vars === "number") {
      position.duration = vars;
      vars = position;
      position = null;
    }

    _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
    var _this3$vars = _this3.vars,
        duration = _this3$vars.duration,
        delay = _this3$vars.delay,
        immediateRender = _this3$vars.immediateRender,
        stagger = _this3$vars.stagger,
        overwrite = _this3$vars.overwrite,
        keyframes = _this3$vars.keyframes,
        defaults = _this3$vars.defaults,
        scrollTrigger = _this3$vars.scrollTrigger,
        yoyoEase = _this3$vars.yoyoEase,
        parent = vars.parent || _globalTimeline,
        parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
        tl,
        i,
        copy,
        l,
        p,
        curTarget,
        staggerFunc,
        staggerVarsToMerge;
    _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://gsap.com", !_config.nullTargetWarn) || [];
    _this3._ptLookup = []; //PropTween lookup. An array containing an object for each target, having keys for each tweening property

    _this3._overwrite = overwrite;

    if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
      vars = _this3.vars;
      tl = _this3.timeline = new Timeline({
        data: "nested",
        defaults: defaults || {},
        targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
      }); // we need to store the targets because for staggers and keyframes, we end up creating an individual tween for each but function-based values need to know the index and the whole Array of targets.

      tl.kill();
      tl.parent = tl._dp = _assertThisInitialized(_this3);
      tl._start = 0;

      if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        l = parsedTargets.length;
        staggerFunc = stagger && distribute(stagger);

        if (_isObject(stagger)) {
          //users can pass in callbacks like onStart/onComplete in the stagger object. These should fire with each individual tween.
          for (p in stagger) {
            if (~_staggerTweenProps.indexOf(p)) {
              staggerVarsToMerge || (staggerVarsToMerge = {});
              staggerVarsToMerge[p] = stagger[p];
            }
          }
        }

        for (i = 0; i < l; i++) {
          copy = _copyExcluding(vars, _staggerPropsToSkip);
          copy.stagger = 0;
          yoyoEase && (copy.yoyoEase = yoyoEase);
          staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
          curTarget = parsedTargets[i]; //don't just copy duration or delay because if they're a string or function, we'd end up in an infinite loop because _isFuncOrString() would evaluate as true in the child tweens, entering this loop, etc. So we parse the value straight from vars and default to 0.

          copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
          copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;

          if (!stagger && l === 1 && copy.delay) {
            // if someone does delay:"random(1, 5)", repeat:-1, for example, the delay shouldn't be inside the repeat.
            _this3._delay = delay = copy.delay;
            _this3._start += delay;
            copy.delay = 0;
          }

          tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);
          tl._ease = _easeMap.none;
        }

        tl.duration() ? duration = delay = 0 : _this3.timeline = 0; // if the timeline's duration is 0, we don't need a timeline internally!
      } else if (keyframes) {
        _inheritDefaults(_setDefaults(tl.vars.defaults, {
          ease: "none"
        }));

        tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
        var time = 0,
            a,
            kf,
            v;

        if (_isArray(keyframes)) {
          keyframes.forEach(function (frame) {
            return tl.to(parsedTargets, frame, ">");
          });
          tl.duration(); // to ensure tl._dur is cached because we tap into it for performance purposes in the render() method.
        } else {
          copy = {};

          for (p in keyframes) {
            p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
          }

          for (p in copy) {
            a = copy[p].sort(function (a, b) {
              return a.t - b.t;
            });
            time = 0;

            for (i = 0; i < a.length; i++) {
              kf = a[i];
              v = {
                ease: kf.e,
                duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration
              };
              v[p] = kf.v;
              tl.to(parsedTargets, v, time);
              time += v.duration;
            }
          }

          tl.duration() < duration && tl.to({}, {
            duration: duration - tl.duration()
          }); // in case keyframes didn't go to 100%
        }
      }

      duration || _this3.duration(duration = tl.duration());
    } else {
      _this3.timeline = 0; //speed optimization, faster lookups (no going up the prototype chain)
    }

    if (overwrite === true && !_suppressOverwrites) {
      _overwritingTween = _assertThisInitialized(_this3);

      _globalTimeline.killTweensOf(parsedTargets);

      _overwritingTween = 0;
    }

    _addToTimeline(parent, _assertThisInitialized(_this3), position);

    vars.reversed && _this3.reverse();
    vars.paused && _this3.paused(true);

    if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
      _this3._tTime = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)

      _this3.render(Math.max(0, -delay) || 0); //in case delay is negative

    }

    scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
    return _this3;
  }

  var _proto3 = Tween.prototype;

  _proto3.render = function render(totalTime, suppressEvents, force) {
    var prevTime = this._time,
        tDur = this._tDur,
        dur = this._dur,
        isNegative = totalTime < 0,
        tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime,
        time,
        pt,
        iteration,
        cycleDuration,
        prevIteration,
        isYoyo,
        ratio,
        timeline,
        yoyoEase;

    if (!dur) {
      _renderZeroDurationTween(this, totalTime, suppressEvents, force);
    } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative || this._lazy) {
      // this senses if we're crossing over the start time, in which case we must record _zTime and force the render, but we do it in this lengthy conditional way for performance reasons (usually we can skip the calculations): this._initted && (this._zTime < 0) !== (totalTime < 0)
      time = tTime;
      timeline = this.timeline;

      if (this._repeat) {
        //adjust the time for repeats and yoyos
        cycleDuration = dur + this._rDelay;

        if (this._repeat < -1 && isNegative) {
          return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
        }

        time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)

        if (tTime === tDur) {
          // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
          iteration = this._repeat;
          time = dur;
        } else {
          prevIteration = _roundPrecise(tTime / cycleDuration); // full decimal version of iterations, not the previous iteration (we're reusing prevIteration variable for efficiency)

          iteration = ~~prevIteration;

          if (iteration && iteration === prevIteration) {
            time = dur;
            iteration--;
          } else if (time > dur) {
            time = dur;
          }
        }

        isYoyo = this._yoyo && iteration & 1;

        if (isYoyo) {
          yoyoEase = this._yEase;
          time = dur - time;
        }

        prevIteration = _animationCycle(this._tTime, cycleDuration);

        if (time === prevTime && !force && this._initted && iteration === prevIteration) {
          //could be during the repeatDelay part. No need to render and fire callbacks.
          this._tTime = tTime;
          return this;
        }

        if (iteration !== prevIteration) {
          timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo); //repeatRefresh functionality

          if (this.vars.repeatRefresh && !isYoyo && !this._lock && time !== cycleDuration && this._initted) {
            // this._time will === cycleDuration when we render at EXACTLY the end of an iteration. Without this condition, it'd often do the repeatRefresh render TWICE (again on the very next tick).
            this._lock = force = 1; //force, otherwise if lazy is true, the _attemptInitTween() will return and we'll jump out and get caught bouncing on each tick.

            this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
          }
        }
      }

      if (!this._initted) {
        if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
          this._tTime = 0; // in constructor if immediateRender is true, we set _tTime to -_tinyNum to have the playhead cross the starting point but we can't leave _tTime as a negative number.

          return this;
        }

        if (prevTime !== this._time && !(force && this.vars.repeatRefresh && iteration !== prevIteration)) {
          // rare edge case - during initialization, an onUpdate in the _startAt (.fromTo()) might force this tween to render at a different spot in which case we should ditch this render() call so that it doesn't revert the values. But we also don't want to dump if we're doing a repeatRefresh render!
          return this;
        }

        if (dur !== this._dur) {
          // while initting, a plugin like InertiaPlugin might alter the duration, so rerun from the start to ensure everything renders as it should.
          return this.render(totalTime, suppressEvents, force);
        }
      }

      this._tTime = tTime;
      this._time = time;

      if (!this._act && this._ts) {
        this._act = 1; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.

        this._lazy = 0;
      }

      this.ratio = ratio = (yoyoEase || this._ease)(time / dur);

      if (this._from) {
        this.ratio = ratio = 1 - ratio;
      }

      if (time && !prevTime && !suppressEvents && !iteration) {
        _callback(this, "onStart");

        if (this._tTime !== tTime) {
          // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
          return this;
        }
      }

      pt = this._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }

      timeline && timeline.render(totalTime < 0 ? totalTime : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);

      if (this._onUpdate && !suppressEvents) {
        isNegative && _rewindStartAt(this, totalTime, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.

        _callback(this, "onUpdate");
      }

      this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");

      if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
        isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
        (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if we're rendering at exactly a time of 0, as there could be autoRevert values that should get set on the next tick (if the playhead goes backward beyond the startTime, negative totalTime). Don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.

        if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
          // if prevTime and tTime are zero, we shouldn't fire the onReverseComplete. This could happen if you gsap.to(... {paused:true}).play();
          _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

          this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
        }
      }
    }

    return this;
  };

  _proto3.targets = function targets() {
    return this._targets;
  };

  _proto3.invalidate = function invalidate(soft) {
    // "soft" gives us a way to clear out everything EXCEPT the recorded pre-"from" portion of from() tweens. Otherwise, for example, if you tween.progress(1).render(0, true true).invalidate(), the "from" values would persist and then on the next render, the from() tweens would initialize and the current value would match the "from" values, thus animate from the same value to the same value (no animation). We tap into this in ScrollTrigger's refresh() where we must push a tween to completion and then back again but honor its init state in case the tween is dependent on another tween further up on the page.
    (!soft || !this.vars.runBackwards) && (this._startAt = 0);
    this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
    this._ptLookup = [];
    this.timeline && this.timeline.invalidate(soft);
    return _Animation2.prototype.invalidate.call(this, soft);
  };

  _proto3.resetTo = function resetTo(property, value, start, startIsRelative, skipRecursion) {
    _tickerActive || _ticker.wake();
    this._ts || this.play();
    var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts),
        ratio;
    this._initted || _initTween(this, time);
    ratio = this._ease(time / this._dur); // don't just get tween.ratio because it may not have rendered yet.
    // possible future addition to allow an object with multiple values to update, like tween.resetTo({x: 100, y: 200}); At this point, it doesn't seem worth the added kb given the fact that most users will likely opt for the convenient gsap.quickTo() way of interacting with this method.
    // if (_isObject(property)) { // performance optimization
    // 	for (p in property) {
    // 		if (_updatePropTweens(this, p, property[p], value ? value[p] : null, start, ratio, time)) {
    // 			return this.resetTo(property, value, start, startIsRelative); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
    // 		}
    // 	}
    // } else {

    if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time, skipRecursion)) {
      return this.resetTo(property, value, start, startIsRelative, 1); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
    } //}


    _alignPlayhead(this, 0);

    this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
    return this.render(0);
  };

  _proto3.kill = function kill(targets, vars) {
    if (vars === void 0) {
      vars = "all";
    }

    if (!targets && (!vars || vars === "all")) {
      this._lazy = this._pt = 0;
      this.parent ? _interrupt(this) : this.scrollTrigger && this.scrollTrigger.kill(!!_reverting);
      return this;
    }

    if (this.timeline) {
      var tDur = this.timeline.totalDuration();
      this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this); // if nothing is left tweening, interrupt.

      this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1); // if a nested tween is killed that changes the duration, it should affect this tween's duration. We must use the ratio, though, because sometimes the internal timeline is stretched like for keyframes where they don't all add up to whatever the parent tween's duration was set to.

      return this;
    }

    var parsedTargets = this._targets,
        killingTargets = targets ? toArray(targets) : parsedTargets,
        propTweenLookup = this._ptLookup,
        firstPT = this._pt,
        overwrittenProps,
        curLookup,
        curOverwriteProps,
        props,
        p,
        pt,
        i;

    if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
      vars === "all" && (this._pt = 0);
      return _interrupt(this);
    }

    overwrittenProps = this._op = this._op || [];

    if (vars !== "all") {
      //so people can pass in a comma-delimited list of property names
      if (_isString(vars)) {
        p = {};

        _forEachName(vars, function (name) {
          return p[name] = 1;
        });

        vars = p;
      }

      vars = _addAliasesToVars(parsedTargets, vars);
    }

    i = parsedTargets.length;

    while (i--) {
      if (~killingTargets.indexOf(parsedTargets[i])) {
        curLookup = propTweenLookup[i];

        if (vars === "all") {
          overwrittenProps[i] = vars;
          props = curLookup;
          curOverwriteProps = {};
        } else {
          curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
          props = vars;
        }

        for (p in props) {
          pt = curLookup && curLookup[p];

          if (pt) {
            if (!("kill" in pt.d) || pt.d.kill(p) === true) {
              _removeLinkedListItem(this, pt, "_pt");
            }

            delete curLookup[p];
          }

          if (curOverwriteProps !== "all") {
            curOverwriteProps[p] = 1;
          }
        }
      }
    }

    this._initted && !this._pt && firstPT && _interrupt(this); //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.

    return this;
  };

  Tween.to = function to(targets, vars) {
    return new Tween(targets, vars, arguments[2]);
  };

  Tween.from = function from(targets, vars) {
    return _createTweenType(1, arguments);
  };

  Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
    return new Tween(callback, 0, {
      immediateRender: false,
      lazy: false,
      overwrite: false,
      delay: delay,
      onComplete: callback,
      onReverseComplete: callback,
      onCompleteParams: params,
      onReverseCompleteParams: params,
      callbackScope: scope
    }); // we must use onReverseComplete too for things like timeline.add(() => {...}) which should be triggered in BOTH directions (forward and reverse)
  };

  Tween.fromTo = function fromTo(targets, fromVars, toVars) {
    return _createTweenType(2, arguments);
  };

  Tween.set = function set(targets, vars) {
    vars.duration = 0;
    vars.repeatDelay || (vars.repeat = 0);
    return new Tween(targets, vars);
  };

  Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
    return _globalTimeline.killTweensOf(targets, props, onlyActive);
  };

  return Tween;
}(Animation);

_setDefaults(Tween.prototype, {
  _targets: [],
  _lazy: 0,
  _startAt: 0,
  _op: 0,
  _onInit: 0
}); //add the pertinent timeline methods to Tween instances so that users can chain conveniently and create a timeline automatically. (removed due to concerns that it'd ultimately add to more confusion especially for beginners)
// _forEachName("to,from,fromTo,set,call,add,addLabel,addPause", name => {
// 	Tween.prototype[name] = function() {
// 		let tl = new Timeline();
// 		return _addToTimeline(tl, this)[name].apply(tl, toArray(arguments));
// 	}
// });
//for backward compatibility. Leverage the timeline calls.


_forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
  Tween[name] = function () {
    var tl = new Timeline(),
        params = _slice.call(arguments, 0);

    params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
    return tl[name].apply(tl, params);
  };
});
/*
 * --------------------------------------------------------------------------------------
 * PROPTWEEN
 * --------------------------------------------------------------------------------------
 */


var _setterPlain = function _setterPlain(target, property, value) {
  return target[property] = value;
},
    _setterFunc = function _setterFunc(target, property, value) {
  return target[property](value);
},
    _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
  return target[property](data.fp, value);
},
    _setterAttribute = function _setterAttribute(target, property, value) {
  return target.setAttribute(property, value);
},
    _getSetter = function _getSetter(target, property) {
  return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
},
    _renderPlain = function _renderPlain(ratio, data) {
  return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);
},
    _renderBoolean = function _renderBoolean(ratio, data) {
  return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
},
    _renderComplexString = function _renderComplexString(ratio, data) {
  var pt = data._pt,
      s = "";

  if (!ratio && data.b) {
    //b = beginning string
    s = data.b;
  } else if (ratio === 1 && data.e) {
    //e = ending string
    s = data.e;
  } else {
    while (pt) {
      s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s; //we use the "p" property for the text inbetween (like a suffix). And in the context of a complex string, the modifier (m) is typically just Math.round(), like for RGB colors.

      pt = pt._next;
    }

    s += data.c; //we use the "c" of the PropTween to store the final chunk of non-numeric text.
  }

  data.set(data.t, data.p, s, data);
},
    _renderPropTweens = function _renderPropTweens(ratio, data) {
  var pt = data._pt;

  while (pt) {
    pt.r(ratio, pt.d);
    pt = pt._next;
  }
},
    _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
  var pt = this._pt,
      next;

  while (pt) {
    next = pt._next;
    pt.p === property && pt.modifier(modifier, tween, target);
    pt = next;
  }
},
    _killPropTweensOf = function _killPropTweensOf(property) {
  var pt = this._pt,
      hasNonDependentRemaining,
      next;

  while (pt) {
    next = pt._next;

    if (pt.p === property && !pt.op || pt.op === property) {
      _removeLinkedListItem(this, pt, "_pt");
    } else if (!pt.dep) {
      hasNonDependentRemaining = 1;
    }

    pt = next;
  }

  return !hasNonDependentRemaining;
},
    _setterWithModifier = function _setterWithModifier(target, property, value, data) {
  data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
},
    _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
  var pt = parent._pt,
      next,
      pt2,
      first,
      last; //sorts the PropTween linked list in order of priority because some plugins need to do their work after ALL of the PropTweens were created (like RoundPropsPlugin and ModifiersPlugin)

  while (pt) {
    next = pt._next;
    pt2 = first;

    while (pt2 && pt2.pr > pt.pr) {
      pt2 = pt2._next;
    }

    if (pt._prev = pt2 ? pt2._prev : last) {
      pt._prev._next = pt;
    } else {
      first = pt;
    }

    if (pt._next = pt2) {
      pt2._prev = pt;
    } else {
      last = pt;
    }

    pt = next;
  }

  parent._pt = first;
}; //PropTween key: t = target, p = prop, r = renderer, d = data, s = start, c = change, op = overwriteProperty (ONLY populated when it's different than p), pr = priority, _next/_prev for the linked list siblings, set = setter, m = modifier, mSet = modifierSetter (the original setter, before a modifier was added)


var PropTween = /*#__PURE__*/function () {
  function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
    this.t = target;
    this.s = start;
    this.c = change;
    this.p = prop;
    this.r = renderer || _renderPlain;
    this.d = data || this;
    this.set = setter || _setterPlain;
    this.pr = priority || 0;
    this._next = next;

    if (next) {
      next._prev = this;
    }
  }

  var _proto4 = PropTween.prototype;

  _proto4.modifier = function modifier(func, tween, target) {
    this.mSet = this.mSet || this.set; //in case it was already set (a PropTween can only have one modifier)

    this.set = _setterWithModifier;
    this.m = func;
    this.mt = target; //modifier target

    this.tween = tween;
  };

  return PropTween;
}(); //Initialization tasks

_forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (name) {
  return _reservedProps[name] = 1;
});

_globals.TweenMax = _globals.TweenLite = Tween;
_globals.TimelineLite = _globals.TimelineMax = Timeline;
_globalTimeline = new Timeline({
  sortChildren: false,
  defaults: _defaults,
  autoRemoveChildren: true,
  id: "root",
  smoothChildTiming: true
});
_config.stringFilter = _colorStringFilter;

var _media = [],
    _listeners = {},
    _emptyArray = [],
    _lastMediaTime = 0,
    _contextID = 0,
    _dispatch = function _dispatch(type) {
  return (_listeners[type] || _emptyArray).map(function (f) {
    return f();
  });
},
    _onMediaChange = function _onMediaChange() {
  var time = Date.now(),
      matches = [];

  if (time - _lastMediaTime > 2) {
    _dispatch("matchMediaInit");

    _media.forEach(function (c) {
      var queries = c.queries,
          conditions = c.conditions,
          match,
          p,
          anyMatch,
          toggled;

      for (p in queries) {
        match = _win.matchMedia(queries[p]).matches; // Firefox doesn't update the "matches" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.

        match && (anyMatch = 1);

        if (match !== conditions[p]) {
          conditions[p] = match;
          toggled = 1;
        }
      }

      if (toggled) {
        c.revert();
        anyMatch && matches.push(c);
      }
    });

    _dispatch("matchMediaRevert");

    matches.forEach(function (c) {
      return c.onMatch(c, function (func) {
        return c.add(null, func);
      });
    });
    _lastMediaTime = time;

    _dispatch("matchMedia");
  }
};

var Context = /*#__PURE__*/function () {
  function Context(func, scope) {
    this.selector = scope && selector(scope);
    this.data = [];
    this._r = []; // returned/cleanup functions

    this.isReverted = false;
    this.id = _contextID++; // to work around issues that frameworks like Vue cause by making things into Proxies which make it impossible to do something like _media.indexOf(this) because "this" would no longer refer to the Context instance itself - it'd refer to a Proxy! We needed a way to identify the context uniquely

    func && this.add(func);
  }

  var _proto5 = Context.prototype;

  _proto5.add = function add(name, func, scope) {
    // possible future addition if we need the ability to add() an animation to a context and for whatever reason cannot create that animation inside of a context.add(() => {...}) function.
    // if (name && _isFunction(name.revert)) {
    // 	this.data.push(name);
    // 	return (name._ctx = this);
    // }
    if (_isFunction(name)) {
      scope = func;
      func = name;
      name = _isFunction;
    }

    var self = this,
        f = function f() {
      var prev = _context,
          prevSelector = self.selector,
          result;
      prev && prev !== self && prev.data.push(self);
      scope && (self.selector = selector(scope));
      _context = self;
      result = func.apply(self, arguments);
      _isFunction(result) && self._r.push(result);
      _context = prev;
      self.selector = prevSelector;
      self.isReverted = false;
      return result;
    };

    self.last = f;
    return name === _isFunction ? f(self, function (func) {
      return self.add(null, func);
    }) : name ? self[name] = f : f;
  };

  _proto5.ignore = function ignore(func) {
    var prev = _context;
    _context = null;
    func(this);
    _context = prev;
  };

  _proto5.getTweens = function getTweens() {
    var a = [];
    this.data.forEach(function (e) {
      return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === "nested") && a.push(e);
    });
    return a;
  };

  _proto5.clear = function clear() {
    this._r.length = this.data.length = 0;
  };

  _proto5.kill = function kill(revert, matchMedia) {
    var _this4 = this;

    if (revert) {
      (function () {
        var tweens = _this4.getTweens(),
            i = _this4.data.length,
            t;

        while (i--) {
          // Flip plugin tweens are very different in that they should actually be pushed to their end. The plugin replaces the timeline's .revert() method to do exactly that. But we also need to remove any of those nested tweens inside the flip timeline so that they don't get individually reverted.
          t = _this4.data[i];

          if (t.data === "isFlip") {
            t.revert();
            t.getChildren(true, true, false).forEach(function (tween) {
              return tweens.splice(tweens.indexOf(tween), 1);
            });
          }
        } // save as an object so that we can cache the globalTime for each tween to optimize performance during the sort


        tweens.map(function (t) {
          return {
            g: t._dur || t._delay || t._sat && !t._sat.vars.immediateRender ? t.globalTime(0) : -Infinity,
            t: t
          };
        }).sort(function (a, b) {
          return b.g - a.g || -Infinity;
        }).forEach(function (o) {
          return o.t.revert(revert);
        }); // note: all of the _startAt tweens should be reverted in reverse order that they were created, and they'll all have the same globalTime (-1) so the " || -1" in the sort keeps the order properly.

        i = _this4.data.length;

        while (i--) {
          // make sure we loop backwards so that, for example, SplitTexts that were created later on the same element get reverted first
          t = _this4.data[i];

          if (t instanceof Timeline) {
            if (t.data !== "nested") {
              t.scrollTrigger && t.scrollTrigger.revert();
              t.kill(); // don't revert() the timeline because that's duplicating efforts since we already reverted all the tweens
            }
          } else {
            !(t instanceof Tween) && t.revert && t.revert(revert);
          }
        }

        _this4._r.forEach(function (f) {
          return f(revert, _this4);
        });

        _this4.isReverted = true;
      })();
    } else {
      this.data.forEach(function (e) {
        return e.kill && e.kill();
      });
    }

    this.clear();

    if (matchMedia) {
      var i = _media.length;

      while (i--) {
        // previously, we checked _media.indexOf(this), but some frameworks like Vue enforce Proxy objects that make it impossible to get the proper result that way, so we must use a unique ID number instead.
        _media[i].id === this.id && _media.splice(i, 1);
      }
    }
  } // killWithCleanup() {
  // 	this.kill();
  // 	this._r.forEach(f => f(false, this));
  // }
  ;

  _proto5.revert = function revert(config) {
    this.kill(config || {});
  };

  return Context;
}();

var MatchMedia = /*#__PURE__*/function () {
  function MatchMedia(scope) {
    this.contexts = [];
    this.scope = scope;
    _context && _context.data.push(this);
  }

  var _proto6 = MatchMedia.prototype;

  _proto6.add = function add(conditions, func, scope) {
    _isObject(conditions) || (conditions = {
      matches: conditions
    });
    var context = new Context(0, scope || this.scope),
        cond = context.conditions = {},
        mq,
        p,
        active;
    _context && !context.selector && (context.selector = _context.selector); // in case a context is created inside a context. Like a gsap.matchMedia() that's inside a scoped gsap.context()

    this.contexts.push(context);
    func = context.add("onMatch", func);
    context.queries = conditions;

    for (p in conditions) {
      if (p === "all") {
        active = 1;
      } else {
        mq = _win.matchMedia(conditions[p]);

        if (mq) {
          _media.indexOf(context) < 0 && _media.push(context);
          (cond[p] = mq.matches) && (active = 1);
          mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
        }
      }
    }

    active && func(context, function (f) {
      return context.add(null, f);
    });
    return this;
  } // refresh() {
  // 	let time = _lastMediaTime,
  // 		media = _media;
  // 	_lastMediaTime = -1;
  // 	_media = this.contexts;
  // 	_onMediaChange();
  // 	_lastMediaTime = time;
  // 	_media = media;
  // }
  ;

  _proto6.revert = function revert(config) {
    this.kill(config || {});
  };

  _proto6.kill = function kill(revert) {
    this.contexts.forEach(function (c) {
      return c.kill(revert, true);
    });
  };

  return MatchMedia;
}();
/*
 * --------------------------------------------------------------------------------------
 * GSAP
 * --------------------------------------------------------------------------------------
 */


var _gsap = {
  registerPlugin: function registerPlugin() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    args.forEach(function (config) {
      return _createPlugin(config);
    });
  },
  timeline: function timeline(vars) {
    return new Timeline(vars);
  },
  getTweensOf: function getTweensOf(targets, onlyActive) {
    return _globalTimeline.getTweensOf(targets, onlyActive);
  },
  getProperty: function getProperty(target, property, unit, uncache) {
    _isString(target) && (target = toArray(target)[0]); //in case selector text or an array is passed in

    var getter = _getCache(target || {}).get,
        format = unit ? _passThrough : _numericIfPossible;

    unit === "native" && (unit = "");
    return !target ? target : !property ? function (property, unit, uncache) {
      return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
  },
  quickSetter: function quickSetter(target, property, unit) {
    target = toArray(target);

    if (target.length > 1) {
      var setters = target.map(function (t) {
        return gsap.quickSetter(t, property, unit);
      }),
          l = setters.length;
      return function (value) {
        var i = l;

        while (i--) {
          setters[i](value);
        }
      };
    }

    target = target[0] || {};

    var Plugin = _plugins[property],
        cache = _getCache(target),
        p = cache.harness && (cache.harness.aliases || {})[property] || property,
        // in case it's an alias, like "rotate" for "rotation".
    setter = Plugin ? function (value) {
      var p = new Plugin();
      _quickTween._pt = 0;
      p.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
      p.render(1, p);
      _quickTween._pt && _renderPropTweens(1, _quickTween);
    } : cache.set(target, p);

    return Plugin ? setter : function (value) {
      return setter(target, p, unit ? value + unit : value, cache, 1);
    };
  },
  quickTo: function quickTo(target, property, vars) {
    var _setDefaults2;

    var tween = gsap.to(target, _setDefaults((_setDefaults2 = {}, _setDefaults2[property] = "+=0.1", _setDefaults2.paused = true, _setDefaults2.stagger = 0, _setDefaults2), vars || {})),
        func = function func(value, start, startIsRelative) {
      return tween.resetTo(property, value, start, startIsRelative);
    };

    func.tween = tween;
    return func;
  },
  isTweening: function isTweening(targets) {
    return _globalTimeline.getTweensOf(targets, true).length > 0;
  },
  defaults: function defaults(value) {
    value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
    return _mergeDeep(_defaults, value || {});
  },
  config: function config(value) {
    return _mergeDeep(_config, value || {});
  },
  registerEffect: function registerEffect(_ref3) {
    var name = _ref3.name,
        effect = _ref3.effect,
        plugins = _ref3.plugins,
        defaults = _ref3.defaults,
        extendTimeline = _ref3.extendTimeline;
    (plugins || "").split(",").forEach(function (pluginName) {
      return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
    });

    _effects[name] = function (targets, vars, tl) {
      return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
    };

    if (extendTimeline) {
      Timeline.prototype[name] = function (targets, vars, position) {
        return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
      };
    }
  },
  registerEase: function registerEase(name, ease) {
    _easeMap[name] = _parseEase(ease);
  },
  parseEase: function parseEase(ease, defaultEase) {
    return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
  },
  getById: function getById(id) {
    return _globalTimeline.getById(id);
  },
  exportRoot: function exportRoot(vars, includeDelayedCalls) {
    if (vars === void 0) {
      vars = {};
    }

    var tl = new Timeline(vars),
        child,
        next;
    tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);

    _globalTimeline.remove(tl);

    tl._dp = 0; //otherwise it'll get re-activated when adding children and be re-introduced into _globalTimeline's linked list (then added to itself).

    tl._time = tl._tTime = _globalTimeline._time;
    child = _globalTimeline._first;

    while (child) {
      next = child._next;

      if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
        _addToTimeline(tl, child, child._start - child._delay);
      }

      child = next;
    }

    _addToTimeline(_globalTimeline, tl, 0);

    return tl;
  },
  context: function context(func, scope) {
    return func ? new Context(func, scope) : _context;
  },
  matchMedia: function matchMedia(scope) {
    return new MatchMedia(scope);
  },
  matchMediaRefresh: function matchMediaRefresh() {
    return _media.forEach(function (c) {
      var cond = c.conditions,
          found,
          p;

      for (p in cond) {
        if (cond[p]) {
          cond[p] = false;
          found = 1;
        }
      }

      found && c.revert();
    }) || _onMediaChange();
  },
  addEventListener: function addEventListener(type, callback) {
    var a = _listeners[type] || (_listeners[type] = []);
    ~a.indexOf(callback) || a.push(callback);
  },
  removeEventListener: function removeEventListener(type, callback) {
    var a = _listeners[type],
        i = a && a.indexOf(callback);
    i >= 0 && a.splice(i, 1);
  },
  utils: {
    wrap: wrap,
    wrapYoyo: wrapYoyo,
    distribute: distribute,
    random: random,
    snap: snap,
    normalize: normalize,
    getUnit: getUnit,
    clamp: clamp,
    splitColor: splitColor,
    toArray: toArray,
    selector: selector,
    mapRange: mapRange,
    pipe: pipe,
    unitize: unitize,
    interpolate: interpolate,
    shuffle: shuffle
  },
  install: _install,
  effects: _effects,
  ticker: _ticker,
  updateRoot: Timeline.updateRoot,
  plugins: _plugins,
  globalTimeline: _globalTimeline,
  core: {
    PropTween: PropTween,
    globals: _addGlobal,
    Tween: Tween,
    Timeline: Timeline,
    Animation: Animation,
    getCache: _getCache,
    _removeLinkedListItem: _removeLinkedListItem,
    reverting: function reverting() {
      return _reverting;
    },
    context: function context(toAdd) {
      if (toAdd && _context) {
        _context.data.push(toAdd);

        toAdd._ctx = _context;
      }

      return _context;
    },
    suppressOverwrites: function suppressOverwrites(value) {
      return _suppressOverwrites = value;
    }
  }
};

_forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
  return _gsap[name] = Tween[name];
});

_ticker.add(Timeline.updateRoot);

_quickTween = _gsap.to({}, {
  duration: 0
}); // ---- EXTRA PLUGINS --------------------------------------------------------

var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
  var pt = plugin._pt;

  while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
    pt = pt._next;
  }

  return pt;
},
    _addModifiers = function _addModifiers(tween, modifiers) {
  var targets = tween._targets,
      p,
      i,
      pt;

  for (p in modifiers) {
    i = targets.length;

    while (i--) {
      pt = tween._ptLookup[i][p];

      if (pt && (pt = pt.d)) {
        if (pt._pt) {
          // is a plugin
          pt = _getPluginPropTween(pt, p);
        }

        pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
      }
    }
  }
},
    _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
  return {
    name: name,
    rawVars: 1,
    //don't pre-process function-based values or "random()" strings.
    init: function init(target, vars, tween) {
      tween._onInit = function (tween) {
        var temp, p;

        if (_isString(vars)) {
          temp = {};

          _forEachName(vars, function (name) {
            return temp[name] = 1;
          }); //if the user passes in a comma-delimited list of property names to roundProps, like "x,y", we round to whole numbers.


          vars = temp;
        }

        if (modifier) {
          temp = {};

          for (p in vars) {
            temp[p] = modifier(vars[p]);
          }

          vars = temp;
        }

        _addModifiers(tween, vars);
      };
    }
  };
}; //register core plugins


var gsap = _gsap.registerPlugin({
  name: "attr",
  init: function init(target, vars, tween, index, targets) {
    var p, pt, v;
    this.tween = tween;

    for (p in vars) {
      v = target.getAttribute(p) || "";
      pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
      pt.op = p;
      pt.b = v; // record the beginning value so we can revert()

      this._props.push(p);
    }
  },
  render: function render(ratio, data) {
    var pt = data._pt;

    while (pt) {
      _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d); // if reverting, go back to the original (pt.b)

      pt = pt._next;
    }
  }
}, {
  name: "endArray",
  init: function init(target, value) {
    var i = value.length;

    while (i--) {
      this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);
    }
  }
}, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap; //to prevent the core plugins from being dropped via aggressive tree shaking, we must include them in the variable declaration in this way.

Tween.version = Timeline.version = gsap.version = "3.12.7";
_coreReady = 1;
_windowExists() && _wake();
var Power0 = _easeMap.Power0,
    Power1 = _easeMap.Power1,
    Power2 = _easeMap.Power2,
    Power3 = _easeMap.Power3,
    Power4 = _easeMap.Power4,
    Linear = _easeMap.Linear,
    Quad = _easeMap.Quad,
    Cubic = _easeMap.Cubic,
    Quart = _easeMap.Quart,
    Quint = _easeMap.Quint,
    Strong = _easeMap.Strong,
    Elastic = _easeMap.Elastic,
    Back = _easeMap.Back,
    SteppedEase = _easeMap.SteppedEase,
    Bounce = _easeMap.Bounce,
    Sine = _easeMap.Sine,
    Expo = _easeMap.Expo,
    Circ = _easeMap.Circ;

 //export some internal methods/orojects for use in CSSPlugin so that we can externalize that file and allow custom builds that exclude it.



/***/ }),

/***/ 738:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Ay: () => (/* binding */ gsapWithCSS)
/* harmony export */ });
/* unused harmony exports gsap, TweenMax */
/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8607);
/* harmony import */ var _CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2650);


var gsapWithCSS = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os.registerPlugin(_CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__/* .CSSPlugin */ .H0) || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__/* .gsap */ .os,
    // to protect from tree shaking
TweenMaxWithCSS = gsapWithCSS.core.Tween;


/***/ }),

/***/ 2694:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(6925);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ 5556:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(2694)();
}


/***/ }),

/***/ 6925:
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ 1247:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;
/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

var Scheduler = __webpack_require__(9982),
  React = __webpack_require__(6540),
  ReactDOM = __webpack_require__(961);
function formatProdErrorMessage(code) {
  var url = "https://react.dev/errors/" + code;
  if (1 < arguments.length) {
    url += "?args[]=" + encodeURIComponent(arguments[1]);
    for (var i = 2; i < arguments.length; i++)
      url += "&args[]=" + encodeURIComponent(arguments[i]);
  }
  return (
    "Minified React error #" +
    code +
    "; visit " +
    url +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
function isValidContainer(node) {
  return !(
    !node ||
    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)
  );
}
var REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"),
  REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
  REACT_PORTAL_TYPE = Symbol.for("react.portal"),
  REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
  REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
  REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
  REACT_PROVIDER_TYPE = Symbol.for("react.provider"),
  REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
  REACT_CONTEXT_TYPE = Symbol.for("react.context"),
  REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
  REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
  REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
  REACT_MEMO_TYPE = Symbol.for("react.memo"),
  REACT_LAZY_TYPE = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.tracing_marker");
var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
function getIteratorFn(maybeIterable) {
  if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
  maybeIterable =
    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
    maybeIterable["@@iterator"];
  return "function" === typeof maybeIterable ? maybeIterable : null;
}
var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
function getComponentNameFromType(type) {
  if (null == type) return null;
  if ("function" === typeof type)
    return type.$$typeof === REACT_CLIENT_REFERENCE
      ? null
      : type.displayName || type.name || null;
  if ("string" === typeof type) return type;
  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return "Fragment";
    case REACT_PORTAL_TYPE:
      return "Portal";
    case REACT_PROFILER_TYPE:
      return "Profiler";
    case REACT_STRICT_MODE_TYPE:
      return "StrictMode";
    case REACT_SUSPENSE_TYPE:
      return "Suspense";
    case REACT_SUSPENSE_LIST_TYPE:
      return "SuspenseList";
  }
  if ("object" === typeof type)
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return (type.displayName || "Context") + ".Provider";
      case REACT_CONSUMER_TYPE:
        return (type._context.displayName || "Context") + ".Consumer";
      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        type = type.displayName;
        type ||
          ((type = innerType.displayName || innerType.name || ""),
          (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
        return type;
      case REACT_MEMO_TYPE:
        return (
          (innerType = type.displayName || null),
          null !== innerType
            ? innerType
            : getComponentNameFromType(type.type) || "Memo"
        );
      case REACT_LAZY_TYPE:
        innerType = type._payload;
        type = type._init;
        try {
          return getComponentNameFromType(type(innerType));
        } catch (x) {}
    }
  return null;
}
var ReactSharedInternals =
    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
  assign = Object.assign,
  prefix,
  suffix;
function describeBuiltInComponentFrame(name) {
  if (void 0 === prefix)
    try {
      throw Error();
    } catch (x) {
      var match = x.stack.trim().match(/\n( *(at )?)/);
      prefix = (match && match[1]) || "";
      suffix =
        -1 < x.stack.indexOf("\n    at")
          ? " (<anonymous>)"
          : -1 < x.stack.indexOf("@")
            ? "@unknown:0:0"
            : "";
    }
  return "\n" + prefix + name + suffix;
}
var reentry = !1;
function describeNativeComponentFrame(fn, construct) {
  if (!fn || reentry) return "";
  reentry = !0;
  var previousPrepareStackTrace = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    var RunInRootFrame = {
      DetermineComponentFrameRoot: function () {
        try {
          if (construct) {
            var Fake = function () {
              throw Error();
            };
            Object.defineProperty(Fake.prototype, "props", {
              set: function () {
                throw Error();
              }
            });
            if ("object" === typeof Reflect && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x) {
                var control = x;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x$0) {
                control = x$0;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x$1) {
              control = x$1;
            }
            (Fake = fn()) &&
              "function" === typeof Fake.catch &&
              Fake.catch(function () {});
          }
        } catch (sample) {
          if (sample && control && "string" === typeof sample.stack)
            return [sample.stack, control.stack];
        }
        return [null, null];
      }
    };
    RunInRootFrame.DetermineComponentFrameRoot.displayName =
      "DetermineComponentFrameRoot";
    var namePropDescriptor = Object.getOwnPropertyDescriptor(
      RunInRootFrame.DetermineComponentFrameRoot,
      "name"
    );
    namePropDescriptor &&
      namePropDescriptor.configurable &&
      Object.defineProperty(
        RunInRootFrame.DetermineComponentFrameRoot,
        "name",
        { value: "DetermineComponentFrameRoot" }
      );
    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),
      sampleStack = _RunInRootFrame$Deter[0],
      controlStack = _RunInRootFrame$Deter[1];
    if (sampleStack && controlStack) {
      var sampleLines = sampleStack.split("\n"),
        controlLines = controlStack.split("\n");
      for (
        namePropDescriptor = RunInRootFrame = 0;
        RunInRootFrame < sampleLines.length &&
        !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot");

      )
        RunInRootFrame++;
      for (
        ;
        namePropDescriptor < controlLines.length &&
        !controlLines[namePropDescriptor].includes(
          "DetermineComponentFrameRoot"
        );

      )
        namePropDescriptor++;
      if (
        RunInRootFrame === sampleLines.length ||
        namePropDescriptor === controlLines.length
      )
        for (
          RunInRootFrame = sampleLines.length - 1,
            namePropDescriptor = controlLines.length - 1;
          1 <= RunInRootFrame &&
          0 <= namePropDescriptor &&
          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];

        )
          namePropDescriptor--;
      for (
        ;
        1 <= RunInRootFrame && 0 <= namePropDescriptor;
        RunInRootFrame--, namePropDescriptor--
      )
        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
            do
              if (
                (RunInRootFrame--,
                namePropDescriptor--,
                0 > namePropDescriptor ||
                  sampleLines[RunInRootFrame] !==
                    controlLines[namePropDescriptor])
              ) {
                var frame =
                  "\n" +
                  sampleLines[RunInRootFrame].replace(" at new ", " at ");
                fn.displayName &&
                  frame.includes("<anonymous>") &&
                  (frame = frame.replace("<anonymous>", fn.displayName));
                return frame;
              }
            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
          }
          break;
        }
    }
  } finally {
    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);
  }
  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "")
    ? describeBuiltInComponentFrame(previousPrepareStackTrace)
    : "";
}
function describeFiber(fiber) {
  switch (fiber.tag) {
    case 26:
    case 27:
    case 5:
      return describeBuiltInComponentFrame(fiber.type);
    case 16:
      return describeBuiltInComponentFrame("Lazy");
    case 13:
      return describeBuiltInComponentFrame("Suspense");
    case 19:
      return describeBuiltInComponentFrame("SuspenseList");
    case 0:
    case 15:
      return (fiber = describeNativeComponentFrame(fiber.type, !1)), fiber;
    case 11:
      return (
        (fiber = describeNativeComponentFrame(fiber.type.render, !1)), fiber
      );
    case 1:
      return (fiber = describeNativeComponentFrame(fiber.type, !0)), fiber;
    default:
      return "";
  }
}
function getStackByFiberInDevAndProd(workInProgress) {
  try {
    var info = "";
    do
      (info += describeFiber(workInProgress)),
        (workInProgress = workInProgress.return);
    while (workInProgress);
    return info;
  } catch (x) {
    return "\nError generating stack: " + x.message + "\n" + x.stack;
  }
}
function getNearestMountedFiber(fiber) {
  var node = fiber,
    nearestMounted = fiber;
  if (fiber.alternate) for (; node.return; ) node = node.return;
  else {
    fiber = node;
    do
      (node = fiber),
        0 !== (node.flags & 4098) && (nearestMounted = node.return),
        (fiber = node.return);
    while (fiber);
  }
  return 3 === node.tag ? nearestMounted : null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (13 === fiber.tag) {
    var suspenseState = fiber.memoizedState;
    null === suspenseState &&
      ((fiber = fiber.alternate),
      null !== fiber && (suspenseState = fiber.memoizedState));
    if (null !== suspenseState) return suspenseState.dehydrated;
  }
  return null;
}
function assertIsMounted(fiber) {
  if (getNearestMountedFiber(fiber) !== fiber)
    throw Error(formatProdErrorMessage(188));
}
function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    alternate = getNearestMountedFiber(fiber);
    if (null === alternate) throw Error(formatProdErrorMessage(188));
    return alternate !== fiber ? null : fiber;
  }
  for (var a = fiber, b = alternate; ; ) {
    var parentA = a.return;
    if (null === parentA) break;
    var parentB = parentA.alternate;
    if (null === parentB) {
      b = parentA.return;
      if (null !== b) {
        a = b;
        continue;
      }
      break;
    }
    if (parentA.child === parentB.child) {
      for (parentB = parentA.child; parentB; ) {
        if (parentB === a) return assertIsMounted(parentA), fiber;
        if (parentB === b) return assertIsMounted(parentA), alternate;
        parentB = parentB.sibling;
      }
      throw Error(formatProdErrorMessage(188));
    }
    if (a.return !== b.return) (a = parentA), (b = parentB);
    else {
      for (var didFindChild = !1, child$2 = parentA.child; child$2; ) {
        if (child$2 === a) {
          didFindChild = !0;
          a = parentA;
          b = parentB;
          break;
        }
        if (child$2 === b) {
          didFindChild = !0;
          b = parentA;
          a = parentB;
          break;
        }
        child$2 = child$2.sibling;
      }
      if (!didFindChild) {
        for (child$2 = parentB.child; child$2; ) {
          if (child$2 === a) {
            didFindChild = !0;
            a = parentB;
            b = parentA;
            break;
          }
          if (child$2 === b) {
            didFindChild = !0;
            b = parentB;
            a = parentA;
            break;
          }
          child$2 = child$2.sibling;
        }
        if (!didFindChild) throw Error(formatProdErrorMessage(189));
      }
    }
    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));
  }
  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));
  return a.stateNode.current === a ? fiber : alternate;
}
function findCurrentHostFiberImpl(node) {
  var tag = node.tag;
  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
  for (node = node.child; null !== node; ) {
    tag = findCurrentHostFiberImpl(node);
    if (null !== tag) return tag;
    node = node.sibling;
  }
  return null;
}
var isArrayImpl = Array.isArray,
  ReactDOMSharedInternals =
    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
  sharedNotPendingObject = {
    pending: !1,
    data: null,
    method: null,
    action: null
  },
  valueStack = [],
  index = -1;
function createCursor(defaultValue) {
  return { current: defaultValue };
}
function pop(cursor) {
  0 > index ||
    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);
}
function push(cursor, value) {
  index++;
  valueStack[index] = cursor.current;
  cursor.current = value;
}
var contextStackCursor = createCursor(null),
  contextFiberStackCursor = createCursor(null),
  rootInstanceStackCursor = createCursor(null),
  hostTransitionProviderCursor = createCursor(null);
function pushHostContainer(fiber, nextRootInstance) {
  push(rootInstanceStackCursor, nextRootInstance);
  push(contextFiberStackCursor, fiber);
  push(contextStackCursor, null);
  fiber = nextRootInstance.nodeType;
  switch (fiber) {
    case 9:
    case 11:
      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)
        ? (nextRootInstance = nextRootInstance.namespaceURI)
          ? getOwnHostContext(nextRootInstance)
          : 0
        : 0;
      break;
    default:
      if (
        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),
        (nextRootInstance = fiber.tagName),
        (fiber = fiber.namespaceURI))
      )
        (fiber = getOwnHostContext(fiber)),
          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));
      else
        switch (nextRootInstance) {
          case "svg":
            nextRootInstance = 1;
            break;
          case "math":
            nextRootInstance = 2;
            break;
          default:
            nextRootInstance = 0;
        }
  }
  pop(contextStackCursor);
  push(contextStackCursor, nextRootInstance);
}
function popHostContainer() {
  pop(contextStackCursor);
  pop(contextFiberStackCursor);
  pop(rootInstanceStackCursor);
}
function pushHostContext(fiber) {
  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);
  var context = contextStackCursor.current;
  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);
  context !== JSCompiler_inline_result &&
    (push(contextFiberStackCursor, fiber),
    push(contextStackCursor, JSCompiler_inline_result));
}
function popHostContext(fiber) {
  contextFiberStackCursor.current === fiber &&
    (pop(contextStackCursor), pop(contextFiberStackCursor));
  hostTransitionProviderCursor.current === fiber &&
    (pop(hostTransitionProviderCursor),
    (HostTransitionContext._currentValue = sharedNotPendingObject));
}
var hasOwnProperty = Object.prototype.hasOwnProperty,
  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,
  cancelCallback$1 = Scheduler.unstable_cancelCallback,
  shouldYield = Scheduler.unstable_shouldYield,
  requestPaint = Scheduler.unstable_requestPaint,
  now = Scheduler.unstable_now,
  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
  ImmediatePriority = Scheduler.unstable_ImmediatePriority,
  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
  NormalPriority$1 = Scheduler.unstable_NormalPriority,
  LowPriority = Scheduler.unstable_LowPriority,
  IdlePriority = Scheduler.unstable_IdlePriority,
  log$1 = Scheduler.log,
  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,
  rendererID = null,
  injectedHook = null;
function onCommitRoot(root) {
  if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot)
    try {
      injectedHook.onCommitFiberRoot(
        rendererID,
        root,
        void 0,
        128 === (root.current.flags & 128)
      );
    } catch (err) {}
}
function setIsStrictModeForDevtools(newIsStrictMode) {
  "function" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);
  if (injectedHook && "function" === typeof injectedHook.setStrictMode)
    try {
      injectedHook.setStrictMode(rendererID, newIsStrictMode);
    } catch (err) {}
}
var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
  log = Math.log,
  LN2 = Math.LN2;
function clz32Fallback(x) {
  x >>>= 0;
  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;
}
var nextTransitionLane = 128,
  nextRetryLane = 4194304;
function getHighestPriorityLanes(lanes) {
  var pendingSyncLanes = lanes & 42;
  if (0 !== pendingSyncLanes) return pendingSyncLanes;
  switch (lanes & -lanes) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
      return 64;
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return lanes & 4194176;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
      return lanes & 62914560;
    case 67108864:
      return 67108864;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 0;
    default:
      return lanes;
  }
}
function getNextLanes(root, wipLanes) {
  var pendingLanes = root.pendingLanes;
  if (0 === pendingLanes) return 0;
  var nextLanes = 0,
    suspendedLanes = root.suspendedLanes,
    pingedLanes = root.pingedLanes,
    warmLanes = root.warmLanes;
  root = 0 !== root.finishedLanes;
  var nonIdlePendingLanes = pendingLanes & 134217727;
  0 !== nonIdlePendingLanes
    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),
      0 !== pendingLanes
        ? (nextLanes = getHighestPriorityLanes(pendingLanes))
        : ((pingedLanes &= nonIdlePendingLanes),
          0 !== pingedLanes
            ? (nextLanes = getHighestPriorityLanes(pingedLanes))
            : root ||
              ((warmLanes = nonIdlePendingLanes & ~warmLanes),
              0 !== warmLanes &&
                (nextLanes = getHighestPriorityLanes(warmLanes)))))
    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),
      0 !== nonIdlePendingLanes
        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))
        : 0 !== pingedLanes
          ? (nextLanes = getHighestPriorityLanes(pingedLanes))
          : root ||
            ((warmLanes = pendingLanes & ~warmLanes),
            0 !== warmLanes &&
              (nextLanes = getHighestPriorityLanes(warmLanes))));
  return 0 === nextLanes
    ? 0
    : 0 !== wipLanes &&
        wipLanes !== nextLanes &&
        0 === (wipLanes & suspendedLanes) &&
        ((suspendedLanes = nextLanes & -nextLanes),
        (warmLanes = wipLanes & -wipLanes),
        suspendedLanes >= warmLanes ||
          (32 === suspendedLanes && 0 !== (warmLanes & 4194176)))
      ? wipLanes
      : nextLanes;
}
function checkIfRootIsPrerendering(root, renderLanes) {
  return (
    0 ===
    (root.pendingLanes &
      ~(root.suspendedLanes & ~root.pingedLanes) &
      renderLanes)
  );
}
function computeExpirationTime(lane, currentTime) {
  switch (lane) {
    case 1:
    case 2:
    case 4:
    case 8:
      return currentTime + 250;
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return currentTime + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
      return -1;
    case 67108864:
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function claimNextTransitionLane() {
  var lane = nextTransitionLane;
  nextTransitionLane <<= 1;
  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
  return lane;
}
function claimNextRetryLane() {
  var lane = nextRetryLane;
  nextRetryLane <<= 1;
  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
  return lane;
}
function createLaneMap(initial) {
  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);
  return laneMap;
}
function markRootUpdated$1(root, updateLane) {
  root.pendingLanes |= updateLane;
  268435456 !== updateLane &&
    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));
}
function markRootFinished(
  root,
  finishedLanes,
  remainingLanes,
  spawnedLane,
  updatedLanes,
  suspendedRetryLanes
) {
  var previouslyPendingLanes = root.pendingLanes;
  root.pendingLanes = remainingLanes;
  root.suspendedLanes = 0;
  root.pingedLanes = 0;
  root.warmLanes = 0;
  root.expiredLanes &= remainingLanes;
  root.entangledLanes &= remainingLanes;
  root.errorRecoveryDisabledLanes &= remainingLanes;
  root.shellSuspendCounter = 0;
  var entanglements = root.entanglements,
    expirationTimes = root.expirationTimes,
    hiddenUpdates = root.hiddenUpdates;
  for (
    remainingLanes = previouslyPendingLanes & ~remainingLanes;
    0 < remainingLanes;

  ) {
    var index$7 = 31 - clz32(remainingLanes),
      lane = 1 << index$7;
    entanglements[index$7] = 0;
    expirationTimes[index$7] = -1;
    var hiddenUpdatesForLane = hiddenUpdates[index$7];
    if (null !== hiddenUpdatesForLane)
      for (
        hiddenUpdates[index$7] = null, index$7 = 0;
        index$7 < hiddenUpdatesForLane.length;
        index$7++
      ) {
        var update = hiddenUpdatesForLane[index$7];
        null !== update && (update.lane &= -536870913);
      }
    remainingLanes &= ~lane;
  }
  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
  0 !== suspendedRetryLanes &&
    0 === updatedLanes &&
    0 !== root.tag &&
    (root.suspendedLanes |=
      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
}
function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
  root.pendingLanes |= spawnedLane;
  root.suspendedLanes &= ~spawnedLane;
  var spawnedLaneIndex = 31 - clz32(spawnedLane);
  root.entangledLanes |= spawnedLane;
  root.entanglements[spawnedLaneIndex] =
    root.entanglements[spawnedLaneIndex] |
    1073741824 |
    (entangledLanes & 4194218);
}
function markRootEntangled(root, entangledLanes) {
  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
  for (root = root.entanglements; rootEntangledLanes; ) {
    var index$8 = 31 - clz32(rootEntangledLanes),
      lane = 1 << index$8;
    (lane & entangledLanes) | (root[index$8] & entangledLanes) &&
      (root[index$8] |= entangledLanes);
    rootEntangledLanes &= ~lane;
  }
}
function lanesToEventPriority(lanes) {
  lanes &= -lanes;
  return 2 < lanes
    ? 8 < lanes
      ? 0 !== (lanes & 134217727)
        ? 32
        : 268435456
      : 8
    : 2;
}
function resolveUpdatePriority() {
  var updatePriority = ReactDOMSharedInternals.p;
  if (0 !== updatePriority) return updatePriority;
  updatePriority = window.event;
  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);
}
function runWithPriority(priority, fn) {
  var previousPriority = ReactDOMSharedInternals.p;
  try {
    return (ReactDOMSharedInternals.p = priority), fn();
  } finally {
    ReactDOMSharedInternals.p = previousPriority;
  }
}
var randomKey = Math.random().toString(36).slice(2),
  internalInstanceKey = "__reactFiber$" + randomKey,
  internalPropsKey = "__reactProps$" + randomKey,
  internalContainerInstanceKey = "__reactContainer$" + randomKey,
  internalEventHandlersKey = "__reactEvents$" + randomKey,
  internalEventHandlerListenersKey = "__reactListeners$" + randomKey,
  internalEventHandlesSetKey = "__reactHandles$" + randomKey,
  internalRootNodeResourcesKey = "__reactResources$" + randomKey,
  internalHoistableMarker = "__reactMarker$" + randomKey;
function detachDeletedInstance(node) {
  delete node[internalInstanceKey];
  delete node[internalPropsKey];
  delete node[internalEventHandlersKey];
  delete node[internalEventHandlerListenersKey];
  delete node[internalEventHandlesSetKey];
}
function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];
  if (targetInst) return targetInst;
  for (var parentNode = targetNode.parentNode; parentNode; ) {
    if (
      (targetInst =
        parentNode[internalContainerInstanceKey] ||
        parentNode[internalInstanceKey])
    ) {
      parentNode = targetInst.alternate;
      if (
        null !== targetInst.child ||
        (null !== parentNode && null !== parentNode.child)
      )
        for (
          targetNode = getParentSuspenseInstance(targetNode);
          null !== targetNode;

        ) {
          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;
          targetNode = getParentSuspenseInstance(targetNode);
        }
      return targetInst;
    }
    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }
  return null;
}
function getInstanceFromNode(node) {
  if (
    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])
  ) {
    var tag = node.tag;
    if (
      5 === tag ||
      6 === tag ||
      13 === tag ||
      26 === tag ||
      27 === tag ||
      3 === tag
    )
      return node;
  }
  return null;
}
function getNodeFromInstance(inst) {
  var tag = inst.tag;
  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;
  throw Error(formatProdErrorMessage(33));
}
function getResourcesFromRoot(root) {
  var resources = root[internalRootNodeResourcesKey];
  resources ||
    (resources = root[internalRootNodeResourcesKey] =
      { hoistableStyles: new Map(), hoistableScripts: new Map() });
  return resources;
}
function markNodeAsHoistable(node) {
  node[internalHoistableMarker] = !0;
}
var allNativeEvents = new Set(),
  registrationNameDependencies = {};
function registerTwoPhaseEvent(registrationName, dependencies) {
  registerDirectEvent(registrationName, dependencies);
  registerDirectEvent(registrationName + "Capture", dependencies);
}
function registerDirectEvent(registrationName, dependencies) {
  registrationNameDependencies[registrationName] = dependencies;
  for (
    registrationName = 0;
    registrationName < dependencies.length;
    registrationName++
  )
    allNativeEvents.add(dependencies[registrationName]);
}
var canUseDOM = !(
    "undefined" === typeof window ||
    "undefined" === typeof window.document ||
    "undefined" === typeof window.document.createElement
  ),
  VALID_ATTRIBUTE_NAME_REGEX = RegExp(
    "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
  ),
  illegalAttributeNameCache = {},
  validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))
    return !0;
  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
    return (validatedAttributeNameCache[attributeName] = !0);
  illegalAttributeNameCache[attributeName] = !0;
  return !1;
}
function setValueForAttribute(node, name, value) {
  if (isAttributeNameSafe(name))
    if (null === value) node.removeAttribute(name);
    else {
      switch (typeof value) {
        case "undefined":
        case "function":
        case "symbol":
          node.removeAttribute(name);
          return;
        case "boolean":
          var prefix$10 = name.toLowerCase().slice(0, 5);
          if ("data-" !== prefix$10 && "aria-" !== prefix$10) {
            node.removeAttribute(name);
            return;
          }
      }
      node.setAttribute(name, "" + value);
    }
}
function setValueForKnownAttribute(node, name, value) {
  if (null === value) node.removeAttribute(name);
  else {
    switch (typeof value) {
      case "undefined":
      case "function":
      case "symbol":
      case "boolean":
        node.removeAttribute(name);
        return;
    }
    node.setAttribute(name, "" + value);
  }
}
function setValueForNamespacedAttribute(node, namespace, name, value) {
  if (null === value) node.removeAttribute(name);
  else {
    switch (typeof value) {
      case "undefined":
      case "function":
      case "symbol":
      case "boolean":
        node.removeAttribute(name);
        return;
    }
    node.setAttributeNS(namespace, name, "" + value);
  }
}
function getToStringValue(value) {
  switch (typeof value) {
    case "bigint":
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return value;
    case "object":
      return value;
    default:
      return "";
  }
}
function isCheckable(elem) {
  var type = elem.type;
  return (
    (elem = elem.nodeName) &&
    "input" === elem.toLowerCase() &&
    ("checkbox" === type || "radio" === type)
  );
}
function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? "checked" : "value",
    descriptor = Object.getOwnPropertyDescriptor(
      node.constructor.prototype,
      valueField
    ),
    currentValue = "" + node[valueField];
  if (
    !node.hasOwnProperty(valueField) &&
    "undefined" !== typeof descriptor &&
    "function" === typeof descriptor.get &&
    "function" === typeof descriptor.set
  ) {
    var get = descriptor.get,
      set = descriptor.set;
    Object.defineProperty(node, valueField, {
      configurable: !0,
      get: function () {
        return get.call(this);
      },
      set: function (value) {
        currentValue = "" + value;
        set.call(this, value);
      }
    });
    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable
    });
    return {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = "" + value;
      },
      stopTracking: function () {
        node._valueTracker = null;
        delete node[valueField];
      }
    };
  }
}
function track(node) {
  node._valueTracker || (node._valueTracker = trackValueOnNode(node));
}
function updateValueIfChanged(node) {
  if (!node) return !1;
  var tracker = node._valueTracker;
  if (!tracker) return !0;
  var lastValue = tracker.getValue();
  var value = "";
  node &&
    (value = isCheckable(node)
      ? node.checked
        ? "true"
        : "false"
      : node.value);
  node = value;
  return node !== lastValue ? (tracker.setValue(node), !0) : !1;
}
function getActiveElement(doc) {
  doc = doc || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof doc) return null;
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}
var escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g;
function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
  return value.replace(
    escapeSelectorAttributeValueInsideDoubleQuotesRegex,
    function (ch) {
      return "\\" + ch.charCodeAt(0).toString(16) + " ";
    }
  );
}
function updateInput(
  element,
  value,
  defaultValue,
  lastDefaultValue,
  checked,
  defaultChecked,
  type,
  name
) {
  element.name = "";
  null != type &&
  "function" !== typeof type &&
  "symbol" !== typeof type &&
  "boolean" !== typeof type
    ? (element.type = type)
    : element.removeAttribute("type");
  if (null != value)
    if ("number" === type) {
      if ((0 === value && "" === element.value) || element.value != value)
        element.value = "" + getToStringValue(value);
    } else
      element.value !== "" + getToStringValue(value) &&
        (element.value = "" + getToStringValue(value));
  else
    ("submit" !== type && "reset" !== type) || element.removeAttribute("value");
  null != value
    ? setDefaultValue(element, type, getToStringValue(value))
    : null != defaultValue
      ? setDefaultValue(element, type, getToStringValue(defaultValue))
      : null != lastDefaultValue && element.removeAttribute("value");
  null == checked &&
    null != defaultChecked &&
    (element.defaultChecked = !!defaultChecked);
  null != checked &&
    (element.checked =
      checked && "function" !== typeof checked && "symbol" !== typeof checked);
  null != name &&
  "function" !== typeof name &&
  "symbol" !== typeof name &&
  "boolean" !== typeof name
    ? (element.name = "" + getToStringValue(name))
    : element.removeAttribute("name");
}
function initInput(
  element,
  value,
  defaultValue,
  checked,
  defaultChecked,
  type,
  name,
  isHydrating
) {
  null != type &&
    "function" !== typeof type &&
    "symbol" !== typeof type &&
    "boolean" !== typeof type &&
    (element.type = type);
  if (null != value || null != defaultValue) {
    if (
      !(
        ("submit" !== type && "reset" !== type) ||
        (void 0 !== value && null !== value)
      )
    )
      return;
    defaultValue =
      null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    value = null != value ? "" + getToStringValue(value) : defaultValue;
    isHydrating || value === element.value || (element.value = value);
    element.defaultValue = value;
  }
  checked = null != checked ? checked : defaultChecked;
  checked =
    "function" !== typeof checked && "symbol" !== typeof checked && !!checked;
  element.checked = isHydrating ? element.checked : !!checked;
  element.defaultChecked = !!checked;
  null != name &&
    "function" !== typeof name &&
    "symbol" !== typeof name &&
    "boolean" !== typeof name &&
    (element.name = name);
}
function setDefaultValue(node, type, value) {
  ("number" === type && getActiveElement(node.ownerDocument) === node) ||
    node.defaultValue === "" + value ||
    (node.defaultValue = "" + value);
}
function updateOptions(node, multiple, propValue, setDefaultSelected) {
  node = node.options;
  if (multiple) {
    multiple = {};
    for (var i = 0; i < propValue.length; i++)
      multiple["$" + propValue[i]] = !0;
    for (propValue = 0; propValue < node.length; propValue++)
      (i = multiple.hasOwnProperty("$" + node[propValue].value)),
        node[propValue].selected !== i && (node[propValue].selected = i),
        i && setDefaultSelected && (node[propValue].defaultSelected = !0);
  } else {
    propValue = "" + getToStringValue(propValue);
    multiple = null;
    for (i = 0; i < node.length; i++) {
      if (node[i].value === propValue) {
        node[i].selected = !0;
        setDefaultSelected && (node[i].defaultSelected = !0);
        return;
      }
      null !== multiple || node[i].disabled || (multiple = node[i]);
    }
    null !== multiple && (multiple.selected = !0);
  }
}
function updateTextarea(element, value, defaultValue) {
  if (
    null != value &&
    ((value = "" + getToStringValue(value)),
    value !== element.value && (element.value = value),
    null == defaultValue)
  ) {
    element.defaultValue !== value && (element.defaultValue = value);
    return;
  }
  element.defaultValue =
    null != defaultValue ? "" + getToStringValue(defaultValue) : "";
}
function initTextarea(element, value, defaultValue, children) {
  if (null == value) {
    if (null != children) {
      if (null != defaultValue) throw Error(formatProdErrorMessage(92));
      if (isArrayImpl(children)) {
        if (1 < children.length) throw Error(formatProdErrorMessage(93));
        children = children[0];
      }
      defaultValue = children;
    }
    null == defaultValue && (defaultValue = "");
    value = defaultValue;
  }
  defaultValue = getToStringValue(value);
  element.defaultValue = defaultValue;
  children = element.textContent;
  children === defaultValue &&
    "" !== children &&
    null !== children &&
    (element.value = children);
}
function setTextContent(node, text) {
  if (text) {
    var firstChild = node.firstChild;
    if (
      firstChild &&
      firstChild === node.lastChild &&
      3 === firstChild.nodeType
    ) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
}
var unitlessNumbers = new Set(
  "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
    " "
  )
);
function setValueForStyle(style, styleName, value) {
  var isCustomProperty = 0 === styleName.indexOf("--");
  null == value || "boolean" === typeof value || "" === value
    ? isCustomProperty
      ? style.setProperty(styleName, "")
      : "float" === styleName
        ? (style.cssFloat = "")
        : (style[styleName] = "")
    : isCustomProperty
      ? style.setProperty(styleName, value)
      : "number" !== typeof value ||
          0 === value ||
          unitlessNumbers.has(styleName)
        ? "float" === styleName
          ? (style.cssFloat = value)
          : (style[styleName] = ("" + value).trim())
        : (style[styleName] = value + "px");
}
function setValueForStyles(node, styles, prevStyles) {
  if (null != styles && "object" !== typeof styles)
    throw Error(formatProdErrorMessage(62));
  node = node.style;
  if (null != prevStyles) {
    for (var styleName in prevStyles)
      !prevStyles.hasOwnProperty(styleName) ||
        (null != styles && styles.hasOwnProperty(styleName)) ||
        (0 === styleName.indexOf("--")
          ? node.setProperty(styleName, "")
          : "float" === styleName
            ? (node.cssFloat = "")
            : (node[styleName] = ""));
    for (var styleName$16 in styles)
      (styleName = styles[styleName$16]),
        styles.hasOwnProperty(styleName$16) &&
          prevStyles[styleName$16] !== styleName &&
          setValueForStyle(node, styleName$16, styleName);
  } else
    for (var styleName$17 in styles)
      styles.hasOwnProperty(styleName$17) &&
        setValueForStyle(node, styleName$17, styles[styleName$17]);
}
function isCustomElement(tagName) {
  if (-1 === tagName.indexOf("-")) return !1;
  switch (tagName) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var aliases = new Map([
    ["acceptCharset", "accept-charset"],
    ["htmlFor", "for"],
    ["httpEquiv", "http-equiv"],
    ["crossOrigin", "crossorigin"],
    ["accentHeight", "accent-height"],
    ["alignmentBaseline", "alignment-baseline"],
    ["arabicForm", "arabic-form"],
    ["baselineShift", "baseline-shift"],
    ["capHeight", "cap-height"],
    ["clipPath", "clip-path"],
    ["clipRule", "clip-rule"],
    ["colorInterpolation", "color-interpolation"],
    ["colorInterpolationFilters", "color-interpolation-filters"],
    ["colorProfile", "color-profile"],
    ["colorRendering", "color-rendering"],
    ["dominantBaseline", "dominant-baseline"],
    ["enableBackground", "enable-background"],
    ["fillOpacity", "fill-opacity"],
    ["fillRule", "fill-rule"],
    ["floodColor", "flood-color"],
    ["floodOpacity", "flood-opacity"],
    ["fontFamily", "font-family"],
    ["fontSize", "font-size"],
    ["fontSizeAdjust", "font-size-adjust"],
    ["fontStretch", "font-stretch"],
    ["fontStyle", "font-style"],
    ["fontVariant", "font-variant"],
    ["fontWeight", "font-weight"],
    ["glyphName", "glyph-name"],
    ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
    ["glyphOrientationVertical", "glyph-orientation-vertical"],
    ["horizAdvX", "horiz-adv-x"],
    ["horizOriginX", "horiz-origin-x"],
    ["imageRendering", "image-rendering"],
    ["letterSpacing", "letter-spacing"],
    ["lightingColor", "lighting-color"],
    ["markerEnd", "marker-end"],
    ["markerMid", "marker-mid"],
    ["markerStart", "marker-start"],
    ["overlinePosition", "overline-position"],
    ["overlineThickness", "overline-thickness"],
    ["paintOrder", "paint-order"],
    ["panose-1", "panose-1"],
    ["pointerEvents", "pointer-events"],
    ["renderingIntent", "rendering-intent"],
    ["shapeRendering", "shape-rendering"],
    ["stopColor", "stop-color"],
    ["stopOpacity", "stop-opacity"],
    ["strikethroughPosition", "strikethrough-position"],
    ["strikethroughThickness", "strikethrough-thickness"],
    ["strokeDasharray", "stroke-dasharray"],
    ["strokeDashoffset", "stroke-dashoffset"],
    ["strokeLinecap", "stroke-linecap"],
    ["strokeLinejoin", "stroke-linejoin"],
    ["strokeMiterlimit", "stroke-miterlimit"],
    ["strokeOpacity", "stroke-opacity"],
    ["strokeWidth", "stroke-width"],
    ["textAnchor", "text-anchor"],
    ["textDecoration", "text-decoration"],
    ["textRendering", "text-rendering"],
    ["transformOrigin", "transform-origin"],
    ["underlinePosition", "underline-position"],
    ["underlineThickness", "underline-thickness"],
    ["unicodeBidi", "unicode-bidi"],
    ["unicodeRange", "unicode-range"],
    ["unitsPerEm", "units-per-em"],
    ["vAlphabetic", "v-alphabetic"],
    ["vHanging", "v-hanging"],
    ["vIdeographic", "v-ideographic"],
    ["vMathematical", "v-mathematical"],
    ["vectorEffect", "vector-effect"],
    ["vertAdvY", "vert-adv-y"],
    ["vertOriginX", "vert-origin-x"],
    ["vertOriginY", "vert-origin-y"],
    ["wordSpacing", "word-spacing"],
    ["writingMode", "writing-mode"],
    ["xmlnsXlink", "xmlns:xlink"],
    ["xHeight", "x-height"]
  ]),
  isJavaScriptProtocol =
    /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
function sanitizeURL(url) {
  return isJavaScriptProtocol.test("" + url)
    ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')"
    : url;
}
var currentReplayingEvent = null;
function getEventTarget(nativeEvent) {
  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
  nativeEvent.correspondingUseElement &&
    (nativeEvent = nativeEvent.correspondingUseElement);
  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
}
var restoreTarget = null,
  restoreQueue = null;
function restoreStateOfTarget(target) {
  var internalInstance = getInstanceFromNode(target);
  if (internalInstance && (target = internalInstance.stateNode)) {
    var props = target[internalPropsKey] || null;
    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {
      case "input":
        updateInput(
          target,
          props.value,
          props.defaultValue,
          props.defaultValue,
          props.checked,
          props.defaultChecked,
          props.type,
          props.name
        );
        internalInstance = props.name;
        if ("radio" === props.type && null != internalInstance) {
          for (props = target; props.parentNode; ) props = props.parentNode;
          props = props.querySelectorAll(
            'input[name="' +
              escapeSelectorAttributeValueInsideDoubleQuotes(
                "" + internalInstance
              ) +
              '"][type="radio"]'
          );
          for (
            internalInstance = 0;
            internalInstance < props.length;
            internalInstance++
          ) {
            var otherNode = props[internalInstance];
            if (otherNode !== target && otherNode.form === target.form) {
              var otherProps = otherNode[internalPropsKey] || null;
              if (!otherProps) throw Error(formatProdErrorMessage(90));
              updateInput(
                otherNode,
                otherProps.value,
                otherProps.defaultValue,
                otherProps.defaultValue,
                otherProps.checked,
                otherProps.defaultChecked,
                otherProps.type,
                otherProps.name
              );
            }
          }
          for (
            internalInstance = 0;
            internalInstance < props.length;
            internalInstance++
          )
            (otherNode = props[internalInstance]),
              otherNode.form === target.form && updateValueIfChanged(otherNode);
        }
        break a;
      case "textarea":
        updateTextarea(target, props.value, props.defaultValue);
        break a;
      case "select":
        (internalInstance = props.value),
          null != internalInstance &&
            updateOptions(target, !!props.multiple, internalInstance, !1);
    }
  }
}
var isInsideEventHandler = !1;
function batchedUpdates$1(fn, a, b) {
  if (isInsideEventHandler) return fn(a, b);
  isInsideEventHandler = !0;
  try {
    var JSCompiler_inline_result = fn(a);
    return JSCompiler_inline_result;
  } finally {
    if (
      ((isInsideEventHandler = !1),
      null !== restoreTarget || null !== restoreQueue)
    )
      if (
        (flushSyncWork$1(),
        restoreTarget &&
          ((a = restoreTarget),
          (fn = restoreQueue),
          (restoreQueue = restoreTarget = null),
          restoreStateOfTarget(a),
          fn))
      )
        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);
  }
}
function getListener(inst, registrationName) {
  var stateNode = inst.stateNode;
  if (null === stateNode) return null;
  var props = stateNode[internalPropsKey] || null;
  if (null === props) return null;
  stateNode = props[registrationName];
  a: switch (registrationName) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (props = !props.disabled) ||
        ((inst = inst.type),
        (props = !(
          "button" === inst ||
          "input" === inst ||
          "select" === inst ||
          "textarea" === inst
        )));
      inst = !props;
      break a;
    default:
      inst = !1;
  }
  if (inst) return null;
  if (stateNode && "function" !== typeof stateNode)
    throw Error(
      formatProdErrorMessage(231, registrationName, typeof stateNode)
    );
  return stateNode;
}
var passiveBrowserEventsSupported = !1;
if (canUseDOM)
  try {
    var options = {};
    Object.defineProperty(options, "passive", {
      get: function () {
        passiveBrowserEventsSupported = !0;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (e) {
    passiveBrowserEventsSupported = !1;
  }
var root = null,
  startText = null,
  fallbackText = null;
function getData() {
  if (fallbackText) return fallbackText;
  var start,
    startValue = startText,
    startLength = startValue.length,
    end,
    endValue = "value" in root ? root.value : root.textContent,
    endLength = endValue.length;
  for (
    start = 0;
    start < startLength && startValue[start] === endValue[start];
    start++
  );
  var minEnd = startLength - start;
  for (
    end = 1;
    end <= minEnd &&
    startValue[startLength - end] === endValue[endLength - end];
    end++
  );
  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));
}
function getEventCharCode(nativeEvent) {
  var keyCode = nativeEvent.keyCode;
  "charCode" in nativeEvent
    ? ((nativeEvent = nativeEvent.charCode),
      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))
    : (nativeEvent = keyCode);
  10 === nativeEvent && (nativeEvent = 13);
  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
}
function functionThatReturnsTrue() {
  return !0;
}
function functionThatReturnsFalse() {
  return !1;
}
function createSyntheticEvent(Interface) {
  function SyntheticBaseEvent(
    reactName,
    reactEventType,
    targetInst,
    nativeEvent,
    nativeEventTarget
  ) {
    this._reactName = reactName;
    this._targetInst = targetInst;
    this.type = reactEventType;
    this.nativeEvent = nativeEvent;
    this.target = nativeEventTarget;
    this.currentTarget = null;
    for (var propName in Interface)
      Interface.hasOwnProperty(propName) &&
        ((reactName = Interface[propName]),
        (this[propName] = reactName
          ? reactName(nativeEvent)
          : nativeEvent[propName]));
    this.isDefaultPrevented = (
      null != nativeEvent.defaultPrevented
        ? nativeEvent.defaultPrevented
        : !1 === nativeEvent.returnValue
    )
      ? functionThatReturnsTrue
      : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }
  assign(SyntheticBaseEvent.prototype, {
    preventDefault: function () {
      this.defaultPrevented = !0;
      var event = this.nativeEvent;
      event &&
        (event.preventDefault
          ? event.preventDefault()
          : "unknown" !== typeof event.returnValue && (event.returnValue = !1),
        (this.isDefaultPrevented = functionThatReturnsTrue));
    },
    stopPropagation: function () {
      var event = this.nativeEvent;
      event &&
        (event.stopPropagation
          ? event.stopPropagation()
          : "unknown" !== typeof event.cancelBubble &&
            (event.cancelBubble = !0),
        (this.isPropagationStopped = functionThatReturnsTrue));
    },
    persist: function () {},
    isPersistent: functionThatReturnsTrue
  });
  return SyntheticBaseEvent;
}
var EventInterface = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
  },
  SyntheticEvent = createSyntheticEvent(EventInterface),
  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),
  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),
  lastMovementX,
  lastMovementY,
  lastMouseEvent,
  MouseEventInterface = assign({}, UIEventInterface, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: getEventModifierState,
    button: 0,
    buttons: 0,
    relatedTarget: function (event) {
      return void 0 === event.relatedTarget
        ? event.fromElement === event.srcElement
          ? event.toElement
          : event.fromElement
        : event.relatedTarget;
    },
    movementX: function (event) {
      if ("movementX" in event) return event.movementX;
      event !== lastMouseEvent &&
        (lastMouseEvent && "mousemove" === event.type
          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),
            (lastMovementY = event.screenY - lastMouseEvent.screenY))
          : (lastMovementY = lastMovementX = 0),
        (lastMouseEvent = event));
      return lastMovementX;
    },
    movementY: function (event) {
      return "movementY" in event ? event.movementY : lastMovementY;
    }
  }),
  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),
  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),
  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),
  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),
  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),
  AnimationEventInterface = assign({}, EventInterface, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),
  ClipboardEventInterface = assign({}, EventInterface, {
    clipboardData: function (event) {
      return "clipboardData" in event
        ? event.clipboardData
        : window.clipboardData;
    }
  }),
  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),
  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),
  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),
  normalizeKey = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  },
  translateToKey = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  },
  modifierKeyToProp = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
  };
function modifierStateGetter(keyArg) {
  var nativeEvent = this.nativeEvent;
  return nativeEvent.getModifierState
    ? nativeEvent.getModifierState(keyArg)
    : (keyArg = modifierKeyToProp[keyArg])
      ? !!nativeEvent[keyArg]
      : !1;
}
function getEventModifierState() {
  return modifierStateGetter;
}
var KeyboardEventInterface = assign({}, UIEventInterface, {
    key: function (nativeEvent) {
      if (nativeEvent.key) {
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
        if ("Unidentified" !== key) return key;
      }
      return "keypress" === nativeEvent.type
        ? ((nativeEvent = getEventCharCode(nativeEvent)),
          13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent))
        : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type
          ? translateToKey[nativeEvent.keyCode] || "Unidentified"
          : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: getEventModifierState,
    charCode: function (event) {
      return "keypress" === event.type ? getEventCharCode(event) : 0;
    },
    keyCode: function (event) {
      return "keydown" === event.type || "keyup" === event.type
        ? event.keyCode
        : 0;
    },
    which: function (event) {
      return "keypress" === event.type
        ? getEventCharCode(event)
        : "keydown" === event.type || "keyup" === event.type
          ? event.keyCode
          : 0;
    }
  }),
  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),
  PointerEventInterface = assign({}, MouseEventInterface, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
  }),
  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),
  TouchEventInterface = assign({}, UIEventInterface, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: getEventModifierState
  }),
  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),
  TransitionEventInterface = assign({}, EventInterface, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),
  WheelEventInterface = assign({}, MouseEventInterface, {
    deltaX: function (event) {
      return "deltaX" in event
        ? event.deltaX
        : "wheelDeltaX" in event
          ? -event.wheelDeltaX
          : 0;
    },
    deltaY: function (event) {
      return "deltaY" in event
        ? event.deltaY
        : "wheelDeltaY" in event
          ? -event.wheelDeltaY
          : "wheelDelta" in event
            ? -event.wheelDelta
            : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }),
  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),
  ToggleEventInterface = assign({}, EventInterface, {
    newState: 0,
    oldState: 0
  }),
  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),
  END_KEYCODES = [9, 13, 27, 32],
  canUseCompositionEvent = canUseDOM && "CompositionEvent" in window,
  documentMode = null;
canUseDOM &&
  "documentMode" in document &&
  (documentMode = document.documentMode);
var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode,
  useFallbackCompositionData =
    canUseDOM &&
    (!canUseCompositionEvent ||
      (documentMode && 8 < documentMode && 11 >= documentMode)),
  SPACEBAR_CHAR = String.fromCharCode(32),
  hasSpaceKeypress = !1;
function isFallbackCompositionEnd(domEventName, nativeEvent) {
  switch (domEventName) {
    case "keyup":
      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
    case "keydown":
      return 229 !== nativeEvent.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function getDataFromCustomEvent(nativeEvent) {
  nativeEvent = nativeEvent.detail;
  return "object" === typeof nativeEvent && "data" in nativeEvent
    ? nativeEvent.data
    : null;
}
var isComposing = !1;
function getNativeBeforeInputChars(domEventName, nativeEvent) {
  switch (domEventName) {
    case "compositionend":
      return getDataFromCustomEvent(nativeEvent);
    case "keypress":
      if (32 !== nativeEvent.which) return null;
      hasSpaceKeypress = !0;
      return SPACEBAR_CHAR;
    case "textInput":
      return (
        (domEventName = nativeEvent.data),
        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName
      );
    default:
      return null;
  }
}
function getFallbackBeforeInputChars(domEventName, nativeEvent) {
  if (isComposing)
    return "compositionend" === domEventName ||
      (!canUseCompositionEvent &&
        isFallbackCompositionEnd(domEventName, nativeEvent))
      ? ((domEventName = getData()),
        (fallbackText = startText = root = null),
        (isComposing = !1),
        domEventName)
      : null;
  switch (domEventName) {
    case "paste":
      return null;
    case "keypress":
      if (
        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||
        (nativeEvent.ctrlKey && nativeEvent.altKey)
      ) {
        if (nativeEvent.char && 1 < nativeEvent.char.length)
          return nativeEvent.char;
        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case "compositionend":
      return useFallbackCompositionData && "ko" !== nativeEvent.locale
        ? null
        : nativeEvent.data;
    default:
      return null;
  }
}
var supportedInputTypes = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};
function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return "input" === nodeName
    ? !!supportedInputTypes[elem.type]
    : "textarea" === nodeName
      ? !0
      : !1;
}
function createAndAccumulateChangeEvent(
  dispatchQueue,
  inst,
  nativeEvent,
  target
) {
  restoreTarget
    ? restoreQueue
      ? restoreQueue.push(target)
      : (restoreQueue = [target])
    : (restoreTarget = target);
  inst = accumulateTwoPhaseListeners(inst, "onChange");
  0 < inst.length &&
    ((nativeEvent = new SyntheticEvent(
      "onChange",
      "change",
      null,
      nativeEvent,
      target
    )),
    dispatchQueue.push({ event: nativeEvent, listeners: inst }));
}
var activeElement$1 = null,
  activeElementInst$1 = null;
function runEventInBatch(dispatchQueue) {
  processDispatchQueue(dispatchQueue, 0);
}
function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance(targetInst);
  if (updateValueIfChanged(targetNode)) return targetInst;
}
function getTargetInstForChangeEvent(domEventName, targetInst) {
  if ("change" === domEventName) return targetInst;
}
var isInputEventSupported = !1;
if (canUseDOM) {
  var JSCompiler_inline_result$jscomp$283;
  if (canUseDOM) {
    var isSupported$jscomp$inline_418 = "oninput" in document;
    if (!isSupported$jscomp$inline_418) {
      var element$jscomp$inline_419 = document.createElement("div");
      element$jscomp$inline_419.setAttribute("oninput", "return;");
      isSupported$jscomp$inline_418 =
        "function" === typeof element$jscomp$inline_419.oninput;
    }
    JSCompiler_inline_result$jscomp$283 = isSupported$jscomp$inline_418;
  } else JSCompiler_inline_result$jscomp$283 = !1;
  isInputEventSupported =
    JSCompiler_inline_result$jscomp$283 &&
    (!document.documentMode || 9 < document.documentMode);
}
function stopWatchingForValueChange() {
  activeElement$1 &&
    (activeElement$1.detachEvent("onpropertychange", handlePropertyChange),
    (activeElementInst$1 = activeElement$1 = null));
}
function handlePropertyChange(nativeEvent) {
  if (
    "value" === nativeEvent.propertyName &&
    getInstIfValueChanged(activeElementInst$1)
  ) {
    var dispatchQueue = [];
    createAndAccumulateChangeEvent(
      dispatchQueue,
      activeElementInst$1,
      nativeEvent,
      getEventTarget(nativeEvent)
    );
    batchedUpdates$1(runEventInBatch, dispatchQueue);
  }
}
function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
  "focusin" === domEventName
    ? (stopWatchingForValueChange(),
      (activeElement$1 = target),
      (activeElementInst$1 = targetInst),
      activeElement$1.attachEvent("onpropertychange", handlePropertyChange))
    : "focusout" === domEventName && stopWatchingForValueChange();
}
function getTargetInstForInputEventPolyfill(domEventName) {
  if (
    "selectionchange" === domEventName ||
    "keyup" === domEventName ||
    "keydown" === domEventName
  )
    return getInstIfValueChanged(activeElementInst$1);
}
function getTargetInstForClickEvent(domEventName, targetInst) {
  if ("click" === domEventName) return getInstIfValueChanged(targetInst);
}
function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
  if ("input" === domEventName || "change" === domEventName)
    return getInstIfValueChanged(targetInst);
}
function is(x, y) {
  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);
}
var objectIs = "function" === typeof Object.is ? Object.is : is;
function shallowEqual(objA, objB) {
  if (objectIs(objA, objB)) return !0;
  if (
    "object" !== typeof objA ||
    null === objA ||
    "object" !== typeof objB ||
    null === objB
  )
    return !1;
  var keysA = Object.keys(objA),
    keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return !1;
  for (keysB = 0; keysB < keysA.length; keysB++) {
    var currentKey = keysA[keysB];
    if (
      !hasOwnProperty.call(objB, currentKey) ||
      !objectIs(objA[currentKey], objB[currentKey])
    )
      return !1;
  }
  return !0;
}
function getLeafNode(node) {
  for (; node && node.firstChild; ) node = node.firstChild;
  return node;
}
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  root = 0;
  for (var nodeEnd; node; ) {
    if (3 === node.nodeType) {
      nodeEnd = root + node.textContent.length;
      if (root <= offset && nodeEnd >= offset)
        return { node: node, offset: offset - root };
      root = nodeEnd;
    }
    a: {
      for (; node; ) {
        if (node.nextSibling) {
          node = node.nextSibling;
          break a;
        }
        node = node.parentNode;
      }
      node = void 0;
    }
    node = getLeafNode(node);
  }
}
function containsNode(outerNode, innerNode) {
  return outerNode && innerNode
    ? outerNode === innerNode
      ? !0
      : outerNode && 3 === outerNode.nodeType
        ? !1
        : innerNode && 3 === innerNode.nodeType
          ? containsNode(outerNode, innerNode.parentNode)
          : "contains" in outerNode
            ? outerNode.contains(innerNode)
            : outerNode.compareDocumentPosition
              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)
              : !1
    : !1;
}
function getActiveElementDeep(containerInfo) {
  containerInfo =
    null != containerInfo &&
    null != containerInfo.ownerDocument &&
    null != containerInfo.ownerDocument.defaultView
      ? containerInfo.ownerDocument.defaultView
      : window;
  for (
    var element = getActiveElement(containerInfo.document);
    element instanceof containerInfo.HTMLIFrameElement;

  ) {
    try {
      var JSCompiler_inline_result =
        "string" === typeof element.contentWindow.location.href;
    } catch (err) {
      JSCompiler_inline_result = !1;
    }
    if (JSCompiler_inline_result) containerInfo = element.contentWindow;
    else break;
    element = getActiveElement(containerInfo.document);
  }
  return element;
}
function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return (
    nodeName &&
    (("input" === nodeName &&
      ("text" === elem.type ||
        "search" === elem.type ||
        "tel" === elem.type ||
        "url" === elem.type ||
        "password" === elem.type)) ||
      "textarea" === nodeName ||
      "true" === elem.contentEditable)
  );
}
function restoreSelection(priorSelectionInformation, containerInfo) {
  var curFocusedElem = getActiveElementDeep(containerInfo);
  containerInfo = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (
    curFocusedElem !== containerInfo &&
    containerInfo &&
    containerInfo.ownerDocument &&
    containsNode(containerInfo.ownerDocument.documentElement, containerInfo)
  ) {
    if (null !== priorSelectionRange && hasSelectionCapabilities(containerInfo))
      if (
        ((priorSelectionInformation = priorSelectionRange.start),
        (curFocusedElem = priorSelectionRange.end),
        void 0 === curFocusedElem &&
          (curFocusedElem = priorSelectionInformation),
        "selectionStart" in containerInfo)
      )
        (containerInfo.selectionStart = priorSelectionInformation),
          (containerInfo.selectionEnd = Math.min(
            curFocusedElem,
            containerInfo.value.length
          ));
      else if (
        ((curFocusedElem =
          ((priorSelectionInformation =
            containerInfo.ownerDocument || document) &&
            priorSelectionInformation.defaultView) ||
          window),
        curFocusedElem.getSelection)
      ) {
        curFocusedElem = curFocusedElem.getSelection();
        var length = containerInfo.textContent.length,
          start = Math.min(priorSelectionRange.start, length);
        priorSelectionRange =
          void 0 === priorSelectionRange.end
            ? start
            : Math.min(priorSelectionRange.end, length);
        !curFocusedElem.extend &&
          start > priorSelectionRange &&
          ((length = priorSelectionRange),
          (priorSelectionRange = start),
          (start = length));
        length = getNodeForCharacterOffset(containerInfo, start);
        var endMarker = getNodeForCharacterOffset(
          containerInfo,
          priorSelectionRange
        );
        length &&
          endMarker &&
          (1 !== curFocusedElem.rangeCount ||
            curFocusedElem.anchorNode !== length.node ||
            curFocusedElem.anchorOffset !== length.offset ||
            curFocusedElem.focusNode !== endMarker.node ||
            curFocusedElem.focusOffset !== endMarker.offset) &&
          ((priorSelectionInformation =
            priorSelectionInformation.createRange()),
          priorSelectionInformation.setStart(length.node, length.offset),
          curFocusedElem.removeAllRanges(),
          start > priorSelectionRange
            ? (curFocusedElem.addRange(priorSelectionInformation),
              curFocusedElem.extend(endMarker.node, endMarker.offset))
            : (priorSelectionInformation.setEnd(
                endMarker.node,
                endMarker.offset
              ),
              curFocusedElem.addRange(priorSelectionInformation)));
      }
    priorSelectionInformation = [];
    for (
      curFocusedElem = containerInfo;
      (curFocusedElem = curFocusedElem.parentNode);

    )
      1 === curFocusedElem.nodeType &&
        priorSelectionInformation.push({
          element: curFocusedElem,
          left: curFocusedElem.scrollLeft,
          top: curFocusedElem.scrollTop
        });
    "function" === typeof containerInfo.focus && containerInfo.focus();
    for (
      containerInfo = 0;
      containerInfo < priorSelectionInformation.length;
      containerInfo++
    )
      (curFocusedElem = priorSelectionInformation[containerInfo]),
        (curFocusedElem.element.scrollLeft = curFocusedElem.left),
        (curFocusedElem.element.scrollTop = curFocusedElem.top);
  }
}
var skipSelectionChangeEvent =
    canUseDOM && "documentMode" in document && 11 >= document.documentMode,
  activeElement = null,
  activeElementInst = null,
  lastSelection = null,
  mouseDown = !1;
function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
  var doc =
    nativeEventTarget.window === nativeEventTarget
      ? nativeEventTarget.document
      : 9 === nativeEventTarget.nodeType
        ? nativeEventTarget
        : nativeEventTarget.ownerDocument;
  mouseDown ||
    null == activeElement ||
    activeElement !== getActiveElement(doc) ||
    ((doc = activeElement),
    "selectionStart" in doc && hasSelectionCapabilities(doc)
      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })
      : ((doc = (
          (doc.ownerDocument && doc.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (doc = {
          anchorNode: doc.anchorNode,
          anchorOffset: doc.anchorOffset,
          focusNode: doc.focusNode,
          focusOffset: doc.focusOffset
        })),
    (lastSelection && shallowEqual(lastSelection, doc)) ||
      ((lastSelection = doc),
      (doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect")),
      0 < doc.length &&
        ((nativeEvent = new SyntheticEvent(
          "onSelect",
          "select",
          null,
          nativeEvent,
          nativeEventTarget
        )),
        dispatchQueue.push({ event: nativeEvent, listeners: doc }),
        (nativeEvent.target = activeElement))));
}
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes["Webkit" + styleProp] = "webkit" + eventName;
  prefixes["Moz" + styleProp] = "moz" + eventName;
  return prefixes;
}
var vendorPrefixes = {
    animationend: makePrefixMap("Animation", "AnimationEnd"),
    animationiteration: makePrefixMap("Animation", "AnimationIteration"),
    animationstart: makePrefixMap("Animation", "AnimationStart"),
    transitionrun: makePrefixMap("Transition", "TransitionRun"),
    transitionstart: makePrefixMap("Transition", "TransitionStart"),
    transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
    transitionend: makePrefixMap("Transition", "TransitionEnd")
  },
  prefixedEventNames = {},
  style = {};
canUseDOM &&
  ((style = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete vendorPrefixes.animationend.animation,
    delete vendorPrefixes.animationiteration.animation,
    delete vendorPrefixes.animationstart.animation),
  "TransitionEvent" in window ||
    delete vendorPrefixes.transitionend.transition);
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
  if (!vendorPrefixes[eventName]) return eventName;
  var prefixMap = vendorPrefixes[eventName],
    styleProp;
  for (styleProp in prefixMap)
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)
      return (prefixedEventNames[eventName] = prefixMap[styleProp]);
  return eventName;
}
var ANIMATION_END = getVendorPrefixedEventName("animationend"),
  ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"),
  ANIMATION_START = getVendorPrefixedEventName("animationstart"),
  TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"),
  TRANSITION_START = getVendorPrefixedEventName("transitionstart"),
  TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"),
  TRANSITION_END = getVendorPrefixedEventName("transitionend"),
  topLevelEventsToReactNames = new Map(),
  simpleEventPluginEvents =
    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
      " "
    );
function registerSimpleEvent(domEventName, reactName) {
  topLevelEventsToReactNames.set(domEventName, reactName);
  registerTwoPhaseEvent(reactName, [domEventName]);
}
var concurrentQueues = [],
  concurrentQueuesIndex = 0,
  concurrentlyUpdatedLanes = 0;
function finishQueueingConcurrentUpdates() {
  for (
    var endIndex = concurrentQueuesIndex,
      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
    i < endIndex;

  ) {
    var fiber = concurrentQueues[i];
    concurrentQueues[i++] = null;
    var queue = concurrentQueues[i];
    concurrentQueues[i++] = null;
    var update = concurrentQueues[i];
    concurrentQueues[i++] = null;
    var lane = concurrentQueues[i];
    concurrentQueues[i++] = null;
    if (null !== queue && null !== update) {
      var pending = queue.pending;
      null === pending
        ? (update.next = update)
        : ((update.next = pending.next), (pending.next = update));
      queue.pending = update;
    }
    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
  }
}
function enqueueUpdate$1(fiber, queue, update, lane) {
  concurrentQueues[concurrentQueuesIndex++] = fiber;
  concurrentQueues[concurrentQueuesIndex++] = queue;
  concurrentQueues[concurrentQueuesIndex++] = update;
  concurrentQueues[concurrentQueuesIndex++] = lane;
  concurrentlyUpdatedLanes |= lane;
  fiber.lanes |= lane;
  fiber = fiber.alternate;
  null !== fiber && (fiber.lanes |= lane);
}
function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
  enqueueUpdate$1(fiber, queue, update, lane);
  return getRootForUpdatedFiber(fiber);
}
function enqueueConcurrentRenderForLane(fiber, lane) {
  enqueueUpdate$1(fiber, null, null, lane);
  return getRootForUpdatedFiber(fiber);
}
function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
  sourceFiber.lanes |= lane;
  var alternate = sourceFiber.alternate;
  null !== alternate && (alternate.lanes |= lane);
  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )
    (parent.childLanes |= lane),
      (alternate = parent.alternate),
      null !== alternate && (alternate.childLanes |= lane),
      22 === parent.tag &&
        ((sourceFiber = parent.stateNode),
        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
      (sourceFiber = parent),
      (parent = parent.return);
  isHidden &&
    null !== update &&
    3 === sourceFiber.tag &&
    ((parent = sourceFiber.stateNode),
    (isHidden = 31 - clz32(lane)),
    (parent = parent.hiddenUpdates),
    (sourceFiber = parent[isHidden]),
    null === sourceFiber
      ? (parent[isHidden] = [update])
      : sourceFiber.push(update),
    (update.lane = lane | 536870912));
}
function getRootForUpdatedFiber(sourceFiber) {
  if (50 < nestedUpdateCount)
    throw (
      ((nestedUpdateCount = 0),
      (rootWithNestedUpdates = null),
      Error(formatProdErrorMessage(185)))
    );
  for (var parent = sourceFiber.return; null !== parent; )
    (sourceFiber = parent), (parent = sourceFiber.return);
  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;
}
var emptyContextObject = {},
  CapturedStacks = new WeakMap();
function createCapturedValueAtFiber(value, source) {
  if ("object" === typeof value && null !== value) {
    var existing = CapturedStacks.get(value);
    if (void 0 !== existing) return existing;
    source = {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
    CapturedStacks.set(value, source);
    return source;
  }
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}
var forkStack = [],
  forkStackIndex = 0,
  treeForkProvider = null,
  treeForkCount = 0,
  idStack = [],
  idStackIndex = 0,
  treeContextProvider = null,
  treeContextId = 1,
  treeContextOverflow = "";
function pushTreeFork(workInProgress, totalChildren) {
  forkStack[forkStackIndex++] = treeForkCount;
  forkStack[forkStackIndex++] = treeForkProvider;
  treeForkProvider = workInProgress;
  treeForkCount = totalChildren;
}
function pushTreeId(workInProgress, totalChildren, index) {
  idStack[idStackIndex++] = treeContextId;
  idStack[idStackIndex++] = treeContextOverflow;
  idStack[idStackIndex++] = treeContextProvider;
  treeContextProvider = workInProgress;
  var baseIdWithLeadingBit = treeContextId;
  workInProgress = treeContextOverflow;
  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
  baseIdWithLeadingBit &= ~(1 << baseLength);
  index += 1;
  var length = 32 - clz32(totalChildren) + baseLength;
  if (30 < length) {
    var numberOfOverflowBits = baseLength - (baseLength % 5);
    length = (
      baseIdWithLeadingBit &
      ((1 << numberOfOverflowBits) - 1)
    ).toString(32);
    baseIdWithLeadingBit >>= numberOfOverflowBits;
    baseLength -= numberOfOverflowBits;
    treeContextId =
      (1 << (32 - clz32(totalChildren) + baseLength)) |
      (index << baseLength) |
      baseIdWithLeadingBit;
    treeContextOverflow = length + workInProgress;
  } else
    (treeContextId =
      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),
      (treeContextOverflow = workInProgress);
}
function pushMaterializedTreeId(workInProgress) {
  null !== workInProgress.return &&
    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
}
function popTreeContext(workInProgress) {
  for (; workInProgress === treeForkProvider; )
    (treeForkProvider = forkStack[--forkStackIndex]),
      (forkStack[forkStackIndex] = null),
      (treeForkCount = forkStack[--forkStackIndex]),
      (forkStack[forkStackIndex] = null);
  for (; workInProgress === treeContextProvider; )
    (treeContextProvider = idStack[--idStackIndex]),
      (idStack[idStackIndex] = null),
      (treeContextOverflow = idStack[--idStackIndex]),
      (idStack[idStackIndex] = null),
      (treeContextId = idStack[--idStackIndex]),
      (idStack[idStackIndex] = null);
}
var hydrationParentFiber = null,
  nextHydratableInstance = null,
  isHydrating = !1,
  hydrationErrors = null,
  rootOrSingletonContext = !1,
  HydrationMismatchException = Error(formatProdErrorMessage(519));
function throwOnHydrationMismatch(fiber) {
  var error = Error(formatProdErrorMessage(418, ""));
  queueHydrationError(createCapturedValueAtFiber(error, fiber));
  throw HydrationMismatchException;
}
function prepareToHydrateHostInstance(fiber) {
  var instance = fiber.stateNode,
    type = fiber.type,
    props = fiber.memoizedProps;
  instance[internalInstanceKey] = fiber;
  instance[internalPropsKey] = props;
  switch (type) {
    case "dialog":
      listenToNonDelegatedEvent("cancel", instance);
      listenToNonDelegatedEvent("close", instance);
      break;
    case "iframe":
    case "object":
    case "embed":
      listenToNonDelegatedEvent("load", instance);
      break;
    case "video":
    case "audio":
      for (type = 0; type < mediaEventTypes.length; type++)
        listenToNonDelegatedEvent(mediaEventTypes[type], instance);
      break;
    case "source":
      listenToNonDelegatedEvent("error", instance);
      break;
    case "img":
    case "image":
    case "link":
      listenToNonDelegatedEvent("error", instance);
      listenToNonDelegatedEvent("load", instance);
      break;
    case "details":
      listenToNonDelegatedEvent("toggle", instance);
      break;
    case "input":
      listenToNonDelegatedEvent("invalid", instance);
      initInput(
        instance,
        props.value,
        props.defaultValue,
        props.checked,
        props.defaultChecked,
        props.type,
        props.name,
        !0
      );
      track(instance);
      break;
    case "select":
      listenToNonDelegatedEvent("invalid", instance);
      break;
    case "textarea":
      listenToNonDelegatedEvent("invalid", instance),
        initTextarea(instance, props.value, props.defaultValue, props.children),
        track(instance);
  }
  type = props.children;
  ("string" !== typeof type &&
    "number" !== typeof type &&
    "bigint" !== typeof type) ||
  instance.textContent === "" + type ||
  !0 === props.suppressHydrationWarning ||
  checkForUnmatchedText(instance.textContent, type)
    ? (null != props.popover &&
        (listenToNonDelegatedEvent("beforetoggle", instance),
        listenToNonDelegatedEvent("toggle", instance)),
      null != props.onScroll && listenToNonDelegatedEvent("scroll", instance),
      null != props.onScrollEnd &&
        listenToNonDelegatedEvent("scrollend", instance),
      null != props.onClick && (instance.onclick = noop$1),
      (instance = !0))
    : (instance = !1);
  instance || throwOnHydrationMismatch(fiber);
}
function popToNextHostParent(fiber) {
  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
    switch (hydrationParentFiber.tag) {
      case 3:
      case 27:
        rootOrSingletonContext = !0;
        return;
      case 5:
      case 13:
        rootOrSingletonContext = !1;
        return;
      default:
        hydrationParentFiber = hydrationParentFiber.return;
    }
}
function popHydrationState(fiber) {
  if (fiber !== hydrationParentFiber) return !1;
  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;
  var shouldClear = !1,
    JSCompiler_temp;
  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
    if ((JSCompiler_temp = 5 === fiber.tag))
      (JSCompiler_temp = fiber.type),
        (JSCompiler_temp =
          !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
          shouldSetTextContent(fiber.type, fiber.memoizedProps));
    JSCompiler_temp = !JSCompiler_temp;
  }
  JSCompiler_temp && (shouldClear = !0);
  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);
  popToNextHostParent(fiber);
  if (13 === fiber.tag) {
    fiber = fiber.memoizedState;
    fiber = null !== fiber ? fiber.dehydrated : null;
    if (!fiber) throw Error(formatProdErrorMessage(317));
    a: {
      fiber = fiber.nextSibling;
      for (shouldClear = 0; fiber; ) {
        if (8 === fiber.nodeType)
          if (((JSCompiler_temp = fiber.data), "/$" === JSCompiler_temp)) {
            if (0 === shouldClear) {
              nextHydratableInstance = getNextHydratable(fiber.nextSibling);
              break a;
            }
            shouldClear--;
          } else
            ("$" !== JSCompiler_temp &&
              "$!" !== JSCompiler_temp &&
              "$?" !== JSCompiler_temp) ||
              shouldClear++;
        fiber = fiber.nextSibling;
      }
      nextHydratableInstance = null;
    }
  } else
    nextHydratableInstance = hydrationParentFiber
      ? getNextHydratable(fiber.stateNode.nextSibling)
      : null;
  return !0;
}
function resetHydrationState() {
  nextHydratableInstance = hydrationParentFiber = null;
  isHydrating = !1;
}
function queueHydrationError(error) {
  null === hydrationErrors
    ? (hydrationErrors = [error])
    : hydrationErrors.push(error);
}
var SuspenseException = Error(formatProdErrorMessage(460)),
  SuspenseyCommitException = Error(formatProdErrorMessage(474)),
  noopSuspenseyCommitThenable = { then: function () {} };
function isThenableResolved(thenable) {
  thenable = thenable.status;
  return "fulfilled" === thenable || "rejected" === thenable;
}
function noop$3() {}
function trackUsedThenable(thenableState, thenable, index) {
  index = thenableState[index];
  void 0 === index
    ? thenableState.push(thenable)
    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));
  switch (thenable.status) {
    case "fulfilled":
      return thenable.value;
    case "rejected":
      thenableState = thenable.reason;
      if (thenableState === SuspenseException)
        throw Error(formatProdErrorMessage(483));
      throw thenableState;
    default:
      if ("string" === typeof thenable.status) thenable.then(noop$3, noop$3);
      else {
        thenableState = workInProgressRoot;
        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)
          throw Error(formatProdErrorMessage(482));
        thenableState = thenable;
        thenableState.status = "pending";
        thenableState.then(
          function (fulfilledValue) {
            if ("pending" === thenable.status) {
              var fulfilledThenable = thenable;
              fulfilledThenable.status = "fulfilled";
              fulfilledThenable.value = fulfilledValue;
            }
          },
          function (error) {
            if ("pending" === thenable.status) {
              var rejectedThenable = thenable;
              rejectedThenable.status = "rejected";
              rejectedThenable.reason = error;
            }
          }
        );
      }
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          thenableState = thenable.reason;
          if (thenableState === SuspenseException)
            throw Error(formatProdErrorMessage(483));
          throw thenableState;
      }
      suspendedThenable = thenable;
      throw SuspenseException;
  }
}
var suspendedThenable = null;
function getSuspendedThenable() {
  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));
  var thenable = suspendedThenable;
  suspendedThenable = null;
  return thenable;
}
var thenableState$1 = null,
  thenableIndexCounter$1 = 0;
function unwrapThenable(thenable) {
  var index = thenableIndexCounter$1;
  thenableIndexCounter$1 += 1;
  null === thenableState$1 && (thenableState$1 = []);
  return trackUsedThenable(thenableState$1, thenable, index);
}
function coerceRef(workInProgress, element) {
  element = element.props.ref;
  workInProgress.ref = void 0 !== element ? element : null;
}
function throwOnInvalidObjectType(returnFiber, newChild) {
  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)
    throw Error(formatProdErrorMessage(525));
  returnFiber = Object.prototype.toString.call(newChild);
  throw Error(
    formatProdErrorMessage(
      31,
      "[object Object]" === returnFiber
        ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
        : returnFiber
    )
  );
}
function resolveLazy(lazyType) {
  var init = lazyType._init;
  return init(lazyType._payload);
}
function createChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (shouldTrackSideEffects) {
      var deletions = returnFiber.deletions;
      null === deletions
        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))
        : deletions.push(childToDelete);
    }
  }
  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) return null;
    for (; null !== currentFirstChild; )
      deleteChild(returnFiber, currentFirstChild),
        (currentFirstChild = currentFirstChild.sibling);
    return null;
  }
  function mapRemainingChildren(currentFirstChild) {
    for (var existingChildren = new Map(); null !== currentFirstChild; )
      null !== currentFirstChild.key
        ? existingChildren.set(currentFirstChild.key, currentFirstChild)
        : existingChildren.set(currentFirstChild.index, currentFirstChild),
        (currentFirstChild = currentFirstChild.sibling);
    return existingChildren;
  }
  function useFiber(fiber, pendingProps) {
    fiber = createWorkInProgress(fiber, pendingProps);
    fiber.index = 0;
    fiber.sibling = null;
    return fiber;
  }
  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects)
      return (newFiber.flags |= 1048576), lastPlacedIndex;
    newIndex = newFiber.alternate;
    if (null !== newIndex)
      return (
        (newIndex = newIndex.index),
        newIndex < lastPlacedIndex
          ? ((newFiber.flags |= 33554434), lastPlacedIndex)
          : newIndex
      );
    newFiber.flags |= 33554434;
    return lastPlacedIndex;
  }
  function placeSingleChild(newFiber) {
    shouldTrackSideEffects &&
      null === newFiber.alternate &&
      (newFiber.flags |= 33554434);
    return newFiber;
  }
  function updateTextNode(returnFiber, current, textContent, lanes) {
    if (null === current || 6 !== current.tag)
      return (
        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),
        (current.return = returnFiber),
        current
      );
    current = useFiber(current, textContent);
    current.return = returnFiber;
    return current;
  }
  function updateElement(returnFiber, current, element, lanes) {
    var elementType = element.type;
    if (elementType === REACT_FRAGMENT_TYPE)
      return updateFragment(
        returnFiber,
        current,
        element.props.children,
        lanes,
        element.key
      );
    if (
      null !== current &&
      (current.elementType === elementType ||
        ("object" === typeof elementType &&
          null !== elementType &&
          elementType.$$typeof === REACT_LAZY_TYPE &&
          resolveLazy(elementType) === current.type))
    )
      return (
        (current = useFiber(current, element.props)),
        coerceRef(current, element),
        (current.return = returnFiber),
        current
      );
    current = createFiberFromTypeAndProps(
      element.type,
      element.key,
      element.props,
      null,
      returnFiber.mode,
      lanes
    );
    coerceRef(current, element);
    current.return = returnFiber;
    return current;
  }
  function updatePortal(returnFiber, current, portal, lanes) {
    if (
      null === current ||
      4 !== current.tag ||
      current.stateNode.containerInfo !== portal.containerInfo ||
      current.stateNode.implementation !== portal.implementation
    )
      return (
        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),
        (current.return = returnFiber),
        current
      );
    current = useFiber(current, portal.children || []);
    current.return = returnFiber;
    return current;
  }
  function updateFragment(returnFiber, current, fragment, lanes, key) {
    if (null === current || 7 !== current.tag)
      return (
        (current = createFiberFromFragment(
          fragment,
          returnFiber.mode,
          lanes,
          key
        )),
        (current.return = returnFiber),
        current
      );
    current = useFiber(current, fragment);
    current.return = returnFiber;
    return current;
  }
  function createChild(returnFiber, newChild, lanes) {
    if (
      ("string" === typeof newChild && "" !== newChild) ||
      "number" === typeof newChild ||
      "bigint" === typeof newChild
    )
      return (
        (newChild = createFiberFromText(
          "" + newChild,
          returnFiber.mode,
          lanes
        )),
        (newChild.return = returnFiber),
        newChild
      );
    if ("object" === typeof newChild && null !== newChild) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return (
            (lanes = createFiberFromTypeAndProps(
              newChild.type,
              newChild.key,
              newChild.props,
              null,
              returnFiber.mode,
              lanes
            )),
            coerceRef(lanes, newChild),
            (lanes.return = returnFiber),
            lanes
          );
        case REACT_PORTAL_TYPE:
          return (
            (newChild = createFiberFromPortal(
              newChild,
              returnFiber.mode,
              lanes
            )),
            (newChild.return = returnFiber),
            newChild
          );
        case REACT_LAZY_TYPE:
          var init = newChild._init;
          newChild = init(newChild._payload);
          return createChild(returnFiber, newChild, lanes);
      }
      if (isArrayImpl(newChild) || getIteratorFn(newChild))
        return (
          (newChild = createFiberFromFragment(
            newChild,
            returnFiber.mode,
            lanes,
            null
          )),
          (newChild.return = returnFiber),
          newChild
        );
      if ("function" === typeof newChild.then)
        return createChild(returnFiber, unwrapThenable(newChild), lanes);
      if (newChild.$$typeof === REACT_CONTEXT_TYPE)
        return createChild(
          returnFiber,
          readContextDuringReconciliation(returnFiber, newChild),
          lanes
        );
      throwOnInvalidObjectType(returnFiber, newChild);
    }
    return null;
  }
  function updateSlot(returnFiber, oldFiber, newChild, lanes) {
    var key = null !== oldFiber ? oldFiber.key : null;
    if (
      ("string" === typeof newChild && "" !== newChild) ||
      "number" === typeof newChild ||
      "bigint" === typeof newChild
    )
      return null !== key
        ? null
        : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
    if ("object" === typeof newChild && null !== newChild) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return newChild.key === key
            ? updateElement(returnFiber, oldFiber, newChild, lanes)
            : null;
        case REACT_PORTAL_TYPE:
          return newChild.key === key
            ? updatePortal(returnFiber, oldFiber, newChild, lanes)
            : null;
        case REACT_LAZY_TYPE:
          return (
            (key = newChild._init),
            (newChild = key(newChild._payload)),
            updateSlot(returnFiber, oldFiber, newChild, lanes)
          );
      }
      if (isArrayImpl(newChild) || getIteratorFn(newChild))
        return null !== key
          ? null
          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);
      if ("function" === typeof newChild.then)
        return updateSlot(
          returnFiber,
          oldFiber,
          unwrapThenable(newChild),
          lanes
        );
      if (newChild.$$typeof === REACT_CONTEXT_TYPE)
        return updateSlot(
          returnFiber,
          oldFiber,
          readContextDuringReconciliation(returnFiber, newChild),
          lanes
        );
      throwOnInvalidObjectType(returnFiber, newChild);
    }
    return null;
  }
  function updateFromMap(
    existingChildren,
    returnFiber,
    newIdx,
    newChild,
    lanes
  ) {
    if (
      ("string" === typeof newChild && "" !== newChild) ||
      "number" === typeof newChild ||
      "bigint" === typeof newChild
    )
      return (
        (existingChildren = existingChildren.get(newIdx) || null),
        updateTextNode(returnFiber, existingChildren, "" + newChild, lanes)
      );
    if ("object" === typeof newChild && null !== newChild) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return (
            (existingChildren =
              existingChildren.get(
                null === newChild.key ? newIdx : newChild.key
              ) || null),
            updateElement(returnFiber, existingChildren, newChild, lanes)
          );
        case REACT_PORTAL_TYPE:
          return (
            (existingChildren =
              existingChildren.get(
                null === newChild.key ? newIdx : newChild.key
              ) || null),
            updatePortal(returnFiber, existingChildren, newChild, lanes)
          );
        case REACT_LAZY_TYPE:
          var init = newChild._init;
          newChild = init(newChild._payload);
          return updateFromMap(
            existingChildren,
            returnFiber,
            newIdx,
            newChild,
            lanes
          );
      }
      if (isArrayImpl(newChild) || getIteratorFn(newChild))
        return (
          (existingChildren = existingChildren.get(newIdx) || null),
          updateFragment(returnFiber, existingChildren, newChild, lanes, null)
        );
      if ("function" === typeof newChild.then)
        return updateFromMap(
          existingChildren,
          returnFiber,
          newIdx,
          unwrapThenable(newChild),
          lanes
        );
      if (newChild.$$typeof === REACT_CONTEXT_TYPE)
        return updateFromMap(
          existingChildren,
          returnFiber,
          newIdx,
          readContextDuringReconciliation(returnFiber, newChild),
          lanes
        );
      throwOnInvalidObjectType(returnFiber, newChild);
    }
    return null;
  }
  function reconcileChildrenArray(
    returnFiber,
    currentFirstChild,
    newChildren,
    lanes
  ) {
    for (
      var resultingFirstChild = null,
        previousNewFiber = null,
        oldFiber = currentFirstChild,
        newIdx = (currentFirstChild = 0),
        nextOldFiber = null;
      null !== oldFiber && newIdx < newChildren.length;
      newIdx++
    ) {
      oldFiber.index > newIdx
        ? ((nextOldFiber = oldFiber), (oldFiber = null))
        : (nextOldFiber = oldFiber.sibling);
      var newFiber = updateSlot(
        returnFiber,
        oldFiber,
        newChildren[newIdx],
        lanes
      );
      if (null === newFiber) {
        null === oldFiber && (oldFiber = nextOldFiber);
        break;
      }
      shouldTrackSideEffects &&
        oldFiber &&
        null === newFiber.alternate &&
        deleteChild(returnFiber, oldFiber);
      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
      null === previousNewFiber
        ? (resultingFirstChild = newFiber)
        : (previousNewFiber.sibling = newFiber);
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }
    if (newIdx === newChildren.length)
      return (
        deleteRemainingChildren(returnFiber, oldFiber),
        isHydrating && pushTreeFork(returnFiber, newIdx),
        resultingFirstChild
      );
    if (null === oldFiber) {
      for (; newIdx < newChildren.length; newIdx++)
        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),
          null !== oldFiber &&
            ((currentFirstChild = placeChild(
              oldFiber,
              currentFirstChild,
              newIdx
            )),
            null === previousNewFiber
              ? (resultingFirstChild = oldFiber)
              : (previousNewFiber.sibling = oldFiber),
            (previousNewFiber = oldFiber));
      isHydrating && pushTreeFork(returnFiber, newIdx);
      return resultingFirstChild;
    }
    for (
      oldFiber = mapRemainingChildren(oldFiber);
      newIdx < newChildren.length;
      newIdx++
    )
      (nextOldFiber = updateFromMap(
        oldFiber,
        returnFiber,
        newIdx,
        newChildren[newIdx],
        lanes
      )),
        null !== nextOldFiber &&
          (shouldTrackSideEffects &&
            null !== nextOldFiber.alternate &&
            oldFiber.delete(
              null === nextOldFiber.key ? newIdx : nextOldFiber.key
            ),
          (currentFirstChild = placeChild(
            nextOldFiber,
            currentFirstChild,
            newIdx
          )),
          null === previousNewFiber
            ? (resultingFirstChild = nextOldFiber)
            : (previousNewFiber.sibling = nextOldFiber),
          (previousNewFiber = nextOldFiber));
    shouldTrackSideEffects &&
      oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    isHydrating && pushTreeFork(returnFiber, newIdx);
    return resultingFirstChild;
  }
  function reconcileChildrenIterator(
    returnFiber,
    currentFirstChild,
    newChildren,
    lanes
  ) {
    if (null == newChildren) throw Error(formatProdErrorMessage(151));
    for (
      var resultingFirstChild = null,
        previousNewFiber = null,
        oldFiber = currentFirstChild,
        newIdx = (currentFirstChild = 0),
        nextOldFiber = null,
        step = newChildren.next();
      null !== oldFiber && !step.done;
      newIdx++, step = newChildren.next()
    ) {
      oldFiber.index > newIdx
        ? ((nextOldFiber = oldFiber), (oldFiber = null))
        : (nextOldFiber = oldFiber.sibling);
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
      if (null === newFiber) {
        null === oldFiber && (oldFiber = nextOldFiber);
        break;
      }
      shouldTrackSideEffects &&
        oldFiber &&
        null === newFiber.alternate &&
        deleteChild(returnFiber, oldFiber);
      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
      null === previousNewFiber
        ? (resultingFirstChild = newFiber)
        : (previousNewFiber.sibling = newFiber);
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }
    if (step.done)
      return (
        deleteRemainingChildren(returnFiber, oldFiber),
        isHydrating && pushTreeFork(returnFiber, newIdx),
        resultingFirstChild
      );
    if (null === oldFiber) {
      for (; !step.done; newIdx++, step = newChildren.next())
        (step = createChild(returnFiber, step.value, lanes)),
          null !== step &&
            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
            null === previousNewFiber
              ? (resultingFirstChild = step)
              : (previousNewFiber.sibling = step),
            (previousNewFiber = step));
      isHydrating && pushTreeFork(returnFiber, newIdx);
      return resultingFirstChild;
    }
    for (
      oldFiber = mapRemainingChildren(oldFiber);
      !step.done;
      newIdx++, step = newChildren.next()
    )
      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),
        null !== step &&
          (shouldTrackSideEffects &&
            null !== step.alternate &&
            oldFiber.delete(null === step.key ? newIdx : step.key),
          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
          null === previousNewFiber
            ? (resultingFirstChild = step)
            : (previousNewFiber.sibling = step),
          (previousNewFiber = step));
    shouldTrackSideEffects &&
      oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    isHydrating && pushTreeFork(returnFiber, newIdx);
    return resultingFirstChild;
  }
  function reconcileChildFibersImpl(
    returnFiber,
    currentFirstChild,
    newChild,
    lanes
  ) {
    "object" === typeof newChild &&
      null !== newChild &&
      newChild.type === REACT_FRAGMENT_TYPE &&
      null === newChild.key &&
      (newChild = newChild.props.children);
    if ("object" === typeof newChild && null !== newChild) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            for (var key = newChild.key; null !== currentFirstChild; ) {
              if (currentFirstChild.key === key) {
                key = newChild.type;
                if (key === REACT_FRAGMENT_TYPE) {
                  if (7 === currentFirstChild.tag) {
                    deleteRemainingChildren(
                      returnFiber,
                      currentFirstChild.sibling
                    );
                    lanes = useFiber(
                      currentFirstChild,
                      newChild.props.children
                    );
                    lanes.return = returnFiber;
                    returnFiber = lanes;
                    break a;
                  }
                } else if (
                  currentFirstChild.elementType === key ||
                  ("object" === typeof key &&
                    null !== key &&
                    key.$$typeof === REACT_LAZY_TYPE &&
                    resolveLazy(key) === currentFirstChild.type)
                ) {
                  deleteRemainingChildren(
                    returnFiber,
                    currentFirstChild.sibling
                  );
                  lanes = useFiber(currentFirstChild, newChild.props);
                  coerceRef(lanes, newChild);
                  lanes.return = returnFiber;
                  returnFiber = lanes;
                  break a;
                }
                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);
              currentFirstChild = currentFirstChild.sibling;
            }
            newChild.type === REACT_FRAGMENT_TYPE
              ? ((lanes = createFiberFromFragment(
                  newChild.props.children,
                  returnFiber.mode,
                  lanes,
                  newChild.key
                )),
                (lanes.return = returnFiber),
                (returnFiber = lanes))
              : ((lanes = createFiberFromTypeAndProps(
                  newChild.type,
                  newChild.key,
                  newChild.props,
                  null,
                  returnFiber.mode,
                  lanes
                )),
                coerceRef(lanes, newChild),
                (lanes.return = returnFiber),
                (returnFiber = lanes));
          }
          return placeSingleChild(returnFiber);
        case REACT_PORTAL_TYPE:
          a: {
            for (key = newChild.key; null !== currentFirstChild; ) {
              if (currentFirstChild.key === key)
                if (
                  4 === currentFirstChild.tag &&
                  currentFirstChild.stateNode.containerInfo ===
                    newChild.containerInfo &&
                  currentFirstChild.stateNode.implementation ===
                    newChild.implementation
                ) {
                  deleteRemainingChildren(
                    returnFiber,
                    currentFirstChild.sibling
                  );
                  lanes = useFiber(currentFirstChild, newChild.children || []);
                  lanes.return = returnFiber;
                  returnFiber = lanes;
                  break a;
                } else {
                  deleteRemainingChildren(returnFiber, currentFirstChild);
                  break;
                }
              else deleteChild(returnFiber, currentFirstChild);
              currentFirstChild = currentFirstChild.sibling;
            }
            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);
            lanes.return = returnFiber;
            returnFiber = lanes;
          }
          return placeSingleChild(returnFiber);
        case REACT_LAZY_TYPE:
          return (
            (key = newChild._init),
            (newChild = key(newChild._payload)),
            reconcileChildFibersImpl(
              returnFiber,
              currentFirstChild,
              newChild,
              lanes
            )
          );
      }
      if (isArrayImpl(newChild))
        return reconcileChildrenArray(
          returnFiber,
          currentFirstChild,
          newChild,
          lanes
        );
      if (getIteratorFn(newChild)) {
        key = getIteratorFn(newChild);
        if ("function" !== typeof key) throw Error(formatProdErrorMessage(150));
        newChild = key.call(newChild);
        return reconcileChildrenIterator(
          returnFiber,
          currentFirstChild,
          newChild,
          lanes
        );
      }
      if ("function" === typeof newChild.then)
        return reconcileChildFibersImpl(
          returnFiber,
          currentFirstChild,
          unwrapThenable(newChild),
          lanes
        );
      if (newChild.$$typeof === REACT_CONTEXT_TYPE)
        return reconcileChildFibersImpl(
          returnFiber,
          currentFirstChild,
          readContextDuringReconciliation(returnFiber, newChild),
          lanes
        );
      throwOnInvalidObjectType(returnFiber, newChild);
    }
    return ("string" === typeof newChild && "" !== newChild) ||
      "number" === typeof newChild ||
      "bigint" === typeof newChild
      ? ((newChild = "" + newChild),
        null !== currentFirstChild && 6 === currentFirstChild.tag
          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),
            (lanes = useFiber(currentFirstChild, newChild)),
            (lanes.return = returnFiber),
            (returnFiber = lanes))
          : (deleteRemainingChildren(returnFiber, currentFirstChild),
            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),
            (lanes.return = returnFiber),
            (returnFiber = lanes)),
        placeSingleChild(returnFiber))
      : deleteRemainingChildren(returnFiber, currentFirstChild);
  }
  return function (returnFiber, currentFirstChild, newChild, lanes) {
    try {
      thenableIndexCounter$1 = 0;
      var firstChildFiber = reconcileChildFibersImpl(
        returnFiber,
        currentFirstChild,
        newChild,
        lanes
      );
      thenableState$1 = null;
      return firstChildFiber;
    } catch (x) {
      if (x === SuspenseException) throw x;
      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);
      fiber.lanes = lanes;
      fiber.return = returnFiber;
      return fiber;
    } finally {
    }
  };
}
var reconcileChildFibers = createChildReconciler(!0),
  mountChildFibers = createChildReconciler(!1),
  currentTreeHiddenStackCursor = createCursor(null),
  prevEntangledRenderLanesCursor = createCursor(0);
function pushHiddenContext(fiber, context) {
  fiber = entangledRenderLanes;
  push(prevEntangledRenderLanesCursor, fiber);
  push(currentTreeHiddenStackCursor, context);
  entangledRenderLanes = fiber | context.baseLanes;
}
function reuseHiddenContextOnStack() {
  push(prevEntangledRenderLanesCursor, entangledRenderLanes);
  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);
}
function popHiddenContext() {
  entangledRenderLanes = prevEntangledRenderLanesCursor.current;
  pop(currentTreeHiddenStackCursor);
  pop(prevEntangledRenderLanesCursor);
}
var suspenseHandlerStackCursor = createCursor(null),
  shellBoundary = null;
function pushPrimaryTreeSuspenseHandler(handler) {
  var current = handler.alternate;
  push(suspenseStackCursor, suspenseStackCursor.current & 1);
  push(suspenseHandlerStackCursor, handler);
  null === shellBoundary &&
    (null === current || null !== currentTreeHiddenStackCursor.current
      ? (shellBoundary = handler)
      : null !== current.memoizedState && (shellBoundary = handler));
}
function pushOffscreenSuspenseHandler(fiber) {
  if (22 === fiber.tag) {
    if (
      (push(suspenseStackCursor, suspenseStackCursor.current),
      push(suspenseHandlerStackCursor, fiber),
      null === shellBoundary)
    ) {
      var current = fiber.alternate;
      null !== current &&
        null !== current.memoizedState &&
        (shellBoundary = fiber);
    }
  } else reuseSuspenseHandlerOnStack(fiber);
}
function reuseSuspenseHandlerOnStack() {
  push(suspenseStackCursor, suspenseStackCursor.current);
  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);
}
function popSuspenseHandler(fiber) {
  pop(suspenseHandlerStackCursor);
  shellBoundary === fiber && (shellBoundary = null);
  pop(suspenseStackCursor);
}
var suspenseStackCursor = createCursor(0);
function findFirstSuspended(row) {
  for (var node = row; null !== node; ) {
    if (13 === node.tag) {
      var state = node.memoizedState;
      if (
        null !== state &&
        ((state = state.dehydrated),
        null === state || "$?" === state.data || "$!" === state.data)
      )
        return node;
    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {
      if (0 !== (node.flags & 128)) return node;
    } else if (null !== node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === row) break;
    for (; null === node.sibling; ) {
      if (null === node.return || node.return === row) return null;
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  return null;
}
var AbortControllerLocal =
    "undefined" !== typeof AbortController
      ? AbortController
      : function () {
          var listeners = [],
            signal = (this.signal = {
              aborted: !1,
              addEventListener: function (type, listener) {
                listeners.push(listener);
              }
            });
          this.abort = function () {
            signal.aborted = !0;
            listeners.forEach(function (listener) {
              return listener();
            });
          };
        },
  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,
  NormalPriority = Scheduler.unstable_NormalPriority,
  CacheContext = {
    $$typeof: REACT_CONTEXT_TYPE,
    Consumer: null,
    Provider: null,
    _currentValue: null,
    _currentValue2: null,
    _threadCount: 0
  };
function createCache() {
  return {
    controller: new AbortControllerLocal(),
    data: new Map(),
    refCount: 0
  };
}
function releaseCache(cache) {
  cache.refCount--;
  0 === cache.refCount &&
    scheduleCallback$2(NormalPriority, function () {
      cache.controller.abort();
    });
}
var currentEntangledListeners = null,
  currentEntangledPendingCount = 0,
  currentEntangledLane = 0,
  currentEntangledActionThenable = null;
function entangleAsyncAction(transition, thenable) {
  if (null === currentEntangledListeners) {
    var entangledListeners = (currentEntangledListeners = []);
    currentEntangledPendingCount = 0;
    currentEntangledLane = requestTransitionLane();
    currentEntangledActionThenable = {
      status: "pending",
      value: void 0,
      then: function (resolve) {
        entangledListeners.push(resolve);
      }
    };
  }
  currentEntangledPendingCount++;
  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
  return thenable;
}
function pingEngtangledActionScope() {
  if (
    0 === --currentEntangledPendingCount &&
    null !== currentEntangledListeners
  ) {
    null !== currentEntangledActionThenable &&
      (currentEntangledActionThenable.status = "fulfilled");
    var listeners = currentEntangledListeners;
    currentEntangledListeners = null;
    currentEntangledLane = 0;
    currentEntangledActionThenable = null;
    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();
  }
}
function chainThenableValue(thenable, result) {
  var listeners = [],
    thenableWithOverride = {
      status: "pending",
      value: null,
      reason: null,
      then: function (resolve) {
        listeners.push(resolve);
      }
    };
  thenable.then(
    function () {
      thenableWithOverride.status = "fulfilled";
      thenableWithOverride.value = result;
      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);
    },
    function (error) {
      thenableWithOverride.status = "rejected";
      thenableWithOverride.reason = error;
      for (error = 0; error < listeners.length; error++)
        (0, listeners[error])(void 0);
    }
  );
  return thenableWithOverride;
}
var prevOnStartTransitionFinish = ReactSharedInternals.S;
ReactSharedInternals.S = function (transition, returnValue) {
  "object" === typeof returnValue &&
    null !== returnValue &&
    "function" === typeof returnValue.then &&
    entangleAsyncAction(transition, returnValue);
  null !== prevOnStartTransitionFinish &&
    prevOnStartTransitionFinish(transition, returnValue);
};
var resumedCache = createCursor(null);
function peekCacheFromPool() {
  var cacheResumedFromPreviousRender = resumedCache.current;
  return null !== cacheResumedFromPreviousRender
    ? cacheResumedFromPreviousRender
    : workInProgressRoot.pooledCache;
}
function pushTransition(offscreenWorkInProgress, prevCachePool) {
  null === prevCachePool
    ? push(resumedCache, resumedCache.current)
    : push(resumedCache, prevCachePool.pool);
}
function getSuspendedCache() {
  var cacheFromPool = peekCacheFromPool();
  return null === cacheFromPool
    ? null
    : { parent: CacheContext._currentValue, pool: cacheFromPool };
}
var renderLanes = 0,
  currentlyRenderingFiber$1 = null,
  currentHook = null,
  workInProgressHook = null,
  didScheduleRenderPhaseUpdate = !1,
  didScheduleRenderPhaseUpdateDuringThisPass = !1,
  shouldDoubleInvokeUserFnsInHooksDEV = !1,
  localIdCounter = 0,
  thenableIndexCounter = 0,
  thenableState = null,
  globalClientIdCounter = 0;
function throwInvalidHookError() {
  throw Error(formatProdErrorMessage(321));
}
function areHookInputsEqual(nextDeps, prevDeps) {
  if (null === prevDeps) return !1;
  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)
    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
  return !0;
}
function renderWithHooks(
  current,
  workInProgress,
  Component,
  props,
  secondArg,
  nextRenderLanes
) {
  renderLanes = nextRenderLanes;
  currentlyRenderingFiber$1 = workInProgress;
  workInProgress.memoizedState = null;
  workInProgress.updateQueue = null;
  workInProgress.lanes = 0;
  ReactSharedInternals.H =
    null === current || null === current.memoizedState
      ? HooksDispatcherOnMount
      : HooksDispatcherOnUpdate;
  shouldDoubleInvokeUserFnsInHooksDEV = !1;
  nextRenderLanes = Component(props, secondArg);
  shouldDoubleInvokeUserFnsInHooksDEV = !1;
  didScheduleRenderPhaseUpdateDuringThisPass &&
    (nextRenderLanes = renderWithHooksAgain(
      workInProgress,
      Component,
      props,
      secondArg
    ));
  finishRenderingHooks(current);
  return nextRenderLanes;
}
function finishRenderingHooks(current) {
  ReactSharedInternals.H = ContextOnlyDispatcher;
  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
  renderLanes = 0;
  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
  didScheduleRenderPhaseUpdate = !1;
  thenableIndexCounter = 0;
  thenableState = null;
  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));
  null === current ||
    didReceiveUpdate ||
    ((current = current.dependencies),
    null !== current &&
      checkIfContextChanged(current) &&
      (didReceiveUpdate = !0));
}
function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
  currentlyRenderingFiber$1 = workInProgress;
  var numberOfReRenders = 0;
  do {
    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);
    thenableIndexCounter = 0;
    didScheduleRenderPhaseUpdateDuringThisPass = !1;
    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));
    numberOfReRenders += 1;
    workInProgressHook = currentHook = null;
    if (null != workInProgress.updateQueue) {
      var children = workInProgress.updateQueue;
      children.lastEffect = null;
      children.events = null;
      children.stores = null;
      null != children.memoCache && (children.memoCache.index = 0);
    }
    ReactSharedInternals.H = HooksDispatcherOnRerender;
    children = Component(props, secondArg);
  } while (didScheduleRenderPhaseUpdateDuringThisPass);
  return children;
}
function TransitionAwareHostComponent() {
  var dispatcher = ReactSharedInternals.H,
    maybeThenable = dispatcher.useState()[0];
  maybeThenable =
    "function" === typeof maybeThenable.then
      ? useThenable(maybeThenable)
      : maybeThenable;
  dispatcher = dispatcher.useState()[0];
  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&
    (currentlyRenderingFiber$1.flags |= 1024);
  return maybeThenable;
}
function checkDidRenderIdHook() {
  var didRenderIdHook = 0 !== localIdCounter;
  localIdCounter = 0;
  return didRenderIdHook;
}
function bailoutHooks(current, workInProgress, lanes) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.flags &= -2053;
  current.lanes &= ~lanes;
}
function resetHooksOnUnwind(workInProgress) {
  if (didScheduleRenderPhaseUpdate) {
    for (
      workInProgress = workInProgress.memoizedState;
      null !== workInProgress;

    ) {
      var queue = workInProgress.queue;
      null !== queue && (queue.pending = null);
      workInProgress = workInProgress.next;
    }
    didScheduleRenderPhaseUpdate = !1;
  }
  renderLanes = 0;
  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
  didScheduleRenderPhaseUpdateDuringThisPass = !1;
  thenableIndexCounter = localIdCounter = 0;
  thenableState = null;
}
function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === workInProgressHook
    ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook)
    : (workInProgressHook = workInProgressHook.next = hook);
  return workInProgressHook;
}
function updateWorkInProgressHook() {
  if (null === currentHook) {
    var nextCurrentHook = currentlyRenderingFiber$1.alternate;
    nextCurrentHook =
      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
  } else nextCurrentHook = currentHook.next;
  var nextWorkInProgressHook =
    null === workInProgressHook
      ? currentlyRenderingFiber$1.memoizedState
      : workInProgressHook.next;
  if (null !== nextWorkInProgressHook)
    (workInProgressHook = nextWorkInProgressHook),
      (currentHook = nextCurrentHook);
  else {
    if (null === nextCurrentHook) {
      if (null === currentlyRenderingFiber$1.alternate)
        throw Error(formatProdErrorMessage(467));
      throw Error(formatProdErrorMessage(310));
    }
    currentHook = nextCurrentHook;
    nextCurrentHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      baseQueue: currentHook.baseQueue,
      queue: currentHook.queue,
      next: null
    };
    null === workInProgressHook
      ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =
          nextCurrentHook)
      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);
  }
  return workInProgressHook;
}
var createFunctionComponentUpdateQueue;
createFunctionComponentUpdateQueue = function () {
  return { lastEffect: null, events: null, stores: null, memoCache: null };
};
function useThenable(thenable) {
  var index = thenableIndexCounter;
  thenableIndexCounter += 1;
  null === thenableState && (thenableState = []);
  thenable = trackUsedThenable(thenableState, thenable, index);
  index = currentlyRenderingFiber$1;
  null ===
    (null === workInProgressHook
      ? index.memoizedState
      : workInProgressHook.next) &&
    ((index = index.alternate),
    (ReactSharedInternals.H =
      null === index || null === index.memoizedState
        ? HooksDispatcherOnMount
        : HooksDispatcherOnUpdate));
  return thenable;
}
function use(usable) {
  if (null !== usable && "object" === typeof usable) {
    if ("function" === typeof usable.then) return useThenable(usable);
    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
  }
  throw Error(formatProdErrorMessage(438, String(usable)));
}
function useMemoCache(size) {
  var memoCache = null,
    updateQueue = currentlyRenderingFiber$1.updateQueue;
  null !== updateQueue && (memoCache = updateQueue.memoCache);
  if (null == memoCache) {
    var current = currentlyRenderingFiber$1.alternate;
    null !== current &&
      ((current = current.updateQueue),
      null !== current &&
        ((current = current.memoCache),
        null != current &&
          (memoCache = {
            data: current.data.map(function (array) {
              return array.slice();
            }),
            index: 0
          })));
  }
  null == memoCache && (memoCache = { data: [], index: 0 });
  null === updateQueue &&
    ((updateQueue = createFunctionComponentUpdateQueue()),
    (currentlyRenderingFiber$1.updateQueue = updateQueue));
  updateQueue.memoCache = memoCache;
  updateQueue = memoCache.data[memoCache.index];
  if (void 0 === updateQueue)
    for (
      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;
      current < size;
      current++
    )
      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
  memoCache.index++;
  return updateQueue;
}
function basicStateReducer(state, action) {
  return "function" === typeof action ? action(state) : action;
}
function updateReducer(reducer) {
  var hook = updateWorkInProgressHook();
  return updateReducerImpl(hook, currentHook, reducer);
}
function updateReducerImpl(hook, current, reducer) {
  var queue = hook.queue;
  if (null === queue) throw Error(formatProdErrorMessage(311));
  queue.lastRenderedReducer = reducer;
  var baseQueue = hook.baseQueue,
    pendingQueue = queue.pending;
  if (null !== pendingQueue) {
    if (null !== baseQueue) {
      var baseFirst = baseQueue.next;
      baseQueue.next = pendingQueue.next;
      pendingQueue.next = baseFirst;
    }
    current.baseQueue = baseQueue = pendingQueue;
    queue.pending = null;
  }
  pendingQueue = hook.baseState;
  if (null === baseQueue) hook.memoizedState = pendingQueue;
  else {
    current = baseQueue.next;
    var newBaseQueueFirst = (baseFirst = null),
      newBaseQueueLast = null,
      update = current,
      didReadFromEntangledAsyncAction$54 = !1;
    do {
      var updateLane = update.lane & -536870913;
      if (
        updateLane !== update.lane
          ? (workInProgressRootRenderLanes & updateLane) === updateLane
          : (renderLanes & updateLane) === updateLane
      ) {
        var revertLane = update.revertLane;
        if (0 === revertLane)
          null !== newBaseQueueLast &&
            (newBaseQueueLast = newBaseQueueLast.next =
              {
                lane: 0,
                revertLane: 0,
                action: update.action,
                hasEagerState: update.hasEagerState,
                eagerState: update.eagerState,
                next: null
              }),
            updateLane === currentEntangledLane &&
              (didReadFromEntangledAsyncAction$54 = !0);
        else if ((renderLanes & revertLane) === revertLane) {
          update = update.next;
          revertLane === currentEntangledLane &&
            (didReadFromEntangledAsyncAction$54 = !0);
          continue;
        } else
          (updateLane = {
            lane: 0,
            revertLane: update.revertLane,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          }),
            null === newBaseQueueLast
              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),
                (baseFirst = pendingQueue))
              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),
            (currentlyRenderingFiber$1.lanes |= revertLane),
            (workInProgressRootSkippedLanes |= revertLane);
        updateLane = update.action;
        shouldDoubleInvokeUserFnsInHooksDEV &&
          reducer(pendingQueue, updateLane);
        pendingQueue = update.hasEagerState
          ? update.eagerState
          : reducer(pendingQueue, updateLane);
      } else
        (revertLane = {
          lane: updateLane,
          revertLane: update.revertLane,
          action: update.action,
          hasEagerState: update.hasEagerState,
          eagerState: update.eagerState,
          next: null
        }),
          null === newBaseQueueLast
            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),
              (baseFirst = pendingQueue))
            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),
          (currentlyRenderingFiber$1.lanes |= updateLane),
          (workInProgressRootSkippedLanes |= updateLane);
      update = update.next;
    } while (null !== update && update !== current);
    null === newBaseQueueLast
      ? (baseFirst = pendingQueue)
      : (newBaseQueueLast.next = newBaseQueueFirst);
    if (
      !objectIs(pendingQueue, hook.memoizedState) &&
      ((didReceiveUpdate = !0),
      didReadFromEntangledAsyncAction$54 &&
        ((reducer = currentEntangledActionThenable), null !== reducer))
    )
      throw reducer;
    hook.memoizedState = pendingQueue;
    hook.baseState = baseFirst;
    hook.baseQueue = newBaseQueueLast;
    queue.lastRenderedState = pendingQueue;
  }
  null === baseQueue && (queue.lanes = 0);
  return [hook.memoizedState, queue.dispatch];
}
function rerenderReducer(reducer) {
  var hook = updateWorkInProgressHook(),
    queue = hook.queue;
  if (null === queue) throw Error(formatProdErrorMessage(311));
  queue.lastRenderedReducer = reducer;
  var dispatch = queue.dispatch,
    lastRenderPhaseUpdate = queue.pending,
    newState = hook.memoizedState;
  if (null !== lastRenderPhaseUpdate) {
    queue.pending = null;
    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);
    do (newState = reducer(newState, update.action)), (update = update.next);
    while (update !== lastRenderPhaseUpdate);
    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
    hook.memoizedState = newState;
    null === hook.baseQueue && (hook.baseState = newState);
    queue.lastRenderedState = newState;
  }
  return [newState, dispatch];
}
function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var fiber = currentlyRenderingFiber$1,
    hook = updateWorkInProgressHook(),
    isHydrating$jscomp$0 = isHydrating;
  if (isHydrating$jscomp$0) {
    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));
    getServerSnapshot = getServerSnapshot();
  } else getServerSnapshot = getSnapshot();
  var snapshotChanged = !objectIs(
    (currentHook || hook).memoizedState,
    getServerSnapshot
  );
  snapshotChanged &&
    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));
  hook = hook.queue;
  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [
    subscribe
  ]);
  if (
    hook.getSnapshot !== getSnapshot ||
    snapshotChanged ||
    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)
  ) {
    fiber.flags |= 2048;
    pushEffect(
      9,
      updateStoreInstance.bind(
        null,
        fiber,
        hook,
        getServerSnapshot,
        getSnapshot
      ),
      { destroy: void 0 },
      null
    );
    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));
    isHydrating$jscomp$0 ||
      0 !== (renderLanes & 60) ||
      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
  }
  return getServerSnapshot;
}
function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
  fiber.flags |= 16384;
  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };
  getSnapshot = currentlyRenderingFiber$1.updateQueue;
  null === getSnapshot
    ? ((getSnapshot = createFunctionComponentUpdateQueue()),
      (currentlyRenderingFiber$1.updateQueue = getSnapshot),
      (getSnapshot.stores = [fiber]))
    : ((renderedSnapshot = getSnapshot.stores),
      null === renderedSnapshot
        ? (getSnapshot.stores = [fiber])
        : renderedSnapshot.push(fiber));
}
function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
  inst.value = nextSnapshot;
  inst.getSnapshot = getSnapshot;
  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
}
function subscribeToStore(fiber, inst, subscribe) {
  return subscribe(function () {
    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
  });
}
function checkIfSnapshotChanged(inst) {
  var latestGetSnapshot = inst.getSnapshot;
  inst = inst.value;
  try {
    var nextValue = latestGetSnapshot();
    return !objectIs(inst, nextValue);
  } catch (error) {
    return !0;
  }
}
function forceStoreRerender(fiber) {
  var root = enqueueConcurrentRenderForLane(fiber, 2);
  null !== root && scheduleUpdateOnFiber(root, fiber, 2);
}
function mountStateImpl(initialState) {
  var hook = mountWorkInProgressHook();
  if ("function" === typeof initialState) {
    var initialStateInitializer = initialState;
    initialState = initialStateInitializer();
    if (shouldDoubleInvokeUserFnsInHooksDEV) {
      setIsStrictModeForDevtools(!0);
      try {
        initialStateInitializer();
      } finally {
        setIsStrictModeForDevtools(!1);
      }
    }
  }
  hook.memoizedState = hook.baseState = initialState;
  hook.queue = {
    pending: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  return hook;
}
function updateOptimisticImpl(hook, current, passthrough, reducer) {
  hook.baseState = passthrough;
  return updateReducerImpl(
    hook,
    currentHook,
    "function" === typeof reducer ? reducer : basicStateReducer
  );
}
function dispatchActionState(
  fiber,
  actionQueue,
  setPendingState,
  setState,
  payload
) {
  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));
  fiber = actionQueue.action;
  if (null !== fiber) {
    var actionNode = {
      payload: payload,
      action: fiber,
      next: null,
      isTransition: !0,
      status: "pending",
      value: null,
      reason: null,
      listeners: [],
      then: function (listener) {
        actionNode.listeners.push(listener);
      }
    };
    null !== ReactSharedInternals.T
      ? setPendingState(!0)
      : (actionNode.isTransition = !1);
    setState(actionNode);
    setPendingState = actionQueue.pending;
    null === setPendingState
      ? ((actionNode.next = actionQueue.pending = actionNode),
        runActionStateAction(actionQueue, actionNode))
      : ((actionNode.next = setPendingState.next),
        (actionQueue.pending = setPendingState.next = actionNode));
  }
}
function runActionStateAction(actionQueue, node) {
  var action = node.action,
    payload = node.payload,
    prevState = actionQueue.state;
  if (node.isTransition) {
    var prevTransition = ReactSharedInternals.T,
      currentTransition = {};
    ReactSharedInternals.T = currentTransition;
    try {
      var returnValue = action(prevState, payload),
        onStartTransitionFinish = ReactSharedInternals.S;
      null !== onStartTransitionFinish &&
        onStartTransitionFinish(currentTransition, returnValue);
      handleActionReturnValue(actionQueue, node, returnValue);
    } catch (error) {
      onActionError(actionQueue, node, error);
    } finally {
      ReactSharedInternals.T = prevTransition;
    }
  } else
    try {
      (prevTransition = action(prevState, payload)),
        handleActionReturnValue(actionQueue, node, prevTransition);
    } catch (error$60) {
      onActionError(actionQueue, node, error$60);
    }
}
function handleActionReturnValue(actionQueue, node, returnValue) {
  null !== returnValue &&
  "object" === typeof returnValue &&
  "function" === typeof returnValue.then
    ? returnValue.then(
        function (nextState) {
          onActionSuccess(actionQueue, node, nextState);
        },
        function (error) {
          return onActionError(actionQueue, node, error);
        }
      )
    : onActionSuccess(actionQueue, node, returnValue);
}
function onActionSuccess(actionQueue, actionNode, nextState) {
  actionNode.status = "fulfilled";
  actionNode.value = nextState;
  notifyActionListeners(actionNode);
  actionQueue.state = nextState;
  actionNode = actionQueue.pending;
  null !== actionNode &&
    ((nextState = actionNode.next),
    nextState === actionNode
      ? (actionQueue.pending = null)
      : ((nextState = nextState.next),
        (actionNode.next = nextState),
        runActionStateAction(actionQueue, nextState)));
}
function onActionError(actionQueue, actionNode, error) {
  var last = actionQueue.pending;
  actionQueue.pending = null;
  if (null !== last) {
    last = last.next;
    do
      (actionNode.status = "rejected"),
        (actionNode.reason = error),
        notifyActionListeners(actionNode),
        (actionNode = actionNode.next);
    while (actionNode !== last);
  }
  actionQueue.action = null;
}
function notifyActionListeners(actionNode) {
  actionNode = actionNode.listeners;
  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();
}
function actionStateReducer(oldState, newState) {
  return newState;
}
function mountActionState(action, initialStateProp) {
  if (isHydrating) {
    var ssrFormState = workInProgressRoot.formState;
    if (null !== ssrFormState) {
      a: {
        var JSCompiler_inline_result = currentlyRenderingFiber$1;
        if (isHydrating) {
          if (nextHydratableInstance) {
            b: {
              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;
              for (
                var inRootOrSingleton = rootOrSingletonContext;
                8 !== JSCompiler_inline_result$jscomp$0.nodeType;

              ) {
                if (!inRootOrSingleton) {
                  JSCompiler_inline_result$jscomp$0 = null;
                  break b;
                }
                JSCompiler_inline_result$jscomp$0 = getNextHydratable(
                  JSCompiler_inline_result$jscomp$0.nextSibling
                );
                if (null === JSCompiler_inline_result$jscomp$0) {
                  JSCompiler_inline_result$jscomp$0 = null;
                  break b;
                }
              }
              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;
              JSCompiler_inline_result$jscomp$0 =
                "F!" === inRootOrSingleton || "F" === inRootOrSingleton
                  ? JSCompiler_inline_result$jscomp$0
                  : null;
            }
            if (JSCompiler_inline_result$jscomp$0) {
              nextHydratableInstance = getNextHydratable(
                JSCompiler_inline_result$jscomp$0.nextSibling
              );
              JSCompiler_inline_result =
                "F!" === JSCompiler_inline_result$jscomp$0.data;
              break a;
            }
          }
          throwOnHydrationMismatch(JSCompiler_inline_result);
        }
        JSCompiler_inline_result = !1;
      }
      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);
    }
  }
  ssrFormState = mountWorkInProgressHook();
  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
  JSCompiler_inline_result = {
    pending: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: actionStateReducer,
    lastRenderedState: initialStateProp
  };
  ssrFormState.queue = JSCompiler_inline_result;
  ssrFormState = dispatchSetState.bind(
    null,
    currentlyRenderingFiber$1,
    JSCompiler_inline_result
  );
  JSCompiler_inline_result.dispatch = ssrFormState;
  JSCompiler_inline_result = mountStateImpl(!1);
  inRootOrSingleton = dispatchOptimisticSetState.bind(
    null,
    currentlyRenderingFiber$1,
    !1,
    JSCompiler_inline_result.queue
  );
  JSCompiler_inline_result = mountWorkInProgressHook();
  JSCompiler_inline_result$jscomp$0 = {
    state: initialStateProp,
    dispatch: null,
    action: action,
    pending: null
  };
  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;
  ssrFormState = dispatchActionState.bind(
    null,
    currentlyRenderingFiber$1,
    JSCompiler_inline_result$jscomp$0,
    inRootOrSingleton,
    ssrFormState
  );
  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;
  JSCompiler_inline_result.memoizedState = action;
  return [initialStateProp, ssrFormState, !1];
}
function updateActionState(action) {
  var stateHook = updateWorkInProgressHook();
  return updateActionStateImpl(stateHook, currentHook, action);
}
function updateActionStateImpl(stateHook, currentStateHook, action) {
  currentStateHook = updateReducerImpl(
    stateHook,
    currentStateHook,
    actionStateReducer
  )[0];
  stateHook = updateReducer(basicStateReducer)[0];
  currentStateHook =
    "object" === typeof currentStateHook &&
    null !== currentStateHook &&
    "function" === typeof currentStateHook.then
      ? useThenable(currentStateHook)
      : currentStateHook;
  var actionQueueHook = updateWorkInProgressHook(),
    actionQueue = actionQueueHook.queue,
    dispatch = actionQueue.dispatch;
  action !== actionQueueHook.memoizedState &&
    ((currentlyRenderingFiber$1.flags |= 2048),
    pushEffect(
      9,
      actionStateActionEffect.bind(null, actionQueue, action),
      { destroy: void 0 },
      null
    ));
  return [currentStateHook, dispatch, stateHook];
}
function actionStateActionEffect(actionQueue, action) {
  actionQueue.action = action;
}
function rerenderActionState(action) {
  var stateHook = updateWorkInProgressHook(),
    currentStateHook = currentHook;
  if (null !== currentStateHook)
    return updateActionStateImpl(stateHook, currentStateHook, action);
  updateWorkInProgressHook();
  stateHook = stateHook.memoizedState;
  currentStateHook = updateWorkInProgressHook();
  var dispatch = currentStateHook.queue.dispatch;
  currentStateHook.memoizedState = action;
  return [stateHook, dispatch, !1];
}
function pushEffect(tag, create, inst, deps) {
  tag = { tag: tag, create: create, inst: inst, deps: deps, next: null };
  create = currentlyRenderingFiber$1.updateQueue;
  null === create &&
    ((create = createFunctionComponentUpdateQueue()),
    (currentlyRenderingFiber$1.updateQueue = create));
  inst = create.lastEffect;
  null === inst
    ? (create.lastEffect = tag.next = tag)
    : ((deps = inst.next),
      (inst.next = tag),
      (tag.next = deps),
      (create.lastEffect = tag));
  return tag;
}
function updateRef() {
  return updateWorkInProgressHook().memoizedState;
}
function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = mountWorkInProgressHook();
  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(
    1 | hookFlags,
    create,
    { destroy: void 0 },
    void 0 === deps ? null : deps
  );
}
function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = updateWorkInProgressHook();
  deps = void 0 === deps ? null : deps;
  var inst = hook.memoizedState.inst;
  null !== currentHook &&
  null !== deps &&
  areHookInputsEqual(deps, currentHook.memoizedState.deps)
    ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))
    : ((currentlyRenderingFiber$1.flags |= fiberFlags),
      (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));
}
function mountEffect(create, deps) {
  mountEffectImpl(8390656, 8, create, deps);
}
function updateEffect(create, deps) {
  updateEffectImpl(2048, 8, create, deps);
}
function updateInsertionEffect(create, deps) {
  return updateEffectImpl(4, 2, create, deps);
}
function updateLayoutEffect(create, deps) {
  return updateEffectImpl(4, 4, create, deps);
}
function imperativeHandleEffect(create, ref) {
  if ("function" === typeof ref) {
    create = create();
    var refCleanup = ref(create);
    return function () {
      "function" === typeof refCleanup ? refCleanup() : ref(null);
    };
  }
  if (null !== ref && void 0 !== ref)
    return (
      (create = create()),
      (ref.current = create),
      function () {
        ref.current = null;
      }
    );
}
function updateImperativeHandle(ref, create, deps) {
  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);
}
function mountDebugValue() {}
function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  deps = void 0 === deps ? null : deps;
  var prevState = hook.memoizedState;
  if (null !== deps && areHookInputsEqual(deps, prevState[1]))
    return prevState[0];
  hook.memoizedState = [callback, deps];
  return callback;
}
function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  deps = void 0 === deps ? null : deps;
  var prevState = hook.memoizedState;
  if (null !== deps && areHookInputsEqual(deps, prevState[1]))
    return prevState[0];
  prevState = nextCreate();
  if (shouldDoubleInvokeUserFnsInHooksDEV) {
    setIsStrictModeForDevtools(!0);
    try {
      nextCreate();
    } finally {
      setIsStrictModeForDevtools(!1);
    }
  }
  hook.memoizedState = [prevState, deps];
  return prevState;
}
function mountDeferredValueImpl(hook, value, initialValue) {
  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))
    return (hook.memoizedState = value);
  hook.memoizedState = initialValue;
  hook = requestDeferredLane();
  currentlyRenderingFiber$1.lanes |= hook;
  workInProgressRootSkippedLanes |= hook;
  return initialValue;
}
function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
  if (objectIs(value, prevValue)) return value;
  if (null !== currentTreeHiddenStackCursor.current)
    return (
      (hook = mountDeferredValueImpl(hook, value, initialValue)),
      objectIs(hook, prevValue) || (didReceiveUpdate = !0),
      hook
    );
  if (0 === (renderLanes & 42))
    return (didReceiveUpdate = !0), (hook.memoizedState = value);
  hook = requestDeferredLane();
  currentlyRenderingFiber$1.lanes |= hook;
  workInProgressRootSkippedLanes |= hook;
  return prevValue;
}
function startTransition(fiber, queue, pendingState, finishedState, callback) {
  var previousPriority = ReactDOMSharedInternals.p;
  ReactDOMSharedInternals.p =
    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;
  var prevTransition = ReactSharedInternals.T,
    currentTransition = {};
  ReactSharedInternals.T = currentTransition;
  dispatchOptimisticSetState(fiber, !1, queue, pendingState);
  try {
    var returnValue = callback(),
      onStartTransitionFinish = ReactSharedInternals.S;
    null !== onStartTransitionFinish &&
      onStartTransitionFinish(currentTransition, returnValue);
    if (
      null !== returnValue &&
      "object" === typeof returnValue &&
      "function" === typeof returnValue.then
    ) {
      var thenableForFinishedState = chainThenableValue(
        returnValue,
        finishedState
      );
      dispatchSetStateInternal(
        fiber,
        queue,
        thenableForFinishedState,
        requestUpdateLane(fiber)
      );
    } else
      dispatchSetStateInternal(
        fiber,
        queue,
        finishedState,
        requestUpdateLane(fiber)
      );
  } catch (error) {
    dispatchSetStateInternal(
      fiber,
      queue,
      { then: function () {}, status: "rejected", reason: error },
      requestUpdateLane()
    );
  } finally {
    (ReactDOMSharedInternals.p = previousPriority),
      (ReactSharedInternals.T = prevTransition);
  }
}
function noop$2() {}
function startHostTransition(formFiber, pendingState, action, formData) {
  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));
  var queue = ensureFormComponentIsStateful(formFiber).queue;
  startTransition(
    formFiber,
    queue,
    pendingState,
    sharedNotPendingObject,
    null === action
      ? noop$2
      : function () {
          requestFormReset$1(formFiber);
          return action(formData);
        }
  );
}
function ensureFormComponentIsStateful(formFiber) {
  var existingStateHook = formFiber.memoizedState;
  if (null !== existingStateHook) return existingStateHook;
  existingStateHook = {
    memoizedState: sharedNotPendingObject,
    baseState: sharedNotPendingObject,
    baseQueue: null,
    queue: {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: sharedNotPendingObject
    },
    next: null
  };
  var initialResetState = {};
  existingStateHook.next = {
    memoizedState: initialResetState,
    baseState: initialResetState,
    baseQueue: null,
    queue: {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: initialResetState
    },
    next: null
  };
  formFiber.memoizedState = existingStateHook;
  formFiber = formFiber.alternate;
  null !== formFiber && (formFiber.memoizedState = existingStateHook);
  return existingStateHook;
}
function requestFormReset$1(formFiber) {
  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;
  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());
}
function useHostTransitionStatus() {
  return readContext(HostTransitionContext);
}
function updateId() {
  return updateWorkInProgressHook().memoizedState;
}
function updateRefresh() {
  return updateWorkInProgressHook().memoizedState;
}
function refreshCache(fiber) {
  for (var provider = fiber.return; null !== provider; ) {
    switch (provider.tag) {
      case 24:
      case 3:
        var lane = requestUpdateLane();
        fiber = createUpdate(lane);
        var root$63 = enqueueUpdate(provider, fiber, lane);
        null !== root$63 &&
          (scheduleUpdateOnFiber(root$63, provider, lane),
          entangleTransitions(root$63, provider, lane));
        provider = { cache: createCache() };
        fiber.payload = provider;
        return;
    }
    provider = provider.return;
  }
}
function dispatchReducerAction(fiber, queue, action) {
  var lane = requestUpdateLane();
  action = {
    lane: lane,
    revertLane: 0,
    action: action,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  isRenderPhaseUpdate(fiber)
    ? enqueueRenderPhaseUpdate(queue, action)
    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),
      null !== action &&
        (scheduleUpdateOnFiber(action, fiber, lane),
        entangleTransitionUpdate(action, queue, lane)));
}
function dispatchSetState(fiber, queue, action) {
  var lane = requestUpdateLane();
  dispatchSetStateInternal(fiber, queue, action, lane);
}
function dispatchSetStateInternal(fiber, queue, action, lane) {
  var update = {
    lane: lane,
    revertLane: 0,
    action: action,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
  else {
    var alternate = fiber.alternate;
    if (
      0 === fiber.lanes &&
      (null === alternate || 0 === alternate.lanes) &&
      ((alternate = queue.lastRenderedReducer), null !== alternate)
    )
      try {
        var currentState = queue.lastRenderedState,
          eagerState = alternate(currentState, action);
        update.hasEagerState = !0;
        update.eagerState = eagerState;
        if (objectIs(eagerState, currentState))
          return (
            enqueueUpdate$1(fiber, queue, update, 0),
            null === workInProgressRoot && finishQueueingConcurrentUpdates(),
            !1
          );
      } catch (error) {
      } finally {
      }
    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
    if (null !== action)
      return (
        scheduleUpdateOnFiber(action, fiber, lane),
        entangleTransitionUpdate(action, queue, lane),
        !0
      );
  }
  return !1;
}
function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
  action = {
    lane: 2,
    revertLane: requestTransitionLane(),
    action: action,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  if (isRenderPhaseUpdate(fiber)) {
    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));
  } else
    (throwIfDuringRender = enqueueConcurrentHookUpdate(
      fiber,
      queue,
      action,
      2
    )),
      null !== throwIfDuringRender &&
        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
}
function isRenderPhaseUpdate(fiber) {
  var alternate = fiber.alternate;
  return (
    fiber === currentlyRenderingFiber$1 ||
    (null !== alternate && alternate === currentlyRenderingFiber$1)
  );
}
function enqueueRenderPhaseUpdate(queue, update) {
  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =
    !0;
  var pending = queue.pending;
  null === pending
    ? (update.next = update)
    : ((update.next = pending.next), (pending.next = update));
  queue.pending = update;
}
function entangleTransitionUpdate(root, queue, lane) {
  if (0 !== (lane & 4194176)) {
    var queueLanes = queue.lanes;
    queueLanes &= root.pendingLanes;
    lane |= queueLanes;
    queue.lanes = lane;
    markRootEntangled(root, lane);
  }
}
var ContextOnlyDispatcher = {
  readContext: readContext,
  use: use,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useInsertionEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError,
  useSyncExternalStore: throwInvalidHookError,
  useId: throwInvalidHookError
};
ContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;
ContextOnlyDispatcher.useMemoCache = throwInvalidHookError;
ContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;
ContextOnlyDispatcher.useFormState = throwInvalidHookError;
ContextOnlyDispatcher.useActionState = throwInvalidHookError;
ContextOnlyDispatcher.useOptimistic = throwInvalidHookError;
var HooksDispatcherOnMount = {
  readContext: readContext,
  use: use,
  useCallback: function (callback, deps) {
    mountWorkInProgressHook().memoizedState = [
      callback,
      void 0 === deps ? null : deps
    ];
    return callback;
  },
  useContext: readContext,
  useEffect: mountEffect,
  useImperativeHandle: function (ref, create, deps) {
    deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
    mountEffectImpl(
      4194308,
      4,
      imperativeHandleEffect.bind(null, create, ref),
      deps
    );
  },
  useLayoutEffect: function (create, deps) {
    return mountEffectImpl(4194308, 4, create, deps);
  },
  useInsertionEffect: function (create, deps) {
    mountEffectImpl(4, 2, create, deps);
  },
  useMemo: function (nextCreate, deps) {
    var hook = mountWorkInProgressHook();
    deps = void 0 === deps ? null : deps;
    var nextValue = nextCreate();
    if (shouldDoubleInvokeUserFnsInHooksDEV) {
      setIsStrictModeForDevtools(!0);
      try {
        nextCreate();
      } finally {
        setIsStrictModeForDevtools(!1);
      }
    }
    hook.memoizedState = [nextValue, deps];
    return nextValue;
  },
  useReducer: function (reducer, initialArg, init) {
    var hook = mountWorkInProgressHook();
    if (void 0 !== init) {
      var initialState = init(initialArg);
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(!0);
        try {
          init(initialArg);
        } finally {
          setIsStrictModeForDevtools(!1);
        }
      }
    } else initialState = initialArg;
    hook.memoizedState = hook.baseState = initialState;
    reducer = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: reducer,
      lastRenderedState: initialState
    };
    hook.queue = reducer;
    reducer = reducer.dispatch = dispatchReducerAction.bind(
      null,
      currentlyRenderingFiber$1,
      reducer
    );
    return [hook.memoizedState, reducer];
  },
  useRef: function (initialValue) {
    var hook = mountWorkInProgressHook();
    initialValue = { current: initialValue };
    return (hook.memoizedState = initialValue);
  },
  useState: function (initialState) {
    initialState = mountStateImpl(initialState);
    var queue = initialState.queue,
      dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
    queue.dispatch = dispatch;
    return [initialState.memoizedState, dispatch];
  },
  useDebugValue: mountDebugValue,
  useDeferredValue: function (value, initialValue) {
    var hook = mountWorkInProgressHook();
    return mountDeferredValueImpl(hook, value, initialValue);
  },
  useTransition: function () {
    var stateHook = mountStateImpl(!1);
    stateHook = startTransition.bind(
      null,
      currentlyRenderingFiber$1,
      stateHook.queue,
      !0,
      !1
    );
    mountWorkInProgressHook().memoizedState = stateHook;
    return [!1, stateHook];
  },
  useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
    var fiber = currentlyRenderingFiber$1,
      hook = mountWorkInProgressHook();
    if (isHydrating) {
      if (void 0 === getServerSnapshot)
        throw Error(formatProdErrorMessage(407));
      getServerSnapshot = getServerSnapshot();
    } else {
      getServerSnapshot = getSnapshot();
      if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));
      0 !== (workInProgressRootRenderLanes & 60) ||
        pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
    }
    hook.memoizedState = getServerSnapshot;
    var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };
    hook.queue = inst;
    mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
      subscribe
    ]);
    fiber.flags |= 2048;
    pushEffect(
      9,
      updateStoreInstance.bind(
        null,
        fiber,
        inst,
        getServerSnapshot,
        getSnapshot
      ),
      { destroy: void 0 },
      null
    );
    return getServerSnapshot;
  },
  useId: function () {
    var hook = mountWorkInProgressHook(),
      identifierPrefix = workInProgressRoot.identifierPrefix;
    if (isHydrating) {
      var JSCompiler_inline_result = treeContextOverflow;
      var idWithLeadingBit = treeContextId;
      JSCompiler_inline_result =
        (
          idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))
        ).toString(32) + JSCompiler_inline_result;
      identifierPrefix =
        ":" + identifierPrefix + "R" + JSCompiler_inline_result;
      JSCompiler_inline_result = localIdCounter++;
      0 < JSCompiler_inline_result &&
        (identifierPrefix += "H" + JSCompiler_inline_result.toString(32));
      identifierPrefix += ":";
    } else
      (JSCompiler_inline_result = globalClientIdCounter++),
        (identifierPrefix =
          ":" +
          identifierPrefix +
          "r" +
          JSCompiler_inline_result.toString(32) +
          ":");
    return (hook.memoizedState = identifierPrefix);
  },
  useCacheRefresh: function () {
    return (mountWorkInProgressHook().memoizedState = refreshCache.bind(
      null,
      currentlyRenderingFiber$1
    ));
  }
};
HooksDispatcherOnMount.useMemoCache = useMemoCache;
HooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;
HooksDispatcherOnMount.useFormState = mountActionState;
HooksDispatcherOnMount.useActionState = mountActionState;
HooksDispatcherOnMount.useOptimistic = function (passthrough) {
  var hook = mountWorkInProgressHook();
  hook.memoizedState = hook.baseState = passthrough;
  var queue = {
    pending: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: null,
    lastRenderedState: null
  };
  hook.queue = queue;
  hook = dispatchOptimisticSetState.bind(
    null,
    currentlyRenderingFiber$1,
    !0,
    queue
  );
  queue.dispatch = hook;
  return [passthrough, hook];
};
var HooksDispatcherOnUpdate = {
  readContext: readContext,
  use: use,
  useCallback: updateCallback,
  useContext: readContext,
  useEffect: updateEffect,
  useImperativeHandle: updateImperativeHandle,
  useInsertionEffect: updateInsertionEffect,
  useLayoutEffect: updateLayoutEffect,
  useMemo: updateMemo,
  useReducer: updateReducer,
  useRef: updateRef,
  useState: function () {
    return updateReducer(basicStateReducer);
  },
  useDebugValue: mountDebugValue,
  useDeferredValue: function (value, initialValue) {
    var hook = updateWorkInProgressHook();
    return updateDeferredValueImpl(
      hook,
      currentHook.memoizedState,
      value,
      initialValue
    );
  },
  useTransition: function () {
    var booleanOrThenable = updateReducer(basicStateReducer)[0],
      start = updateWorkInProgressHook().memoizedState;
    return [
      "boolean" === typeof booleanOrThenable
        ? booleanOrThenable
        : useThenable(booleanOrThenable),
      start
    ];
  },
  useSyncExternalStore: updateSyncExternalStore,
  useId: updateId
};
HooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;
HooksDispatcherOnUpdate.useMemoCache = useMemoCache;
HooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;
HooksDispatcherOnUpdate.useFormState = updateActionState;
HooksDispatcherOnUpdate.useActionState = updateActionState;
HooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {
  var hook = updateWorkInProgressHook();
  return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
};
var HooksDispatcherOnRerender = {
  readContext: readContext,
  use: use,
  useCallback: updateCallback,
  useContext: readContext,
  useEffect: updateEffect,
  useImperativeHandle: updateImperativeHandle,
  useInsertionEffect: updateInsertionEffect,
  useLayoutEffect: updateLayoutEffect,
  useMemo: updateMemo,
  useReducer: rerenderReducer,
  useRef: updateRef,
  useState: function () {
    return rerenderReducer(basicStateReducer);
  },
  useDebugValue: mountDebugValue,
  useDeferredValue: function (value, initialValue) {
    var hook = updateWorkInProgressHook();
    return null === currentHook
      ? mountDeferredValueImpl(hook, value, initialValue)
      : updateDeferredValueImpl(
          hook,
          currentHook.memoizedState,
          value,
          initialValue
        );
  },
  useTransition: function () {
    var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
      start = updateWorkInProgressHook().memoizedState;
    return [
      "boolean" === typeof booleanOrThenable
        ? booleanOrThenable
        : useThenable(booleanOrThenable),
      start
    ];
  },
  useSyncExternalStore: updateSyncExternalStore,
  useId: updateId
};
HooksDispatcherOnRerender.useCacheRefresh = updateRefresh;
HooksDispatcherOnRerender.useMemoCache = useMemoCache;
HooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;
HooksDispatcherOnRerender.useFormState = rerenderActionState;
HooksDispatcherOnRerender.useActionState = rerenderActionState;
HooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {
  var hook = updateWorkInProgressHook();
  if (null !== currentHook)
    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
  hook.baseState = passthrough;
  return [passthrough, hook.queue.dispatch];
};
function applyDerivedStateFromProps(
  workInProgress,
  ctor,
  getDerivedStateFromProps,
  nextProps
) {
  ctor = workInProgress.memoizedState;
  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
  getDerivedStateFromProps =
    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps
      ? ctor
      : assign({}, ctor, getDerivedStateFromProps);
  workInProgress.memoizedState = getDerivedStateFromProps;
  0 === workInProgress.lanes &&
    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);
}
var classComponentUpdater = {
  isMounted: function (component) {
    return (component = component._reactInternals)
      ? getNearestMountedFiber(component) === component
      : !1;
  },
  enqueueSetState: function (inst, payload, callback) {
    inst = inst._reactInternals;
    var lane = requestUpdateLane(),
      update = createUpdate(lane);
    update.payload = payload;
    void 0 !== callback && null !== callback && (update.callback = callback);
    payload = enqueueUpdate(inst, update, lane);
    null !== payload &&
      (scheduleUpdateOnFiber(payload, inst, lane),
      entangleTransitions(payload, inst, lane));
  },
  enqueueReplaceState: function (inst, payload, callback) {
    inst = inst._reactInternals;
    var lane = requestUpdateLane(),
      update = createUpdate(lane);
    update.tag = 1;
    update.payload = payload;
    void 0 !== callback && null !== callback && (update.callback = callback);
    payload = enqueueUpdate(inst, update, lane);
    null !== payload &&
      (scheduleUpdateOnFiber(payload, inst, lane),
      entangleTransitions(payload, inst, lane));
  },
  enqueueForceUpdate: function (inst, callback) {
    inst = inst._reactInternals;
    var lane = requestUpdateLane(),
      update = createUpdate(lane);
    update.tag = 2;
    void 0 !== callback && null !== callback && (update.callback = callback);
    callback = enqueueUpdate(inst, update, lane);
    null !== callback &&
      (scheduleUpdateOnFiber(callback, inst, lane),
      entangleTransitions(callback, inst, lane));
  }
};
function checkShouldComponentUpdate(
  workInProgress,
  ctor,
  oldProps,
  newProps,
  oldState,
  newState,
  nextContext
) {
  workInProgress = workInProgress.stateNode;
  return "function" === typeof workInProgress.shouldComponentUpdate
    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)
    : ctor.prototype && ctor.prototype.isPureReactComponent
      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
      : !0;
}
function callComponentWillReceiveProps(
  workInProgress,
  instance,
  newProps,
  nextContext
) {
  workInProgress = instance.state;
  "function" === typeof instance.componentWillReceiveProps &&
    instance.componentWillReceiveProps(newProps, nextContext);
  "function" === typeof instance.UNSAFE_componentWillReceiveProps &&
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  instance.state !== workInProgress &&
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
}
function resolveClassComponentProps(Component, baseProps) {
  var newProps = baseProps;
  if ("ref" in baseProps) {
    newProps = {};
    for (var propName in baseProps)
      "ref" !== propName && (newProps[propName] = baseProps[propName]);
  }
  if ((Component = Component.defaultProps)) {
    newProps === baseProps && (newProps = assign({}, newProps));
    for (var propName$67 in Component)
      void 0 === newProps[propName$67] &&
        (newProps[propName$67] = Component[propName$67]);
  }
  return newProps;
}
var reportGlobalError =
  "function" === typeof reportError
    ? reportError
    : function (error) {
        if (
          "object" === typeof window &&
          "function" === typeof window.ErrorEvent
        ) {
          var event = new window.ErrorEvent("error", {
            bubbles: !0,
            cancelable: !0,
            message:
              "object" === typeof error &&
              null !== error &&
              "string" === typeof error.message
                ? String(error.message)
                : String(error),
            error: error
          });
          if (!window.dispatchEvent(event)) return;
        } else if (
          "object" === typeof process &&
          "function" === typeof process.emit
        ) {
          process.emit("uncaughtException", error);
          return;
        }
        console.error(error);
      };
function defaultOnUncaughtError(error) {
  reportGlobalError(error);
}
function defaultOnCaughtError(error) {
  console.error(error);
}
function defaultOnRecoverableError(error) {
  reportGlobalError(error);
}
function logUncaughtError(root, errorInfo) {
  try {
    var onUncaughtError = root.onUncaughtError;
    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });
  } catch (e$68) {
    setTimeout(function () {
      throw e$68;
    });
  }
}
function logCaughtError(root, boundary, errorInfo) {
  try {
    var onCaughtError = root.onCaughtError;
    onCaughtError(errorInfo.value, {
      componentStack: errorInfo.stack,
      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
    });
  } catch (e$69) {
    setTimeout(function () {
      throw e$69;
    });
  }
}
function createRootErrorUpdate(root, errorInfo, lane) {
  lane = createUpdate(lane);
  lane.tag = 3;
  lane.payload = { element: null };
  lane.callback = function () {
    logUncaughtError(root, errorInfo);
  };
  return lane;
}
function createClassErrorUpdate(lane) {
  lane = createUpdate(lane);
  lane.tag = 3;
  return lane;
}
function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
  if ("function" === typeof getDerivedStateFromError) {
    var error = errorInfo.value;
    update.payload = function () {
      return getDerivedStateFromError(error);
    };
    update.callback = function () {
      logCaughtError(root, fiber, errorInfo);
    };
  }
  var inst = fiber.stateNode;
  null !== inst &&
    "function" === typeof inst.componentDidCatch &&
    (update.callback = function () {
      logCaughtError(root, fiber, errorInfo);
      "function" !== typeof getDerivedStateFromError &&
        (null === legacyErrorBoundariesThatAlreadyFailed
          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))
          : legacyErrorBoundariesThatAlreadyFailed.add(this));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
}
function throwException(
  root,
  returnFiber,
  sourceFiber,
  value,
  rootRenderLanes
) {
  sourceFiber.flags |= 32768;
  if (
    null !== value &&
    "object" === typeof value &&
    "function" === typeof value.then
  ) {
    returnFiber = sourceFiber.alternate;
    null !== returnFiber &&
      propagateParentContextChanges(
        returnFiber,
        sourceFiber,
        rootRenderLanes,
        !0
      );
    sourceFiber = suspenseHandlerStackCursor.current;
    if (null !== sourceFiber) {
      switch (sourceFiber.tag) {
        case 13:
          return (
            null === shellBoundary
              ? renderDidSuspendDelayIfPossible()
              : null === sourceFiber.alternate &&
                0 === workInProgressRootExitStatus &&
                (workInProgressRootExitStatus = 3),
            (sourceFiber.flags &= -257),
            (sourceFiber.flags |= 65536),
            (sourceFiber.lanes = rootRenderLanes),
            value === noopSuspenseyCommitThenable
              ? (sourceFiber.flags |= 16384)
              : ((returnFiber = sourceFiber.updateQueue),
                null === returnFiber
                  ? (sourceFiber.updateQueue = new Set([value]))
                  : returnFiber.add(value),
                attachPingListener(root, value, rootRenderLanes)),
            !1
          );
        case 22:
          return (
            (sourceFiber.flags |= 65536),
            value === noopSuspenseyCommitThenable
              ? (sourceFiber.flags |= 16384)
              : ((returnFiber = sourceFiber.updateQueue),
                null === returnFiber
                  ? ((returnFiber = {
                      transitions: null,
                      markerInstances: null,
                      retryQueue: new Set([value])
                    }),
                    (sourceFiber.updateQueue = returnFiber))
                  : ((sourceFiber = returnFiber.retryQueue),
                    null === sourceFiber
                      ? (returnFiber.retryQueue = new Set([value]))
                      : sourceFiber.add(value)),
                attachPingListener(root, value, rootRenderLanes)),
            !1
          );
      }
      throw Error(formatProdErrorMessage(435, sourceFiber.tag));
    }
    attachPingListener(root, value, rootRenderLanes);
    renderDidSuspendDelayIfPossible();
    return !1;
  }
  if (isHydrating)
    return (
      (returnFiber = suspenseHandlerStackCursor.current),
      null !== returnFiber
        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),
          (returnFiber.flags |= 65536),
          (returnFiber.lanes = rootRenderLanes),
          value !== HydrationMismatchException &&
            ((root = Error(formatProdErrorMessage(422), { cause: value })),
            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))
        : (value !== HydrationMismatchException &&
            ((returnFiber = Error(formatProdErrorMessage(423), {
              cause: value
            })),
            queueHydrationError(
              createCapturedValueAtFiber(returnFiber, sourceFiber)
            )),
          (root = root.current.alternate),
          (root.flags |= 65536),
          (rootRenderLanes &= -rootRenderLanes),
          (root.lanes |= rootRenderLanes),
          (value = createCapturedValueAtFiber(value, sourceFiber)),
          (rootRenderLanes = createRootErrorUpdate(
            root.stateNode,
            value,
            rootRenderLanes
          )),
          enqueueCapturedUpdate(root, rootRenderLanes),
          4 !== workInProgressRootExitStatus &&
            (workInProgressRootExitStatus = 2)),
      !1
    );
  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });
  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);
  null === workInProgressRootConcurrentErrors
    ? (workInProgressRootConcurrentErrors = [wrapperError])
    : workInProgressRootConcurrentErrors.push(wrapperError);
  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);
  if (null === returnFiber) return !0;
  value = createCapturedValueAtFiber(value, sourceFiber);
  sourceFiber = returnFiber;
  do {
    switch (sourceFiber.tag) {
      case 3:
        return (
          (sourceFiber.flags |= 65536),
          (root = rootRenderLanes & -rootRenderLanes),
          (sourceFiber.lanes |= root),
          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),
          enqueueCapturedUpdate(sourceFiber, root),
          !1
        );
      case 1:
        if (
          ((returnFiber = sourceFiber.type),
          (wrapperError = sourceFiber.stateNode),
          0 === (sourceFiber.flags & 128) &&
            ("function" === typeof returnFiber.getDerivedStateFromError ||
              (null !== wrapperError &&
                "function" === typeof wrapperError.componentDidCatch &&
                (null === legacyErrorBoundariesThatAlreadyFailed ||
                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))
        )
          return (
            (sourceFiber.flags |= 65536),
            (rootRenderLanes &= -rootRenderLanes),
            (sourceFiber.lanes |= rootRenderLanes),
            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),
            initializeClassErrorUpdate(
              rootRenderLanes,
              root,
              sourceFiber,
              value
            ),
            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),
            !1
          );
    }
    sourceFiber = sourceFiber.return;
  } while (null !== sourceFiber);
  return !1;
}
var SelectiveHydrationException = Error(formatProdErrorMessage(461)),
  didReceiveUpdate = !1;
function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
  workInProgress.child =
    null === current
      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)
      : reconcileChildFibers(
          workInProgress,
          current.child,
          nextChildren,
          renderLanes
        );
}
function updateForwardRef(
  current,
  workInProgress,
  Component,
  nextProps,
  renderLanes
) {
  Component = Component.render;
  var ref = workInProgress.ref;
  if ("ref" in nextProps) {
    var propsWithoutRef = {};
    for (var key in nextProps)
      "ref" !== key && (propsWithoutRef[key] = nextProps[key]);
  } else propsWithoutRef = nextProps;
  prepareToReadContext(workInProgress);
  nextProps = renderWithHooks(
    current,
    workInProgress,
    Component,
    propsWithoutRef,
    ref,
    renderLanes
  );
  key = checkDidRenderIdHook();
  if (null !== current && !didReceiveUpdate)
    return (
      bailoutHooks(current, workInProgress, renderLanes),
      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
    );
  isHydrating && key && pushMaterializedTreeId(workInProgress);
  workInProgress.flags |= 1;
  reconcileChildren(current, workInProgress, nextProps, renderLanes);
  return workInProgress.child;
}
function updateMemoComponent(
  current,
  workInProgress,
  Component,
  nextProps,
  renderLanes
) {
  if (null === current) {
    var type = Component.type;
    if (
      "function" === typeof type &&
      !shouldConstruct(type) &&
      void 0 === type.defaultProps &&
      null === Component.compare
    )
      return (
        (workInProgress.tag = 15),
        (workInProgress.type = type),
        updateSimpleMemoComponent(
          current,
          workInProgress,
          type,
          nextProps,
          renderLanes
        )
      );
    current = createFiberFromTypeAndProps(
      Component.type,
      null,
      nextProps,
      workInProgress,
      workInProgress.mode,
      renderLanes
    );
    current.ref = workInProgress.ref;
    current.return = workInProgress;
    return (workInProgress.child = current);
  }
  type = current.child;
  if (!checkScheduledUpdateOrContext(current, renderLanes)) {
    var prevProps = type.memoizedProps;
    Component = Component.compare;
    Component = null !== Component ? Component : shallowEqual;
    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }
  workInProgress.flags |= 1;
  current = createWorkInProgress(type, nextProps);
  current.ref = workInProgress.ref;
  current.return = workInProgress;
  return (workInProgress.child = current);
}
function updateSimpleMemoComponent(
  current,
  workInProgress,
  Component,
  nextProps,
  renderLanes
) {
  if (null !== current) {
    var prevProps = current.memoizedProps;
    if (
      shallowEqual(prevProps, nextProps) &&
      current.ref === workInProgress.ref
    )
      if (
        ((didReceiveUpdate = !1),
        (workInProgress.pendingProps = nextProps = prevProps),
        checkScheduledUpdateOrContext(current, renderLanes))
      )
        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
      else
        return (
          (workInProgress.lanes = current.lanes),
          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
        );
  }
  return updateFunctionComponent(
    current,
    workInProgress,
    Component,
    nextProps,
    renderLanes
  );
}
function updateOffscreenComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps,
    nextChildren = nextProps.children,
    nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),
    prevState = null !== current ? current.memoizedState : null;
  markRef(current, workInProgress);
  if ("hidden" === nextProps.mode || nextIsDetached) {
    if (0 !== (workInProgress.flags & 128)) {
      nextProps =
        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
      if (null !== current) {
        nextChildren = workInProgress.child = current.child;
        for (nextIsDetached = 0; null !== nextChildren; )
          (nextIsDetached =
            nextIsDetached | nextChildren.lanes | nextChildren.childLanes),
            (nextChildren = nextChildren.sibling);
        workInProgress.childLanes = nextIsDetached & ~nextProps;
      } else (workInProgress.childLanes = 0), (workInProgress.child = null);
      return deferHiddenOffscreenComponent(
        current,
        workInProgress,
        nextProps,
        renderLanes
      );
    }
    if (0 !== (renderLanes & 536870912))
      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),
        null !== current &&
          pushTransition(
            workInProgress,
            null !== prevState ? prevState.cachePool : null
          ),
        null !== prevState
          ? pushHiddenContext(workInProgress, prevState)
          : reuseHiddenContextOnStack(),
        pushOffscreenSuspenseHandler(workInProgress);
    else
      return (
        (workInProgress.lanes = workInProgress.childLanes = 536870912),
        deferHiddenOffscreenComponent(
          current,
          workInProgress,
          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,
          renderLanes
        )
      );
  } else
    null !== prevState
      ? (pushTransition(workInProgress, prevState.cachePool),
        pushHiddenContext(workInProgress, prevState),
        reuseSuspenseHandlerOnStack(workInProgress),
        (workInProgress.memoizedState = null))
      : (null !== current && pushTransition(workInProgress, null),
        reuseHiddenContextOnStack(),
        reuseSuspenseHandlerOnStack(workInProgress));
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}
function deferHiddenOffscreenComponent(
  current,
  workInProgress,
  nextBaseLanes,
  renderLanes
) {
  var JSCompiler_inline_result = peekCacheFromPool();
  JSCompiler_inline_result =
    null === JSCompiler_inline_result
      ? null
      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };
  workInProgress.memoizedState = {
    baseLanes: nextBaseLanes,
    cachePool: JSCompiler_inline_result
  };
  null !== current && pushTransition(workInProgress, null);
  reuseHiddenContextOnStack();
  pushOffscreenSuspenseHandler(workInProgress);
  null !== current &&
    propagateParentContextChanges(current, workInProgress, renderLanes, !0);
  return null;
}
function markRef(current, workInProgress) {
  var ref = workInProgress.ref;
  if (null === ref)
    null !== current &&
      null !== current.ref &&
      (workInProgress.flags |= 2097664);
  else {
    if ("function" !== typeof ref && "object" !== typeof ref)
      throw Error(formatProdErrorMessage(284));
    if (null === current || current.ref !== ref)
      workInProgress.flags |= 2097664;
  }
}
function updateFunctionComponent(
  current,
  workInProgress,
  Component,
  nextProps,
  renderLanes
) {
  prepareToReadContext(workInProgress);
  Component = renderWithHooks(
    current,
    workInProgress,
    Component,
    nextProps,
    void 0,
    renderLanes
  );
  nextProps = checkDidRenderIdHook();
  if (null !== current && !didReceiveUpdate)
    return (
      bailoutHooks(current, workInProgress, renderLanes),
      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
    );
  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
  workInProgress.flags |= 1;
  reconcileChildren(current, workInProgress, Component, renderLanes);
  return workInProgress.child;
}
function replayFunctionComponent(
  current,
  workInProgress,
  nextProps,
  Component,
  secondArg,
  renderLanes
) {
  prepareToReadContext(workInProgress);
  workInProgress.updateQueue = null;
  nextProps = renderWithHooksAgain(
    workInProgress,
    Component,
    nextProps,
    secondArg
  );
  finishRenderingHooks(current);
  Component = checkDidRenderIdHook();
  if (null !== current && !didReceiveUpdate)
    return (
      bailoutHooks(current, workInProgress, renderLanes),
      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
    );
  isHydrating && Component && pushMaterializedTreeId(workInProgress);
  workInProgress.flags |= 1;
  reconcileChildren(current, workInProgress, nextProps, renderLanes);
  return workInProgress.child;
}
function updateClassComponent(
  current,
  workInProgress,
  Component,
  nextProps,
  renderLanes
) {
  prepareToReadContext(workInProgress);
  if (null === workInProgress.stateNode) {
    var context = emptyContextObject,
      contextType = Component.contextType;
    "object" === typeof contextType &&
      null !== contextType &&
      (context = readContext(contextType));
    context = new Component(nextProps, context);
    workInProgress.memoizedState =
      null !== context.state && void 0 !== context.state ? context.state : null;
    context.updater = classComponentUpdater;
    workInProgress.stateNode = context;
    context._reactInternals = workInProgress;
    context = workInProgress.stateNode;
    context.props = nextProps;
    context.state = workInProgress.memoizedState;
    context.refs = {};
    initializeUpdateQueue(workInProgress);
    contextType = Component.contextType;
    context.context =
      "object" === typeof contextType && null !== contextType
        ? readContext(contextType)
        : emptyContextObject;
    context.state = workInProgress.memoizedState;
    contextType = Component.getDerivedStateFromProps;
    "function" === typeof contextType &&
      (applyDerivedStateFromProps(
        workInProgress,
        Component,
        contextType,
        nextProps
      ),
      (context.state = workInProgress.memoizedState));
    "function" === typeof Component.getDerivedStateFromProps ||
      "function" === typeof context.getSnapshotBeforeUpdate ||
      ("function" !== typeof context.UNSAFE_componentWillMount &&
        "function" !== typeof context.componentWillMount) ||
      ((contextType = context.state),
      "function" === typeof context.componentWillMount &&
        context.componentWillMount(),
      "function" === typeof context.UNSAFE_componentWillMount &&
        context.UNSAFE_componentWillMount(),
      contextType !== context.state &&
        classComponentUpdater.enqueueReplaceState(context, context.state, null),
      processUpdateQueue(workInProgress, nextProps, context, renderLanes),
      suspendIfUpdateReadFromEntangledAsyncAction(),
      (context.state = workInProgress.memoizedState));
    "function" === typeof context.componentDidMount &&
      (workInProgress.flags |= 4194308);
    nextProps = !0;
  } else if (null === current) {
    context = workInProgress.stateNode;
    var unresolvedOldProps = workInProgress.memoizedProps,
      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);
    context.props = oldProps;
    var oldContext = context.context,
      contextType$jscomp$0 = Component.contextType;
    contextType = emptyContextObject;
    "object" === typeof contextType$jscomp$0 &&
      null !== contextType$jscomp$0 &&
      (contextType = readContext(contextType$jscomp$0));
    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    contextType$jscomp$0 =
      "function" === typeof getDerivedStateFromProps ||
      "function" === typeof context.getSnapshotBeforeUpdate;
    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
    contextType$jscomp$0 ||
      ("function" !== typeof context.UNSAFE_componentWillReceiveProps &&
        "function" !== typeof context.componentWillReceiveProps) ||
      ((unresolvedOldProps || oldContext !== contextType) &&
        callComponentWillReceiveProps(
          workInProgress,
          context,
          nextProps,
          contextType
        ));
    hasForceUpdate = !1;
    var oldState = workInProgress.memoizedState;
    context.state = oldState;
    processUpdateQueue(workInProgress, nextProps, context, renderLanes);
    suspendIfUpdateReadFromEntangledAsyncAction();
    oldContext = workInProgress.memoizedState;
    unresolvedOldProps || oldState !== oldContext || hasForceUpdate
      ? ("function" === typeof getDerivedStateFromProps &&
          (applyDerivedStateFromProps(
            workInProgress,
            Component,
            getDerivedStateFromProps,
            nextProps
          ),
          (oldContext = workInProgress.memoizedState)),
        (oldProps =
          hasForceUpdate ||
          checkShouldComponentUpdate(
            workInProgress,
            Component,
            oldProps,
            nextProps,
            oldState,
            oldContext,
            contextType
          ))
          ? (contextType$jscomp$0 ||
              ("function" !== typeof context.UNSAFE_componentWillMount &&
                "function" !== typeof context.componentWillMount) ||
              ("function" === typeof context.componentWillMount &&
                context.componentWillMount(),
              "function" === typeof context.UNSAFE_componentWillMount &&
                context.UNSAFE_componentWillMount()),
            "function" === typeof context.componentDidMount &&
              (workInProgress.flags |= 4194308))
          : ("function" === typeof context.componentDidMount &&
              (workInProgress.flags |= 4194308),
            (workInProgress.memoizedProps = nextProps),
            (workInProgress.memoizedState = oldContext)),
        (context.props = nextProps),
        (context.state = oldContext),
        (context.context = contextType),
        (nextProps = oldProps))
      : ("function" === typeof context.componentDidMount &&
          (workInProgress.flags |= 4194308),
        (nextProps = !1));
  } else {
    context = workInProgress.stateNode;
    cloneUpdateQueue(current, workInProgress);
    contextType = workInProgress.memoizedProps;
    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);
    context.props = contextType$jscomp$0;
    getDerivedStateFromProps = workInProgress.pendingProps;
    oldState = context.context;
    oldContext = Component.contextType;
    oldProps = emptyContextObject;
    "object" === typeof oldContext &&
      null !== oldContext &&
      (oldProps = readContext(oldContext));
    unresolvedOldProps = Component.getDerivedStateFromProps;
    (oldContext =
      "function" === typeof unresolvedOldProps ||
      "function" === typeof context.getSnapshotBeforeUpdate) ||
      ("function" !== typeof context.UNSAFE_componentWillReceiveProps &&
        "function" !== typeof context.componentWillReceiveProps) ||
      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&
        callComponentWillReceiveProps(
          workInProgress,
          context,
          nextProps,
          oldProps
        ));
    hasForceUpdate = !1;
    oldState = workInProgress.memoizedState;
    context.state = oldState;
    processUpdateQueue(workInProgress, nextProps, context, renderLanes);
    suspendIfUpdateReadFromEntangledAsyncAction();
    var newState = workInProgress.memoizedState;
    contextType !== getDerivedStateFromProps ||
    oldState !== newState ||
    hasForceUpdate ||
    (null !== current &&
      null !== current.dependencies &&
      checkIfContextChanged(current.dependencies))
      ? ("function" === typeof unresolvedOldProps &&
          (applyDerivedStateFromProps(
            workInProgress,
            Component,
            unresolvedOldProps,
            nextProps
          ),
          (newState = workInProgress.memoizedState)),
        (contextType$jscomp$0 =
          hasForceUpdate ||
          checkShouldComponentUpdate(
            workInProgress,
            Component,
            contextType$jscomp$0,
            nextProps,
            oldState,
            newState,
            oldProps
          ) ||
          (null !== current &&
            null !== current.dependencies &&
            checkIfContextChanged(current.dependencies)))
          ? (oldContext ||
              ("function" !== typeof context.UNSAFE_componentWillUpdate &&
                "function" !== typeof context.componentWillUpdate) ||
              ("function" === typeof context.componentWillUpdate &&
                context.componentWillUpdate(nextProps, newState, oldProps),
              "function" === typeof context.UNSAFE_componentWillUpdate &&
                context.UNSAFE_componentWillUpdate(
                  nextProps,
                  newState,
                  oldProps
                )),
            "function" === typeof context.componentDidUpdate &&
              (workInProgress.flags |= 4),
            "function" === typeof context.getSnapshotBeforeUpdate &&
              (workInProgress.flags |= 1024))
          : ("function" !== typeof context.componentDidUpdate ||
              (contextType === current.memoizedProps &&
                oldState === current.memoizedState) ||
              (workInProgress.flags |= 4),
            "function" !== typeof context.getSnapshotBeforeUpdate ||
              (contextType === current.memoizedProps &&
                oldState === current.memoizedState) ||
              (workInProgress.flags |= 1024),
            (workInProgress.memoizedProps = nextProps),
            (workInProgress.memoizedState = newState)),
        (context.props = nextProps),
        (context.state = newState),
        (context.context = oldProps),
        (nextProps = contextType$jscomp$0))
      : ("function" !== typeof context.componentDidUpdate ||
          (contextType === current.memoizedProps &&
            oldState === current.memoizedState) ||
          (workInProgress.flags |= 4),
        "function" !== typeof context.getSnapshotBeforeUpdate ||
          (contextType === current.memoizedProps &&
            oldState === current.memoizedState) ||
          (workInProgress.flags |= 1024),
        (nextProps = !1));
  }
  context = nextProps;
  markRef(current, workInProgress);
  nextProps = 0 !== (workInProgress.flags & 128);
  context || nextProps
    ? ((context = workInProgress.stateNode),
      (Component =
        nextProps && "function" !== typeof Component.getDerivedStateFromError
          ? null
          : context.render()),
      (workInProgress.flags |= 1),
      null !== current && nextProps
        ? ((workInProgress.child = reconcileChildFibers(
            workInProgress,
            current.child,
            null,
            renderLanes
          )),
          (workInProgress.child = reconcileChildFibers(
            workInProgress,
            null,
            Component,
            renderLanes
          )))
        : reconcileChildren(current, workInProgress, Component, renderLanes),
      (workInProgress.memoizedState = context.state),
      (current = workInProgress.child))
    : (current = bailoutOnAlreadyFinishedWork(
        current,
        workInProgress,
        renderLanes
      ));
  return current;
}
function mountHostRootWithoutHydrating(
  current,
  workInProgress,
  nextChildren,
  renderLanes
) {
  resetHydrationState();
  workInProgress.flags |= 256;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}
var SUSPENDED_MARKER = { dehydrated: null, treeContext: null, retryLane: 0 };
function mountSuspenseOffscreenState(renderLanes) {
  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };
}
function getRemainingWorkInPrimaryTree(
  current,
  primaryTreeDidDefer,
  renderLanes
) {
  current = null !== current ? current.childLanes & ~renderLanes : 0;
  primaryTreeDidDefer && (current |= workInProgressDeferredLane);
  return current;
}
function updateSuspenseComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps,
    showFallback = !1,
    didSuspend = 0 !== (workInProgress.flags & 128),
    JSCompiler_temp;
  (JSCompiler_temp = didSuspend) ||
    (JSCompiler_temp =
      null !== current && null === current.memoizedState
        ? !1
        : 0 !== (suspenseStackCursor.current & 2));
  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));
  JSCompiler_temp = 0 !== (workInProgress.flags & 32);
  workInProgress.flags &= -33;
  if (null === current) {
    if (isHydrating) {
      showFallback
        ? pushPrimaryTreeSuspenseHandler(workInProgress)
        : reuseSuspenseHandlerOnStack(workInProgress);
      if (isHydrating) {
        var nextInstance = nextHydratableInstance,
          JSCompiler_temp$jscomp$0;
        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {
          c: {
            JSCompiler_temp$jscomp$0 = nextInstance;
            for (
              nextInstance = rootOrSingletonContext;
              8 !== JSCompiler_temp$jscomp$0.nodeType;

            ) {
              if (!nextInstance) {
                nextInstance = null;
                break c;
              }
              JSCompiler_temp$jscomp$0 = getNextHydratable(
                JSCompiler_temp$jscomp$0.nextSibling
              );
              if (null === JSCompiler_temp$jscomp$0) {
                nextInstance = null;
                break c;
              }
            }
            nextInstance = JSCompiler_temp$jscomp$0;
          }
          null !== nextInstance
            ? ((workInProgress.memoizedState = {
                dehydrated: nextInstance,
                treeContext:
                  null !== treeContextProvider
                    ? { id: treeContextId, overflow: treeContextOverflow }
                    : null,
                retryLane: 536870912
              }),
              (JSCompiler_temp$jscomp$0 = createFiberImplClass(
                18,
                null,
                null,
                0
              )),
              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),
              (JSCompiler_temp$jscomp$0.return = workInProgress),
              (workInProgress.child = JSCompiler_temp$jscomp$0),
              (hydrationParentFiber = workInProgress),
              (nextHydratableInstance = null),
              (JSCompiler_temp$jscomp$0 = !0))
            : (JSCompiler_temp$jscomp$0 = !1);
        }
        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);
      }
      nextInstance = workInProgress.memoizedState;
      if (
        null !== nextInstance &&
        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)
      )
        return (
          "$!" === nextInstance.data
            ? (workInProgress.lanes = 16)
            : (workInProgress.lanes = 536870912),
          null
        );
      popSuspenseHandler(workInProgress);
    }
    nextInstance = nextProps.children;
    nextProps = nextProps.fallback;
    if (showFallback)
      return (
        reuseSuspenseHandlerOnStack(workInProgress),
        (showFallback = workInProgress.mode),
        (nextInstance = mountWorkInProgressOffscreenFiber(
          { mode: "hidden", children: nextInstance },
          showFallback
        )),
        (nextProps = createFiberFromFragment(
          nextProps,
          showFallback,
          renderLanes,
          null
        )),
        (nextInstance.return = workInProgress),
        (nextProps.return = workInProgress),
        (nextInstance.sibling = nextProps),
        (workInProgress.child = nextInstance),
        (showFallback = workInProgress.child),
        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),
        (showFallback.childLanes = getRemainingWorkInPrimaryTree(
          current,
          JSCompiler_temp,
          renderLanes
        )),
        (workInProgress.memoizedState = SUSPENDED_MARKER),
        nextProps
      );
    pushPrimaryTreeSuspenseHandler(workInProgress);
    return mountSuspensePrimaryChildren(workInProgress, nextInstance);
  }
  JSCompiler_temp$jscomp$0 = current.memoizedState;
  if (
    null !== JSCompiler_temp$jscomp$0 &&
    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),
    null !== nextInstance)
  ) {
    if (didSuspend)
      workInProgress.flags & 256
        ? (pushPrimaryTreeSuspenseHandler(workInProgress),
          (workInProgress.flags &= -257),
          (workInProgress = retrySuspenseComponentWithoutHydrating(
            current,
            workInProgress,
            renderLanes
          )))
        : null !== workInProgress.memoizedState
          ? (reuseSuspenseHandlerOnStack(workInProgress),
            (workInProgress.child = current.child),
            (workInProgress.flags |= 128),
            (workInProgress = null))
          : (reuseSuspenseHandlerOnStack(workInProgress),
            (showFallback = nextProps.fallback),
            (nextInstance = workInProgress.mode),
            (nextProps = mountWorkInProgressOffscreenFiber(
              { mode: "visible", children: nextProps.children },
              nextInstance
            )),
            (showFallback = createFiberFromFragment(
              showFallback,
              nextInstance,
              renderLanes,
              null
            )),
            (showFallback.flags |= 2),
            (nextProps.return = workInProgress),
            (showFallback.return = workInProgress),
            (nextProps.sibling = showFallback),
            (workInProgress.child = nextProps),
            reconcileChildFibers(
              workInProgress,
              current.child,
              null,
              renderLanes
            ),
            (nextProps = workInProgress.child),
            (nextProps.memoizedState =
              mountSuspenseOffscreenState(renderLanes)),
            (nextProps.childLanes = getRemainingWorkInPrimaryTree(
              current,
              JSCompiler_temp,
              renderLanes
            )),
            (workInProgress.memoizedState = SUSPENDED_MARKER),
            (workInProgress = showFallback));
    else if (
      (pushPrimaryTreeSuspenseHandler(workInProgress),
      "$!" === nextInstance.data)
    ) {
      JSCompiler_temp =
        nextInstance.nextSibling && nextInstance.nextSibling.dataset;
      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;
      JSCompiler_temp = digest;
      nextProps = Error(formatProdErrorMessage(419));
      nextProps.stack = "";
      nextProps.digest = JSCompiler_temp;
      queueHydrationError({ value: nextProps, source: null, stack: null });
      workInProgress = retrySuspenseComponentWithoutHydrating(
        current,
        workInProgress,
        renderLanes
      );
    } else if (
      (didReceiveUpdate ||
        propagateParentContextChanges(current, workInProgress, renderLanes, !1),
      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),
      didReceiveUpdate || JSCompiler_temp)
    ) {
      JSCompiler_temp = workInProgressRoot;
      if (null !== JSCompiler_temp) {
        nextProps = renderLanes & -renderLanes;
        if (0 !== (nextProps & 42)) nextProps = 1;
        else
          switch (nextProps) {
            case 2:
              nextProps = 1;
              break;
            case 8:
              nextProps = 4;
              break;
            case 32:
              nextProps = 16;
              break;
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
              nextProps = 64;
              break;
            case 268435456:
              nextProps = 134217728;
              break;
            default:
              nextProps = 0;
          }
        nextProps =
          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))
            ? 0
            : nextProps;
        if (0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)
          throw (
            ((JSCompiler_temp$jscomp$0.retryLane = nextProps),
            enqueueConcurrentRenderForLane(current, nextProps),
            scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),
            SelectiveHydrationException)
          );
      }
      "$?" === nextInstance.data || renderDidSuspendDelayIfPossible();
      workInProgress = retrySuspenseComponentWithoutHydrating(
        current,
        workInProgress,
        renderLanes
      );
    } else
      "$?" === nextInstance.data
        ? ((workInProgress.flags |= 128),
          (workInProgress.child = current.child),
          (workInProgress = retryDehydratedSuspenseBoundary.bind(
            null,
            current
          )),
          (nextInstance._reactRetry = workInProgress),
          (workInProgress = null))
        : ((current = JSCompiler_temp$jscomp$0.treeContext),
          (nextHydratableInstance = getNextHydratable(
            nextInstance.nextSibling
          )),
          (hydrationParentFiber = workInProgress),
          (isHydrating = !0),
          (hydrationErrors = null),
          (rootOrSingletonContext = !1),
          null !== current &&
            ((idStack[idStackIndex++] = treeContextId),
            (idStack[idStackIndex++] = treeContextOverflow),
            (idStack[idStackIndex++] = treeContextProvider),
            (treeContextId = current.id),
            (treeContextOverflow = current.overflow),
            (treeContextProvider = workInProgress)),
          (workInProgress = mountSuspensePrimaryChildren(
            workInProgress,
            nextProps.children
          )),
          (workInProgress.flags |= 4096));
    return workInProgress;
  }
  if (showFallback)
    return (
      reuseSuspenseHandlerOnStack(workInProgress),
      (showFallback = nextProps.fallback),
      (nextInstance = workInProgress.mode),
      (JSCompiler_temp$jscomp$0 = current.child),
      (digest = JSCompiler_temp$jscomp$0.sibling),
      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {
        mode: "hidden",
        children: nextProps.children
      })),
      (nextProps.subtreeFlags =
        JSCompiler_temp$jscomp$0.subtreeFlags & 31457280),
      null !== digest
        ? (showFallback = createWorkInProgress(digest, showFallback))
        : ((showFallback = createFiberFromFragment(
            showFallback,
            nextInstance,
            renderLanes,
            null
          )),
          (showFallback.flags |= 2)),
      (showFallback.return = workInProgress),
      (nextProps.return = workInProgress),
      (nextProps.sibling = showFallback),
      (workInProgress.child = nextProps),
      (nextProps = showFallback),
      (showFallback = workInProgress.child),
      (nextInstance = current.child.memoizedState),
      null === nextInstance
        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))
        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),
          null !== JSCompiler_temp$jscomp$0
            ? ((digest = CacheContext._currentValue),
              (JSCompiler_temp$jscomp$0 =
                JSCompiler_temp$jscomp$0.parent !== digest
                  ? { parent: digest, pool: digest }
                  : JSCompiler_temp$jscomp$0))
            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),
          (nextInstance = {
            baseLanes: nextInstance.baseLanes | renderLanes,
            cachePool: JSCompiler_temp$jscomp$0
          })),
      (showFallback.memoizedState = nextInstance),
      (showFallback.childLanes = getRemainingWorkInPrimaryTree(
        current,
        JSCompiler_temp,
        renderLanes
      )),
      (workInProgress.memoizedState = SUSPENDED_MARKER),
      nextProps
    );
  pushPrimaryTreeSuspenseHandler(workInProgress);
  renderLanes = current.child;
  current = renderLanes.sibling;
  renderLanes = createWorkInProgress(renderLanes, {
    mode: "visible",
    children: nextProps.children
  });
  renderLanes.return = workInProgress;
  renderLanes.sibling = null;
  null !== current &&
    ((JSCompiler_temp = workInProgress.deletions),
    null === JSCompiler_temp
      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))
      : JSCompiler_temp.push(current));
  workInProgress.child = renderLanes;
  workInProgress.memoizedState = null;
  return renderLanes;
}
function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
  primaryChildren = mountWorkInProgressOffscreenFiber(
    { mode: "visible", children: primaryChildren },
    workInProgress.mode
  );
  primaryChildren.return = workInProgress;
  return (workInProgress.child = primaryChildren);
}
function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
  return createFiberFromOffscreen(offscreenProps, mode, 0, null);
}
function retrySuspenseComponentWithoutHydrating(
  current,
  workInProgress,
  renderLanes
) {
  reconcileChildFibers(workInProgress, current.child, null, renderLanes);
  current = mountSuspensePrimaryChildren(
    workInProgress,
    workInProgress.pendingProps.children
  );
  current.flags |= 2;
  workInProgress.memoizedState = null;
  return current;
}
function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
  fiber.lanes |= renderLanes;
  var alternate = fiber.alternate;
  null !== alternate && (alternate.lanes |= renderLanes);
  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
}
function initSuspenseListRenderState(
  workInProgress,
  isBackwards,
  tail,
  lastContentRow,
  tailMode
) {
  var renderState = workInProgress.memoizedState;
  null === renderState
    ? (workInProgress.memoizedState = {
        isBackwards: isBackwards,
        rendering: null,
        renderingStartTime: 0,
        last: lastContentRow,
        tail: tail,
        tailMode: tailMode
      })
    : ((renderState.isBackwards = isBackwards),
      (renderState.rendering = null),
      (renderState.renderingStartTime = 0),
      (renderState.last = lastContentRow),
      (renderState.tail = tail),
      (renderState.tailMode = tailMode));
}
function updateSuspenseListComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps,
    revealOrder = nextProps.revealOrder,
    tailMode = nextProps.tail;
  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);
  nextProps = suspenseStackCursor.current;
  if (0 !== (nextProps & 2))
    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);
  else {
    if (null !== current && 0 !== (current.flags & 128))
      a: for (current = workInProgress.child; null !== current; ) {
        if (13 === current.tag)
          null !== current.memoizedState &&
            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
        else if (19 === current.tag)
          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
        else if (null !== current.child) {
          current.child.return = current;
          current = current.child;
          continue;
        }
        if (current === workInProgress) break a;
        for (; null === current.sibling; ) {
          if (null === current.return || current.return === workInProgress)
            break a;
          current = current.return;
        }
        current.sibling.return = current.return;
        current = current.sibling;
      }
    nextProps &= 1;
  }
  push(suspenseStackCursor, nextProps);
  switch (revealOrder) {
    case "forwards":
      renderLanes = workInProgress.child;
      for (revealOrder = null; null !== renderLanes; )
        (current = renderLanes.alternate),
          null !== current &&
            null === findFirstSuspended(current) &&
            (revealOrder = renderLanes),
          (renderLanes = renderLanes.sibling);
      renderLanes = revealOrder;
      null === renderLanes
        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))
        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));
      initSuspenseListRenderState(
        workInProgress,
        !1,
        revealOrder,
        renderLanes,
        tailMode
      );
      break;
    case "backwards":
      renderLanes = null;
      revealOrder = workInProgress.child;
      for (workInProgress.child = null; null !== revealOrder; ) {
        current = revealOrder.alternate;
        if (null !== current && null === findFirstSuspended(current)) {
          workInProgress.child = revealOrder;
          break;
        }
        current = revealOrder.sibling;
        revealOrder.sibling = renderLanes;
        renderLanes = revealOrder;
        revealOrder = current;
      }
      initSuspenseListRenderState(
        workInProgress,
        !0,
        renderLanes,
        null,
        tailMode
      );
      break;
    case "together":
      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);
      break;
    default:
      workInProgress.memoizedState = null;
  }
  return workInProgress.child;
}
function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
  null !== current && (workInProgress.dependencies = current.dependencies);
  workInProgressRootSkippedLanes |= workInProgress.lanes;
  if (0 === (renderLanes & workInProgress.childLanes))
    if (null !== current) {
      if (
        (propagateParentContextChanges(
          current,
          workInProgress,
          renderLanes,
          !1
        ),
        0 === (renderLanes & workInProgress.childLanes))
      )
        return null;
    } else return null;
  if (null !== current && workInProgress.child !== current.child)
    throw Error(formatProdErrorMessage(153));
  if (null !== workInProgress.child) {
    current = workInProgress.child;
    renderLanes = createWorkInProgress(current, current.pendingProps);
    workInProgress.child = renderLanes;
    for (renderLanes.return = workInProgress; null !== current.sibling; )
      (current = current.sibling),
        (renderLanes = renderLanes.sibling =
          createWorkInProgress(current, current.pendingProps)),
        (renderLanes.return = workInProgress);
    renderLanes.sibling = null;
  }
  return workInProgress.child;
}
function checkScheduledUpdateOrContext(current, renderLanes) {
  if (0 !== (current.lanes & renderLanes)) return !0;
  current = current.dependencies;
  return null !== current && checkIfContextChanged(current) ? !0 : !1;
}
function attemptEarlyBailoutIfNoScheduledUpdate(
  current,
  workInProgress,
  renderLanes
) {
  switch (workInProgress.tag) {
    case 3:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
      resetHydrationState();
      break;
    case 27:
    case 5:
      pushHostContext(workInProgress);
      break;
    case 4:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;
    case 10:
      pushProvider(
        workInProgress,
        workInProgress.type,
        workInProgress.memoizedProps.value
      );
      break;
    case 13:
      var state = workInProgress.memoizedState;
      if (null !== state) {
        if (null !== state.dehydrated)
          return (
            pushPrimaryTreeSuspenseHandler(workInProgress),
            (workInProgress.flags |= 128),
            null
          );
        if (0 !== (renderLanes & workInProgress.child.childLanes))
          return updateSuspenseComponent(current, workInProgress, renderLanes);
        pushPrimaryTreeSuspenseHandler(workInProgress);
        current = bailoutOnAlreadyFinishedWork(
          current,
          workInProgress,
          renderLanes
        );
        return null !== current ? current.sibling : null;
      }
      pushPrimaryTreeSuspenseHandler(workInProgress);
      break;
    case 19:
      var didSuspendBefore = 0 !== (current.flags & 128);
      state = 0 !== (renderLanes & workInProgress.childLanes);
      state ||
        (propagateParentContextChanges(
          current,
          workInProgress,
          renderLanes,
          !1
        ),
        (state = 0 !== (renderLanes & workInProgress.childLanes)));
      if (didSuspendBefore) {
        if (state)
          return updateSuspenseListComponent(
            current,
            workInProgress,
            renderLanes
          );
        workInProgress.flags |= 128;
      }
      didSuspendBefore = workInProgress.memoizedState;
      null !== didSuspendBefore &&
        ((didSuspendBefore.rendering = null),
        (didSuspendBefore.tail = null),
        (didSuspendBefore.lastEffect = null));
      push(suspenseStackCursor, suspenseStackCursor.current);
      if (state) break;
      else return null;
    case 22:
    case 23:
      return (
        (workInProgress.lanes = 0),
        updateOffscreenComponent(current, workInProgress, renderLanes)
      );
    case 24:
      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
  }
  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
}
function beginWork(current, workInProgress, renderLanes) {
  if (null !== current)
    if (current.memoizedProps !== workInProgress.pendingProps)
      didReceiveUpdate = !0;
    else {
      if (
        !checkScheduledUpdateOrContext(current, renderLanes) &&
        0 === (workInProgress.flags & 128)
      )
        return (
          (didReceiveUpdate = !1),
          attemptEarlyBailoutIfNoScheduledUpdate(
            current,
            workInProgress,
            renderLanes
          )
        );
      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
    }
  else
    (didReceiveUpdate = !1),
      isHydrating &&
        0 !== (workInProgress.flags & 1048576) &&
        pushTreeId(workInProgress, treeForkCount, workInProgress.index);
  workInProgress.lanes = 0;
  switch (workInProgress.tag) {
    case 16:
      a: {
        current = workInProgress.pendingProps;
        var lazyComponent = workInProgress.elementType,
          init = lazyComponent._init;
        lazyComponent = init(lazyComponent._payload);
        workInProgress.type = lazyComponent;
        if ("function" === typeof lazyComponent)
          shouldConstruct(lazyComponent)
            ? ((current = resolveClassComponentProps(lazyComponent, current)),
              (workInProgress.tag = 1),
              (workInProgress = updateClassComponent(
                null,
                workInProgress,
                lazyComponent,
                current,
                renderLanes
              )))
            : ((workInProgress.tag = 0),
              (workInProgress = updateFunctionComponent(
                null,
                workInProgress,
                lazyComponent,
                current,
                renderLanes
              )));
        else {
          if (void 0 !== lazyComponent && null !== lazyComponent)
            if (
              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)
            ) {
              workInProgress.tag = 11;
              workInProgress = updateForwardRef(
                null,
                workInProgress,
                lazyComponent,
                current,
                renderLanes
              );
              break a;
            } else if (init === REACT_MEMO_TYPE) {
              workInProgress.tag = 14;
              workInProgress = updateMemoComponent(
                null,
                workInProgress,
                lazyComponent,
                current,
                renderLanes
              );
              break a;
            }
          workInProgress =
            getComponentNameFromType(lazyComponent) || lazyComponent;
          throw Error(formatProdErrorMessage(306, workInProgress, ""));
        }
      }
      return workInProgress;
    case 0:
      return updateFunctionComponent(
        current,
        workInProgress,
        workInProgress.type,
        workInProgress.pendingProps,
        renderLanes
      );
    case 1:
      return (
        (lazyComponent = workInProgress.type),
        (init = resolveClassComponentProps(
          lazyComponent,
          workInProgress.pendingProps
        )),
        updateClassComponent(
          current,
          workInProgress,
          lazyComponent,
          init,
          renderLanes
        )
      );
    case 3:
      a: {
        pushHostContainer(
          workInProgress,
          workInProgress.stateNode.containerInfo
        );
        if (null === current) throw Error(formatProdErrorMessage(387));
        var nextProps = workInProgress.pendingProps;
        init = workInProgress.memoizedState;
        lazyComponent = init.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        nextProps = nextState.cache;
        pushProvider(workInProgress, CacheContext, nextProps);
        nextProps !== init.cache &&
          propagateContextChanges(
            workInProgress,
            [CacheContext],
            renderLanes,
            !0
          );
        suspendIfUpdateReadFromEntangledAsyncAction();
        nextProps = nextState.element;
        if (init.isDehydrated)
          if (
            ((init = {
              element: nextProps,
              isDehydrated: !1,
              cache: nextState.cache
            }),
            (workInProgress.updateQueue.baseState = init),
            (workInProgress.memoizedState = init),
            workInProgress.flags & 256)
          ) {
            workInProgress = mountHostRootWithoutHydrating(
              current,
              workInProgress,
              nextProps,
              renderLanes
            );
            break a;
          } else if (nextProps !== lazyComponent) {
            lazyComponent = createCapturedValueAtFiber(
              Error(formatProdErrorMessage(424)),
              workInProgress
            );
            queueHydrationError(lazyComponent);
            workInProgress = mountHostRootWithoutHydrating(
              current,
              workInProgress,
              nextProps,
              renderLanes
            );
            break a;
          } else
            for (
              nextHydratableInstance = getNextHydratable(
                workInProgress.stateNode.containerInfo.firstChild
              ),
                hydrationParentFiber = workInProgress,
                isHydrating = !0,
                hydrationErrors = null,
                rootOrSingletonContext = !0,
                renderLanes = mountChildFibers(
                  workInProgress,
                  null,
                  nextProps,
                  renderLanes
                ),
                workInProgress.child = renderLanes;
              renderLanes;

            )
              (renderLanes.flags = (renderLanes.flags & -3) | 4096),
                (renderLanes = renderLanes.sibling);
        else {
          resetHydrationState();
          if (nextProps === lazyComponent) {
            workInProgress = bailoutOnAlreadyFinishedWork(
              current,
              workInProgress,
              renderLanes
            );
            break a;
          }
          reconcileChildren(current, workInProgress, nextProps, renderLanes);
        }
        workInProgress = workInProgress.child;
      }
      return workInProgress;
    case 26:
      return (
        markRef(current, workInProgress),
        null === current
          ? (renderLanes = getResource(
              workInProgress.type,
              null,
              workInProgress.pendingProps,
              null
            ))
            ? (workInProgress.memoizedState = renderLanes)
            : isHydrating ||
              ((renderLanes = workInProgress.type),
              (current = workInProgress.pendingProps),
              (lazyComponent = getOwnerDocumentFromRootContainer(
                rootInstanceStackCursor.current
              ).createElement(renderLanes)),
              (lazyComponent[internalInstanceKey] = workInProgress),
              (lazyComponent[internalPropsKey] = current),
              setInitialProperties(lazyComponent, renderLanes, current),
              markNodeAsHoistable(lazyComponent),
              (workInProgress.stateNode = lazyComponent))
          : (workInProgress.memoizedState = getResource(
              workInProgress.type,
              current.memoizedProps,
              workInProgress.pendingProps,
              current.memoizedState
            )),
        null
      );
    case 27:
      return (
        pushHostContext(workInProgress),
        null === current &&
          isHydrating &&
          ((lazyComponent = workInProgress.stateNode =
            resolveSingletonInstance(
              workInProgress.type,
              workInProgress.pendingProps,
              rootInstanceStackCursor.current
            )),
          (hydrationParentFiber = workInProgress),
          (rootOrSingletonContext = !0),
          (nextHydratableInstance = getNextHydratable(
            lazyComponent.firstChild
          ))),
        (lazyComponent = workInProgress.pendingProps.children),
        null !== current || isHydrating
          ? reconcileChildren(
              current,
              workInProgress,
              lazyComponent,
              renderLanes
            )
          : (workInProgress.child = reconcileChildFibers(
              workInProgress,
              null,
              lazyComponent,
              renderLanes
            )),
        markRef(current, workInProgress),
        workInProgress.child
      );
    case 5:
      if (null === current && isHydrating) {
        if ((init = lazyComponent = nextHydratableInstance))
          (lazyComponent = canHydrateInstance(
            lazyComponent,
            workInProgress.type,
            workInProgress.pendingProps,
            rootOrSingletonContext
          )),
            null !== lazyComponent
              ? ((workInProgress.stateNode = lazyComponent),
                (hydrationParentFiber = workInProgress),
                (nextHydratableInstance = getNextHydratable(
                  lazyComponent.firstChild
                )),
                (rootOrSingletonContext = !1),
                (init = !0))
              : (init = !1);
        init || throwOnHydrationMismatch(workInProgress);
      }
      pushHostContext(workInProgress);
      init = workInProgress.type;
      nextProps = workInProgress.pendingProps;
      nextState = null !== current ? current.memoizedProps : null;
      lazyComponent = nextProps.children;
      shouldSetTextContent(init, nextProps)
        ? (lazyComponent = null)
        : null !== nextState &&
          shouldSetTextContent(init, nextState) &&
          (workInProgress.flags |= 32);
      null !== workInProgress.memoizedState &&
        ((init = renderWithHooks(
          current,
          workInProgress,
          TransitionAwareHostComponent,
          null,
          null,
          renderLanes
        )),
        (HostTransitionContext._currentValue = init));
      markRef(current, workInProgress);
      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);
      return workInProgress.child;
    case 6:
      if (null === current && isHydrating) {
        if ((current = renderLanes = nextHydratableInstance))
          (renderLanes = canHydrateTextInstance(
            renderLanes,
            workInProgress.pendingProps,
            rootOrSingletonContext
          )),
            null !== renderLanes
              ? ((workInProgress.stateNode = renderLanes),
                (hydrationParentFiber = workInProgress),
                (nextHydratableInstance = null),
                (current = !0))
              : (current = !1);
        current || throwOnHydrationMismatch(workInProgress);
      }
      return null;
    case 13:
      return updateSuspenseComponent(current, workInProgress, renderLanes);
    case 4:
      return (
        pushHostContainer(
          workInProgress,
          workInProgress.stateNode.containerInfo
        ),
        (lazyComponent = workInProgress.pendingProps),
        null === current
          ? (workInProgress.child = reconcileChildFibers(
              workInProgress,
              null,
              lazyComponent,
              renderLanes
            ))
          : reconcileChildren(
              current,
              workInProgress,
              lazyComponent,
              renderLanes
            ),
        workInProgress.child
      );
    case 11:
      return updateForwardRef(
        current,
        workInProgress,
        workInProgress.type,
        workInProgress.pendingProps,
        renderLanes
      );
    case 7:
      return (
        reconcileChildren(
          current,
          workInProgress,
          workInProgress.pendingProps,
          renderLanes
        ),
        workInProgress.child
      );
    case 8:
      return (
        reconcileChildren(
          current,
          workInProgress,
          workInProgress.pendingProps.children,
          renderLanes
        ),
        workInProgress.child
      );
    case 12:
      return (
        reconcileChildren(
          current,
          workInProgress,
          workInProgress.pendingProps.children,
          renderLanes
        ),
        workInProgress.child
      );
    case 10:
      return (
        (lazyComponent = workInProgress.pendingProps),
        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),
        reconcileChildren(
          current,
          workInProgress,
          lazyComponent.children,
          renderLanes
        ),
        workInProgress.child
      );
    case 9:
      return (
        (init = workInProgress.type._context),
        (lazyComponent = workInProgress.pendingProps.children),
        prepareToReadContext(workInProgress),
        (init = readContext(init)),
        (lazyComponent = lazyComponent(init)),
        (workInProgress.flags |= 1),
        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),
        workInProgress.child
      );
    case 14:
      return updateMemoComponent(
        current,
        workInProgress,
        workInProgress.type,
        workInProgress.pendingProps,
        renderLanes
      );
    case 15:
      return updateSimpleMemoComponent(
        current,
        workInProgress,
        workInProgress.type,
        workInProgress.pendingProps,
        renderLanes
      );
    case 19:
      return updateSuspenseListComponent(current, workInProgress, renderLanes);
    case 22:
      return updateOffscreenComponent(current, workInProgress, renderLanes);
    case 24:
      return (
        prepareToReadContext(workInProgress),
        (lazyComponent = readContext(CacheContext)),
        null === current
          ? ((init = peekCacheFromPool()),
            null === init &&
              ((init = workInProgressRoot),
              (nextProps = createCache()),
              (init.pooledCache = nextProps),
              nextProps.refCount++,
              null !== nextProps && (init.pooledCacheLanes |= renderLanes),
              (init = nextProps)),
            (workInProgress.memoizedState = {
              parent: lazyComponent,
              cache: init
            }),
            initializeUpdateQueue(workInProgress),
            pushProvider(workInProgress, CacheContext, init))
          : (0 !== (current.lanes & renderLanes) &&
              (cloneUpdateQueue(current, workInProgress),
              processUpdateQueue(workInProgress, null, null, renderLanes),
              suspendIfUpdateReadFromEntangledAsyncAction()),
            (init = current.memoizedState),
            (nextProps = workInProgress.memoizedState),
            init.parent !== lazyComponent
              ? ((init = { parent: lazyComponent, cache: lazyComponent }),
                (workInProgress.memoizedState = init),
                0 === workInProgress.lanes &&
                  (workInProgress.memoizedState =
                    workInProgress.updateQueue.baseState =
                      init),
                pushProvider(workInProgress, CacheContext, lazyComponent))
              : ((lazyComponent = nextProps.cache),
                pushProvider(workInProgress, CacheContext, lazyComponent),
                lazyComponent !== init.cache &&
                  propagateContextChanges(
                    workInProgress,
                    [CacheContext],
                    renderLanes,
                    !0
                  ))),
        reconcileChildren(
          current,
          workInProgress,
          workInProgress.pendingProps.children,
          renderLanes
        ),
        workInProgress.child
      );
    case 29:
      throw workInProgress.pendingProps;
  }
  throw Error(formatProdErrorMessage(156, workInProgress.tag));
}
var valueCursor = createCursor(null),
  currentlyRenderingFiber = null,
  lastContextDependency = null;
function pushProvider(providerFiber, context, nextValue) {
  push(valueCursor, context._currentValue);
  context._currentValue = nextValue;
}
function popProvider(context) {
  context._currentValue = valueCursor.current;
  pop(valueCursor);
}
function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
  for (; null !== parent; ) {
    var alternate = parent.alternate;
    (parent.childLanes & renderLanes) !== renderLanes
      ? ((parent.childLanes |= renderLanes),
        null !== alternate && (alternate.childLanes |= renderLanes))
      : null !== alternate &&
        (alternate.childLanes & renderLanes) !== renderLanes &&
        (alternate.childLanes |= renderLanes);
    if (parent === propagationRoot) break;
    parent = parent.return;
  }
}
function propagateContextChanges(
  workInProgress,
  contexts,
  renderLanes,
  forcePropagateEntireTree
) {
  var fiber = workInProgress.child;
  null !== fiber && (fiber.return = workInProgress);
  for (; null !== fiber; ) {
    var list = fiber.dependencies;
    if (null !== list) {
      var nextFiber = fiber.child;
      list = list.firstContext;
      a: for (; null !== list; ) {
        var dependency = list;
        list = fiber;
        for (var i = 0; i < contexts.length; i++)
          if (dependency.context === contexts[i]) {
            list.lanes |= renderLanes;
            dependency = list.alternate;
            null !== dependency && (dependency.lanes |= renderLanes);
            scheduleContextWorkOnParentPath(
              list.return,
              renderLanes,
              workInProgress
            );
            forcePropagateEntireTree || (nextFiber = null);
            break a;
          }
        list = dependency.next;
      }
    } else if (18 === fiber.tag) {
      nextFiber = fiber.return;
      if (null === nextFiber) throw Error(formatProdErrorMessage(341));
      nextFiber.lanes |= renderLanes;
      list = nextFiber.alternate;
      null !== list && (list.lanes |= renderLanes);
      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
      nextFiber = null;
    } else nextFiber = fiber.child;
    if (null !== nextFiber) nextFiber.return = fiber;
    else
      for (nextFiber = fiber; null !== nextFiber; ) {
        if (nextFiber === workInProgress) {
          nextFiber = null;
          break;
        }
        fiber = nextFiber.sibling;
        if (null !== fiber) {
          fiber.return = nextFiber.return;
          nextFiber = fiber;
          break;
        }
        nextFiber = nextFiber.return;
      }
    fiber = nextFiber;
  }
}
function propagateParentContextChanges(
  current,
  workInProgress,
  renderLanes,
  forcePropagateEntireTree
) {
  current = null;
  for (
    var parent = workInProgress, isInsidePropagationBailout = !1;
    null !== parent;

  ) {
    if (!isInsidePropagationBailout)
      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
      else if (0 !== (parent.flags & 262144)) break;
    if (10 === parent.tag) {
      var currentParent = parent.alternate;
      if (null === currentParent) throw Error(formatProdErrorMessage(387));
      currentParent = currentParent.memoizedProps;
      if (null !== currentParent) {
        var context = parent.type;
        objectIs(parent.pendingProps.value, currentParent.value) ||
          (null !== current ? current.push(context) : (current = [context]));
      }
    } else if (parent === hostTransitionProviderCursor.current) {
      currentParent = parent.alternate;
      if (null === currentParent) throw Error(formatProdErrorMessage(387));
      currentParent.memoizedState.memoizedState !==
        parent.memoizedState.memoizedState &&
        (null !== current
          ? current.push(HostTransitionContext)
          : (current = [HostTransitionContext]));
    }
    parent = parent.return;
  }
  null !== current &&
    propagateContextChanges(
      workInProgress,
      current,
      renderLanes,
      forcePropagateEntireTree
    );
  workInProgress.flags |= 262144;
}
function checkIfContextChanged(currentDependencies) {
  for (
    currentDependencies = currentDependencies.firstContext;
    null !== currentDependencies;

  ) {
    if (
      !objectIs(
        currentDependencies.context._currentValue,
        currentDependencies.memoizedValue
      )
    )
      return !0;
    currentDependencies = currentDependencies.next;
  }
  return !1;
}
function prepareToReadContext(workInProgress) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  workInProgress = workInProgress.dependencies;
  null !== workInProgress && (workInProgress.firstContext = null);
}
function readContext(context) {
  return readContextForConsumer(currentlyRenderingFiber, context);
}
function readContextDuringReconciliation(consumer, context) {
  null === currentlyRenderingFiber && prepareToReadContext(consumer);
  return readContextForConsumer(consumer, context);
}
function readContextForConsumer(consumer, context) {
  var value = context._currentValue;
  context = { context: context, memoizedValue: value, next: null };
  if (null === lastContextDependency) {
    if (null === consumer) throw Error(formatProdErrorMessage(308));
    lastContextDependency = context;
    consumer.dependencies = { lanes: 0, firstContext: context };
    consumer.flags |= 524288;
  } else lastContextDependency = lastContextDependency.next = context;
  return value;
}
var hasForceUpdate = !1;
function initializeUpdateQueue(fiber) {
  fiber.updateQueue = {
    baseState: fiber.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, lanes: 0, hiddenCallbacks: null },
    callbacks: null
  };
}
function cloneUpdateQueue(current, workInProgress) {
  current = current.updateQueue;
  workInProgress.updateQueue === current &&
    (workInProgress.updateQueue = {
      baseState: current.baseState,
      firstBaseUpdate: current.firstBaseUpdate,
      lastBaseUpdate: current.lastBaseUpdate,
      shared: current.shared,
      callbacks: null
    });
}
function createUpdate(lane) {
  return { lane: lane, tag: 0, payload: null, callback: null, next: null };
}
function enqueueUpdate(fiber, update, lane) {
  var updateQueue = fiber.updateQueue;
  if (null === updateQueue) return null;
  updateQueue = updateQueue.shared;
  if (0 !== (executionContext & 2)) {
    var pending = updateQueue.pending;
    null === pending
      ? (update.next = update)
      : ((update.next = pending.next), (pending.next = update));
    updateQueue.pending = update;
    update = getRootForUpdatedFiber(fiber);
    markUpdateLaneFromFiberToRoot(fiber, null, lane);
    return update;
  }
  enqueueUpdate$1(fiber, updateQueue, update, lane);
  return getRootForUpdatedFiber(fiber);
}
function entangleTransitions(root, fiber, lane) {
  fiber = fiber.updateQueue;
  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
    var queueLanes = fiber.lanes;
    queueLanes &= root.pendingLanes;
    lane |= queueLanes;
    fiber.lanes = lane;
    markRootEntangled(root, lane);
  }
}
function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
  var queue = workInProgress.updateQueue,
    current = workInProgress.alternate;
  if (
    null !== current &&
    ((current = current.updateQueue), queue === current)
  ) {
    var newFirst = null,
      newLast = null;
    queue = queue.firstBaseUpdate;
    if (null !== queue) {
      do {
        var clone = {
          lane: queue.lane,
          tag: queue.tag,
          payload: queue.payload,
          callback: null,
          next: null
        };
        null === newLast
          ? (newFirst = newLast = clone)
          : (newLast = newLast.next = clone);
        queue = queue.next;
      } while (null !== queue);
      null === newLast
        ? (newFirst = newLast = capturedUpdate)
        : (newLast = newLast.next = capturedUpdate);
    } else newFirst = newLast = capturedUpdate;
    queue = {
      baseState: current.baseState,
      firstBaseUpdate: newFirst,
      lastBaseUpdate: newLast,
      shared: current.shared,
      callbacks: current.callbacks
    };
    workInProgress.updateQueue = queue;
    return;
  }
  workInProgress = queue.lastBaseUpdate;
  null === workInProgress
    ? (queue.firstBaseUpdate = capturedUpdate)
    : (workInProgress.next = capturedUpdate);
  queue.lastBaseUpdate = capturedUpdate;
}
var didReadFromEntangledAsyncAction = !1;
function suspendIfUpdateReadFromEntangledAsyncAction() {
  if (didReadFromEntangledAsyncAction) {
    var entangledActionThenable = currentEntangledActionThenable;
    if (null !== entangledActionThenable) throw entangledActionThenable;
  }
}
function processUpdateQueue(
  workInProgress$jscomp$0,
  props,
  instance$jscomp$0,
  renderLanes
) {
  didReadFromEntangledAsyncAction = !1;
  var queue = workInProgress$jscomp$0.updateQueue;
  hasForceUpdate = !1;
  var firstBaseUpdate = queue.firstBaseUpdate,
    lastBaseUpdate = queue.lastBaseUpdate,
    pendingQueue = queue.shared.pending;
  if (null !== pendingQueue) {
    queue.shared.pending = null;
    var lastPendingUpdate = pendingQueue,
      firstPendingUpdate = lastPendingUpdate.next;
    lastPendingUpdate.next = null;
    null === lastBaseUpdate
      ? (firstBaseUpdate = firstPendingUpdate)
      : (lastBaseUpdate.next = firstPendingUpdate);
    lastBaseUpdate = lastPendingUpdate;
    var current = workInProgress$jscomp$0.alternate;
    null !== current &&
      ((current = current.updateQueue),
      (pendingQueue = current.lastBaseUpdate),
      pendingQueue !== lastBaseUpdate &&
        (null === pendingQueue
          ? (current.firstBaseUpdate = firstPendingUpdate)
          : (pendingQueue.next = firstPendingUpdate),
        (current.lastBaseUpdate = lastPendingUpdate)));
  }
  if (null !== firstBaseUpdate) {
    var newState = queue.baseState;
    lastBaseUpdate = 0;
    current = firstPendingUpdate = lastPendingUpdate = null;
    pendingQueue = firstBaseUpdate;
    do {
      var updateLane = pendingQueue.lane & -536870913,
        isHiddenUpdate = updateLane !== pendingQueue.lane;
      if (
        isHiddenUpdate
          ? (workInProgressRootRenderLanes & updateLane) === updateLane
          : (renderLanes & updateLane) === updateLane
      ) {
        0 !== updateLane &&
          updateLane === currentEntangledLane &&
          (didReadFromEntangledAsyncAction = !0);
        null !== current &&
          (current = current.next =
            {
              lane: 0,
              tag: pendingQueue.tag,
              payload: pendingQueue.payload,
              callback: null,
              next: null
            });
        a: {
          var workInProgress = workInProgress$jscomp$0,
            update = pendingQueue;
          updateLane = props;
          var instance = instance$jscomp$0;
          switch (update.tag) {
            case 1:
              workInProgress = update.payload;
              if ("function" === typeof workInProgress) {
                newState = workInProgress.call(instance, newState, updateLane);
                break a;
              }
              newState = workInProgress;
              break a;
            case 3:
              workInProgress.flags = (workInProgress.flags & -65537) | 128;
            case 0:
              workInProgress = update.payload;
              updateLane =
                "function" === typeof workInProgress
                  ? workInProgress.call(instance, newState, updateLane)
                  : workInProgress;
              if (null === updateLane || void 0 === updateLane) break a;
              newState = assign({}, newState, updateLane);
              break a;
            case 2:
              hasForceUpdate = !0;
          }
        }
        updateLane = pendingQueue.callback;
        null !== updateLane &&
          ((workInProgress$jscomp$0.flags |= 64),
          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),
          (isHiddenUpdate = queue.callbacks),
          null === isHiddenUpdate
            ? (queue.callbacks = [updateLane])
            : isHiddenUpdate.push(updateLane));
      } else
        (isHiddenUpdate = {
          lane: updateLane,
          tag: pendingQueue.tag,
          payload: pendingQueue.payload,
          callback: pendingQueue.callback,
          next: null
        }),
          null === current
            ? ((firstPendingUpdate = current = isHiddenUpdate),
              (lastPendingUpdate = newState))
            : (current = current.next = isHiddenUpdate),
          (lastBaseUpdate |= updateLane);
      pendingQueue = pendingQueue.next;
      if (null === pendingQueue)
        if (((pendingQueue = queue.shared.pending), null === pendingQueue))
          break;
        else
          (isHiddenUpdate = pendingQueue),
            (pendingQueue = isHiddenUpdate.next),
            (isHiddenUpdate.next = null),
            (queue.lastBaseUpdate = isHiddenUpdate),
            (queue.shared.pending = null);
    } while (1);
    null === current && (lastPendingUpdate = newState);
    queue.baseState = lastPendingUpdate;
    queue.firstBaseUpdate = firstPendingUpdate;
    queue.lastBaseUpdate = current;
    null === firstBaseUpdate && (queue.shared.lanes = 0);
    workInProgressRootSkippedLanes |= lastBaseUpdate;
    workInProgress$jscomp$0.lanes = lastBaseUpdate;
    workInProgress$jscomp$0.memoizedState = newState;
  }
}
function callCallback(callback, context) {
  if ("function" !== typeof callback)
    throw Error(formatProdErrorMessage(191, callback));
  callback.call(context);
}
function commitCallbacks(updateQueue, context) {
  var callbacks = updateQueue.callbacks;
  if (null !== callbacks)
    for (
      updateQueue.callbacks = null, updateQueue = 0;
      updateQueue < callbacks.length;
      updateQueue++
    )
      callCallback(callbacks[updateQueue], context);
}
function commitHookEffectListMount(flags, finishedWork) {
  try {
    var updateQueue = finishedWork.updateQueue,
      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
    if (null !== lastEffect) {
      var firstEffect = lastEffect.next;
      updateQueue = firstEffect;
      do {
        if ((updateQueue.tag & flags) === flags) {
          lastEffect = void 0;
          var create = updateQueue.create,
            inst = updateQueue.inst;
          lastEffect = create();
          inst.destroy = lastEffect;
        }
        updateQueue = updateQueue.next;
      } while (updateQueue !== firstEffect);
    }
  } catch (error) {
    captureCommitPhaseError(finishedWork, finishedWork.return, error);
  }
}
function commitHookEffectListUnmount(
  flags,
  finishedWork,
  nearestMountedAncestor$jscomp$0
) {
  try {
    var updateQueue = finishedWork.updateQueue,
      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
    if (null !== lastEffect) {
      var firstEffect = lastEffect.next;
      updateQueue = firstEffect;
      do {
        if ((updateQueue.tag & flags) === flags) {
          var inst = updateQueue.inst,
            destroy = inst.destroy;
          if (void 0 !== destroy) {
            inst.destroy = void 0;
            lastEffect = finishedWork;
            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
            try {
              destroy();
            } catch (error) {
              captureCommitPhaseError(
                lastEffect,
                nearestMountedAncestor,
                error
              );
            }
          }
        }
        updateQueue = updateQueue.next;
      } while (updateQueue !== firstEffect);
    }
  } catch (error) {
    captureCommitPhaseError(finishedWork, finishedWork.return, error);
  }
}
function commitClassCallbacks(finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  if (null !== updateQueue) {
    var instance = finishedWork.stateNode;
    try {
      commitCallbacks(updateQueue, instance);
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
}
function safelyCallComponentWillUnmount(
  current,
  nearestMountedAncestor,
  instance
) {
  instance.props = resolveClassComponentProps(
    current.type,
    current.memoizedProps
  );
  instance.state = current.memoizedState;
  try {
    instance.componentWillUnmount();
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}
function safelyAttachRef(current, nearestMountedAncestor) {
  try {
    var ref = current.ref;
    if (null !== ref) {
      var instance = current.stateNode;
      switch (current.tag) {
        case 26:
        case 27:
        case 5:
          var instanceToUse = instance;
          break;
        default:
          instanceToUse = instance;
      }
      "function" === typeof ref
        ? (current.refCleanup = ref(instanceToUse))
        : (ref.current = instanceToUse);
    }
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}
function safelyDetachRef(current, nearestMountedAncestor) {
  var ref = current.ref,
    refCleanup = current.refCleanup;
  if (null !== ref)
    if ("function" === typeof refCleanup)
      try {
        refCleanup();
      } catch (error) {
        captureCommitPhaseError(current, nearestMountedAncestor, error);
      } finally {
        (current.refCleanup = null),
          (current = current.alternate),
          null != current && (current.refCleanup = null);
      }
    else if ("function" === typeof ref)
      try {
        ref(null);
      } catch (error$112) {
        captureCommitPhaseError(current, nearestMountedAncestor, error$112);
      }
    else ref.current = null;
}
function commitHostMount(finishedWork) {
  var type = finishedWork.type,
    props = finishedWork.memoizedProps,
    instance = finishedWork.stateNode;
  try {
    a: switch (type) {
      case "button":
      case "input":
      case "select":
      case "textarea":
        props.autoFocus && instance.focus();
        break a;
      case "img":
        props.src
          ? (instance.src = props.src)
          : props.srcSet && (instance.srcset = props.srcSet);
    }
  } catch (error) {
    captureCommitPhaseError(finishedWork, finishedWork.return, error);
  }
}
function commitHostUpdate(finishedWork, newProps, oldProps) {
  try {
    var domElement = finishedWork.stateNode;
    updateProperties(domElement, finishedWork.type, oldProps, newProps);
    domElement[internalPropsKey] = newProps;
  } catch (error) {
    captureCommitPhaseError(finishedWork, finishedWork.return, error);
  }
}
function isHostParent(fiber) {
  return (
    5 === fiber.tag ||
    3 === fiber.tag ||
    26 === fiber.tag ||
    27 === fiber.tag ||
    4 === fiber.tag
  );
}
function getHostSibling(fiber) {
  a: for (;;) {
    for (; null === fiber.sibling; ) {
      if (null === fiber.return || isHostParent(fiber.return)) return null;
      fiber = fiber.return;
    }
    fiber.sibling.return = fiber.return;
    for (
      fiber = fiber.sibling;
      5 !== fiber.tag &&
      6 !== fiber.tag &&
      27 !== fiber.tag &&
      18 !== fiber.tag;

    ) {
      if (fiber.flags & 2) continue a;
      if (null === fiber.child || 4 === fiber.tag) continue a;
      else (fiber.child.return = fiber), (fiber = fiber.child);
    }
    if (!(fiber.flags & 2)) return fiber.stateNode;
  }
}
function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
  var tag = node.tag;
  if (5 === tag || 6 === tag)
    (node = node.stateNode),
      before
        ? 8 === parent.nodeType
          ? parent.parentNode.insertBefore(node, before)
          : parent.insertBefore(node, before)
        : (8 === parent.nodeType
            ? ((before = parent.parentNode), before.insertBefore(node, parent))
            : ((before = parent), before.appendChild(node)),
          (parent = parent._reactRootContainer),
          (null !== parent && void 0 !== parent) ||
            null !== before.onclick ||
            (before.onclick = noop$1));
  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
    for (
      insertOrAppendPlacementNodeIntoContainer(node, before, parent),
        node = node.sibling;
      null !== node;

    )
      insertOrAppendPlacementNodeIntoContainer(node, before, parent),
        (node = node.sibling);
}
function insertOrAppendPlacementNode(node, before, parent) {
  var tag = node.tag;
  if (5 === tag || 6 === tag)
    (node = node.stateNode),
      before ? parent.insertBefore(node, before) : parent.appendChild(node);
  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
    for (
      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
      null !== node;

    )
      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);
}
var offscreenSubtreeIsHidden = !1,
  offscreenSubtreeWasHidden = !1,
  needsFormReset = !1,
  PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
  nextEffect = null,
  shouldFireAfterActiveInstanceBlur = !1;
function commitBeforeMutationEffects(root, firstChild) {
  root = root.containerInfo;
  eventsEnabled = _enabled;
  root = getActiveElementDeep(root);
  if (hasSelectionCapabilities(root)) {
    if ("selectionStart" in root)
      var JSCompiler_temp = {
        start: root.selectionStart,
        end: root.selectionEnd
      };
    else
      a: {
        JSCompiler_temp =
          ((JSCompiler_temp = root.ownerDocument) &&
            JSCompiler_temp.defaultView) ||
          window;
        var selection =
          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
        if (selection && 0 !== selection.rangeCount) {
          JSCompiler_temp = selection.anchorNode;
          var anchorOffset = selection.anchorOffset,
            focusNode = selection.focusNode;
          selection = selection.focusOffset;
          try {
            JSCompiler_temp.nodeType, focusNode.nodeType;
          } catch (e$20) {
            JSCompiler_temp = null;
            break a;
          }
          var length = 0,
            start = -1,
            end = -1,
            indexWithinAnchor = 0,
            indexWithinFocus = 0,
            node = root,
            parentNode = null;
          b: for (;;) {
            for (var next; ; ) {
              node !== JSCompiler_temp ||
                (0 !== anchorOffset && 3 !== node.nodeType) ||
                (start = length + anchorOffset);
              node !== focusNode ||
                (0 !== selection && 3 !== node.nodeType) ||
                (end = length + selection);
              3 === node.nodeType && (length += node.nodeValue.length);
              if (null === (next = node.firstChild)) break;
              parentNode = node;
              node = next;
            }
            for (;;) {
              if (node === root) break b;
              parentNode === JSCompiler_temp &&
                ++indexWithinAnchor === anchorOffset &&
                (start = length);
              parentNode === focusNode &&
                ++indexWithinFocus === selection &&
                (end = length);
              if (null !== (next = node.nextSibling)) break;
              node = parentNode;
              parentNode = node.parentNode;
            }
            node = next;
          }
          JSCompiler_temp =
            -1 === start || -1 === end ? null : { start: start, end: end };
        } else JSCompiler_temp = null;
      }
    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };
  } else JSCompiler_temp = null;
  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
  _enabled = !1;
  for (nextEffect = firstChild; null !== nextEffect; )
    if (
      ((firstChild = nextEffect),
      (root = firstChild.child),
      0 !== (firstChild.subtreeFlags & 1028) && null !== root)
    )
      (root.return = firstChild), (nextEffect = root);
    else
      for (; null !== nextEffect; ) {
        firstChild = nextEffect;
        focusNode = firstChild.alternate;
        root = firstChild.flags;
        switch (firstChild.tag) {
          case 0:
            break;
          case 11:
          case 15:
            break;
          case 1:
            if (0 !== (root & 1024) && null !== focusNode) {
              root = void 0;
              JSCompiler_temp = firstChild;
              anchorOffset = focusNode.memoizedProps;
              focusNode = focusNode.memoizedState;
              selection = JSCompiler_temp.stateNode;
              try {
                var resolvedPrevProps = resolveClassComponentProps(
                  JSCompiler_temp.type,
                  anchorOffset,
                  JSCompiler_temp.elementType === JSCompiler_temp.type
                );
                root = selection.getSnapshotBeforeUpdate(
                  resolvedPrevProps,
                  focusNode
                );
                selection.__reactInternalSnapshotBeforeUpdate = root;
              } catch (error) {
                captureCommitPhaseError(
                  JSCompiler_temp,
                  JSCompiler_temp.return,
                  error
                );
              }
            }
            break;
          case 3:
            if (0 !== (root & 1024))
              if (
                ((root = firstChild.stateNode.containerInfo),
                (JSCompiler_temp = root.nodeType),
                9 === JSCompiler_temp)
              )
                clearContainerSparingly(root);
              else if (1 === JSCompiler_temp)
                switch (root.nodeName) {
                  case "HEAD":
                  case "HTML":
                  case "BODY":
                    clearContainerSparingly(root);
                    break;
                  default:
                    root.textContent = "";
                }
            break;
          case 5:
          case 26:
          case 27:
          case 6:
          case 4:
          case 17:
            break;
          default:
            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));
        }
        root = firstChild.sibling;
        if (null !== root) {
          root.return = firstChild.return;
          nextEffect = root;
          break;
        }
        nextEffect = firstChild.return;
      }
  resolvedPrevProps = shouldFireAfterActiveInstanceBlur;
  shouldFireAfterActiveInstanceBlur = !1;
  return resolvedPrevProps;
}
function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
  var flags = finishedWork.flags;
  switch (finishedWork.tag) {
    case 0:
    case 11:
    case 15:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      flags & 4 && commitHookEffectListMount(5, finishedWork);
      break;
    case 1:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      if (flags & 4)
        if (((finishedRoot = finishedWork.stateNode), null === current))
          try {
            finishedRoot.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        else {
          var prevProps = resolveClassComponentProps(
            finishedWork.type,
            current.memoizedProps
          );
          current = current.memoizedState;
          try {
            finishedRoot.componentDidUpdate(
              prevProps,
              current,
              finishedRoot.__reactInternalSnapshotBeforeUpdate
            );
          } catch (error$111) {
            captureCommitPhaseError(
              finishedWork,
              finishedWork.return,
              error$111
            );
          }
        }
      flags & 64 && commitClassCallbacks(finishedWork);
      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
      break;
    case 3:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      if (flags & 64 && ((flags = finishedWork.updateQueue), null !== flags)) {
        finishedRoot = null;
        if (null !== finishedWork.child)
          switch (finishedWork.child.tag) {
            case 27:
            case 5:
              finishedRoot = finishedWork.child.stateNode;
              break;
            case 1:
              finishedRoot = finishedWork.child.stateNode;
          }
        try {
          commitCallbacks(flags, finishedRoot);
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
      break;
    case 26:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
      break;
    case 27:
    case 5:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      null === current && flags & 4 && commitHostMount(finishedWork);
      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
      break;
    case 12:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      break;
    case 13:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
      break;
    case 22:
      prevProps =
        null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
      if (!prevProps) {
        current =
          (null !== current && null !== current.memoizedState) ||
          offscreenSubtreeWasHidden;
        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
          prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
        offscreenSubtreeIsHidden = prevProps;
        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden
          ? recursivelyTraverseReappearLayoutEffects(
              finishedRoot,
              finishedWork,
              0 !== (finishedWork.subtreeFlags & 8772)
            )
          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
      }
      flags & 512 &&
        ("manual" === finishedWork.memoizedProps.mode
          ? safelyAttachRef(finishedWork, finishedWork.return)
          : safelyDetachRef(finishedWork, finishedWork.return));
      break;
    default:
      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
  }
}
function detachFiberAfterEffects(fiber) {
  var alternate = fiber.alternate;
  null !== alternate &&
    ((fiber.alternate = null), detachFiberAfterEffects(alternate));
  fiber.child = null;
  fiber.deletions = null;
  fiber.sibling = null;
  5 === fiber.tag &&
    ((alternate = fiber.stateNode),
    null !== alternate && detachDeletedInstance(alternate));
  fiber.stateNode = null;
  fiber.return = null;
  fiber.dependencies = null;
  fiber.memoizedProps = null;
  fiber.memoizedState = null;
  fiber.pendingProps = null;
  fiber.stateNode = null;
  fiber.updateQueue = null;
}
var hostParent = null,
  hostParentIsContainer = !1;
function recursivelyTraverseDeletionEffects(
  finishedRoot,
  nearestMountedAncestor,
  parent
) {
  for (parent = parent.child; null !== parent; )
    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),
      (parent = parent.sibling);
}
function commitDeletionEffectsOnFiber(
  finishedRoot,
  nearestMountedAncestor,
  deletedFiber
) {
  if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount)
    try {
      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
    } catch (err) {}
  switch (deletedFiber.tag) {
    case 26:
      offscreenSubtreeWasHidden ||
        safelyDetachRef(deletedFiber, nearestMountedAncestor);
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      deletedFiber.memoizedState
        ? deletedFiber.memoizedState.count--
        : deletedFiber.stateNode &&
          ((deletedFiber = deletedFiber.stateNode),
          deletedFiber.parentNode.removeChild(deletedFiber));
      break;
    case 27:
      offscreenSubtreeWasHidden ||
        safelyDetachRef(deletedFiber, nearestMountedAncestor);
      var prevHostParent = hostParent,
        prevHostParentIsContainer = hostParentIsContainer;
      hostParent = deletedFiber.stateNode;
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      deletedFiber = deletedFiber.stateNode;
      for (
        nearestMountedAncestor = deletedFiber.attributes;
        nearestMountedAncestor.length;

      )
        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);
      detachDeletedInstance(deletedFiber);
      hostParent = prevHostParent;
      hostParentIsContainer = prevHostParentIsContainer;
      break;
    case 5:
      offscreenSubtreeWasHidden ||
        safelyDetachRef(deletedFiber, nearestMountedAncestor);
    case 6:
      prevHostParentIsContainer = hostParent;
      var prevHostParentIsContainer$119 = hostParentIsContainer;
      hostParent = null;
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      hostParent = prevHostParentIsContainer;
      hostParentIsContainer = prevHostParentIsContainer$119;
      if (null !== hostParent)
        if (hostParentIsContainer)
          try {
            (finishedRoot = hostParent),
              (prevHostParent = deletedFiber.stateNode),
              8 === finishedRoot.nodeType
                ? finishedRoot.parentNode.removeChild(prevHostParent)
                : finishedRoot.removeChild(prevHostParent);
          } catch (error) {
            captureCommitPhaseError(
              deletedFiber,
              nearestMountedAncestor,
              error
            );
          }
        else
          try {
            hostParent.removeChild(deletedFiber.stateNode);
          } catch (error) {
            captureCommitPhaseError(
              deletedFiber,
              nearestMountedAncestor,
              error
            );
          }
      break;
    case 18:
      null !== hostParent &&
        (hostParentIsContainer
          ? ((nearestMountedAncestor = hostParent),
            (deletedFiber = deletedFiber.stateNode),
            8 === nearestMountedAncestor.nodeType
              ? clearSuspenseBoundary(
                  nearestMountedAncestor.parentNode,
                  deletedFiber
                )
              : 1 === nearestMountedAncestor.nodeType &&
                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),
            retryIfBlockedOn(nearestMountedAncestor))
          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
      break;
    case 4:
      prevHostParent = hostParent;
      prevHostParentIsContainer = hostParentIsContainer;
      hostParent = deletedFiber.stateNode.containerInfo;
      hostParentIsContainer = !0;
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      hostParent = prevHostParent;
      hostParentIsContainer = prevHostParentIsContainer;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      offscreenSubtreeWasHidden ||
        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);
      offscreenSubtreeWasHidden ||
        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      break;
    case 1:
      offscreenSubtreeWasHidden ||
        (safelyDetachRef(deletedFiber, nearestMountedAncestor),
        (prevHostParent = deletedFiber.stateNode),
        "function" === typeof prevHostParent.componentWillUnmount &&
          safelyCallComponentWillUnmount(
            deletedFiber,
            nearestMountedAncestor,
            prevHostParent
          ));
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      break;
    case 21:
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      break;
    case 22:
      offscreenSubtreeWasHidden ||
        safelyDetachRef(deletedFiber, nearestMountedAncestor);
      offscreenSubtreeWasHidden =
        (prevHostParent = offscreenSubtreeWasHidden) ||
        null !== deletedFiber.memoizedState;
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
      offscreenSubtreeWasHidden = prevHostParent;
      break;
    default:
      recursivelyTraverseDeletionEffects(
        finishedRoot,
        nearestMountedAncestor,
        deletedFiber
      );
  }
}
function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
  if (
    null === finishedWork.memoizedState &&
    ((finishedRoot = finishedWork.alternate),
    null !== finishedRoot &&
      ((finishedRoot = finishedRoot.memoizedState),
      null !== finishedRoot &&
        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))
  )
    try {
      retryIfBlockedOn(finishedRoot);
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
}
function getRetryCache(finishedWork) {
  switch (finishedWork.tag) {
    case 13:
    case 19:
      var retryCache = finishedWork.stateNode;
      null === retryCache &&
        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
      return retryCache;
    case 22:
      return (
        (finishedWork = finishedWork.stateNode),
        (retryCache = finishedWork._retryCache),
        null === retryCache &&
          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
        retryCache
      );
    default:
      throw Error(formatProdErrorMessage(435, finishedWork.tag));
  }
}
function attachSuspenseRetryListeners(finishedWork, wakeables) {
  var retryCache = getRetryCache(finishedWork);
  wakeables.forEach(function (wakeable) {
    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
    retryCache.has(wakeable) ||
      (retryCache.add(wakeable), wakeable.then(retry, retry));
  });
}
function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
  var deletions = parentFiber.deletions;
  if (null !== deletions)
    for (var i = 0; i < deletions.length; i++) {
      var childToDelete = deletions[i],
        root = root$jscomp$0,
        returnFiber = parentFiber,
        parent = returnFiber;
      a: for (; null !== parent; ) {
        switch (parent.tag) {
          case 27:
          case 5:
            hostParent = parent.stateNode;
            hostParentIsContainer = !1;
            break a;
          case 3:
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = !0;
            break a;
          case 4:
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = !0;
            break a;
        }
        parent = parent.return;
      }
      if (null === hostParent) throw Error(formatProdErrorMessage(160));
      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);
      hostParent = null;
      hostParentIsContainer = !1;
      root = childToDelete.alternate;
      null !== root && (root.return = null);
      childToDelete.return = null;
    }
  if (parentFiber.subtreeFlags & 13878)
    for (parentFiber = parentFiber.child; null !== parentFiber; )
      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),
        (parentFiber = parentFiber.sibling);
}
var currentHoistableRoot = null;
function commitMutationEffectsOnFiber(finishedWork, root) {
  var current = finishedWork.alternate,
    flags = finishedWork.flags;
  switch (finishedWork.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      flags & 4 &&
        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),
        commitHookEffectListMount(3, finishedWork),
        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));
      break;
    case 1:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      flags & 512 &&
        (offscreenSubtreeWasHidden ||
          null === current ||
          safelyDetachRef(current, current.return));
      flags & 64 &&
        offscreenSubtreeIsHidden &&
        ((finishedWork = finishedWork.updateQueue),
        null !== finishedWork &&
          ((flags = finishedWork.callbacks),
          null !== flags &&
            ((current = finishedWork.shared.hiddenCallbacks),
            (finishedWork.shared.hiddenCallbacks =
              null === current ? flags : current.concat(flags)))));
      break;
    case 26:
      var hoistableRoot = currentHoistableRoot;
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      flags & 512 &&
        (offscreenSubtreeWasHidden ||
          null === current ||
          safelyDetachRef(current, current.return));
      if (flags & 4) {
        var currentResource = null !== current ? current.memoizedState : null;
        flags = finishedWork.memoizedState;
        if (null === current)
          if (null === flags)
            if (null === finishedWork.stateNode) {
              a: {
                flags = finishedWork.type;
                current = finishedWork.memoizedProps;
                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
                b: switch (flags) {
                  case "title":
                    currentResource =
                      hoistableRoot.getElementsByTagName("title")[0];
                    if (
                      !currentResource ||
                      currentResource[internalHoistableMarker] ||
                      currentResource[internalInstanceKey] ||
                      "http://www.w3.org/2000/svg" ===
                        currentResource.namespaceURI ||
                      currentResource.hasAttribute("itemprop")
                    )
                      (currentResource = hoistableRoot.createElement(flags)),
                        hoistableRoot.head.insertBefore(
                          currentResource,
                          hoistableRoot.querySelector("head > title")
                        );
                    setInitialProperties(currentResource, flags, current);
                    currentResource[internalInstanceKey] = finishedWork;
                    markNodeAsHoistable(currentResource);
                    flags = currentResource;
                    break a;
                  case "link":
                    var maybeNodes = getHydratableHoistableCache(
                      "link",
                      "href",
                      hoistableRoot
                    ).get(flags + (current.href || ""));
                    if (maybeNodes)
                      for (var i = 0; i < maybeNodes.length; i++)
                        if (
                          ((currentResource = maybeNodes[i]),
                          currentResource.getAttribute("href") ===
                            (null == current.href ? null : current.href) &&
                            currentResource.getAttribute("rel") ===
                              (null == current.rel ? null : current.rel) &&
                            currentResource.getAttribute("title") ===
                              (null == current.title ? null : current.title) &&
                            currentResource.getAttribute("crossorigin") ===
                              (null == current.crossOrigin
                                ? null
                                : current.crossOrigin))
                        ) {
                          maybeNodes.splice(i, 1);
                          break b;
                        }
                    currentResource = hoistableRoot.createElement(flags);
                    setInitialProperties(currentResource, flags, current);
                    hoistableRoot.head.appendChild(currentResource);
                    break;
                  case "meta":
                    if (
                      (maybeNodes = getHydratableHoistableCache(
                        "meta",
                        "content",
                        hoistableRoot
                      ).get(flags + (current.content || "")))
                    )
                      for (i = 0; i < maybeNodes.length; i++)
                        if (
                          ((currentResource = maybeNodes[i]),
                          currentResource.getAttribute("content") ===
                            (null == current.content
                              ? null
                              : "" + current.content) &&
                            currentResource.getAttribute("name") ===
                              (null == current.name ? null : current.name) &&
                            currentResource.getAttribute("property") ===
                              (null == current.property
                                ? null
                                : current.property) &&
                            currentResource.getAttribute("http-equiv") ===
                              (null == current.httpEquiv
                                ? null
                                : current.httpEquiv) &&
                            currentResource.getAttribute("charset") ===
                              (null == current.charSet
                                ? null
                                : current.charSet))
                        ) {
                          maybeNodes.splice(i, 1);
                          break b;
                        }
                    currentResource = hoistableRoot.createElement(flags);
                    setInitialProperties(currentResource, flags, current);
                    hoistableRoot.head.appendChild(currentResource);
                    break;
                  default:
                    throw Error(formatProdErrorMessage(468, flags));
                }
                currentResource[internalInstanceKey] = finishedWork;
                markNodeAsHoistable(currentResource);
                flags = currentResource;
              }
              finishedWork.stateNode = flags;
            } else
              mountHoistable(
                hoistableRoot,
                finishedWork.type,
                finishedWork.stateNode
              );
          else
            finishedWork.stateNode = acquireResource(
              hoistableRoot,
              flags,
              finishedWork.memoizedProps
            );
        else
          currentResource !== flags
            ? (null === currentResource
                ? null !== current.stateNode &&
                  ((current = current.stateNode),
                  current.parentNode.removeChild(current))
                : currentResource.count--,
              null === flags
                ? mountHoistable(
                    hoistableRoot,
                    finishedWork.type,
                    finishedWork.stateNode
                  )
                : acquireResource(
                    hoistableRoot,
                    flags,
                    finishedWork.memoizedProps
                  ))
            : null === flags &&
              null !== finishedWork.stateNode &&
              commitHostUpdate(
                finishedWork,
                finishedWork.memoizedProps,
                current.memoizedProps
              );
      }
      break;
    case 27:
      if (flags & 4 && null === finishedWork.alternate) {
        hoistableRoot = finishedWork.stateNode;
        currentResource = finishedWork.memoizedProps;
        try {
          for (var node = hoistableRoot.firstChild; node; ) {
            var nextNode = node.nextSibling,
              nodeName = node.nodeName;
            node[internalHoistableMarker] ||
              "HEAD" === nodeName ||
              "BODY" === nodeName ||
              "SCRIPT" === nodeName ||
              "STYLE" === nodeName ||
              ("LINK" === nodeName &&
                "stylesheet" === node.rel.toLowerCase()) ||
              hoistableRoot.removeChild(node);
            node = nextNode;
          }
          for (
            var type = finishedWork.type, attributes = hoistableRoot.attributes;
            attributes.length;

          )
            hoistableRoot.removeAttributeNode(attributes[0]);
          setInitialProperties(hoistableRoot, type, currentResource);
          hoistableRoot[internalInstanceKey] = finishedWork;
          hoistableRoot[internalPropsKey] = currentResource;
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
    case 5:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      flags & 512 &&
        (offscreenSubtreeWasHidden ||
          null === current ||
          safelyDetachRef(current, current.return));
      if (finishedWork.flags & 32) {
        hoistableRoot = finishedWork.stateNode;
        try {
          setTextContent(hoistableRoot, "");
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
      flags & 4 &&
        null != finishedWork.stateNode &&
        ((hoistableRoot = finishedWork.memoizedProps),
        commitHostUpdate(
          finishedWork,
          hoistableRoot,
          null !== current ? current.memoizedProps : hoistableRoot
        ));
      flags & 1024 && (needsFormReset = !0);
      break;
    case 6:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      if (flags & 4) {
        if (null === finishedWork.stateNode)
          throw Error(formatProdErrorMessage(162));
        flags = finishedWork.memoizedProps;
        current = finishedWork.stateNode;
        try {
          current.nodeValue = flags;
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
      break;
    case 3:
      tagCaches = null;
      hoistableRoot = currentHoistableRoot;
      currentHoistableRoot = getHoistableRoot(root.containerInfo);
      recursivelyTraverseMutationEffects(root, finishedWork);
      currentHoistableRoot = hoistableRoot;
      commitReconciliationEffects(finishedWork);
      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)
        try {
          retryIfBlockedOn(root.containerInfo);
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      needsFormReset &&
        ((needsFormReset = !1), recursivelyResetForms(finishedWork));
      break;
    case 4:
      flags = currentHoistableRoot;
      currentHoistableRoot = getHoistableRoot(
        finishedWork.stateNode.containerInfo
      );
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      currentHoistableRoot = flags;
      break;
    case 12:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      break;
    case 13:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      finishedWork.child.flags & 8192 &&
        (null !== finishedWork.memoizedState) !==
          (null !== current && null !== current.memoizedState) &&
        (globalMostRecentFallbackTime = now());
      flags & 4 &&
        ((flags = finishedWork.updateQueue),
        null !== flags &&
          ((finishedWork.updateQueue = null),
          attachSuspenseRetryListeners(finishedWork, flags)));
      break;
    case 22:
      flags & 512 &&
        (offscreenSubtreeWasHidden ||
          null === current ||
          safelyDetachRef(current, current.return));
      node = null !== finishedWork.memoizedState;
      nextNode = null !== current && null !== current.memoizedState;
      nodeName = offscreenSubtreeIsHidden;
      type = offscreenSubtreeWasHidden;
      offscreenSubtreeIsHidden = nodeName || node;
      offscreenSubtreeWasHidden = type || nextNode;
      recursivelyTraverseMutationEffects(root, finishedWork);
      offscreenSubtreeWasHidden = type;
      offscreenSubtreeIsHidden = nodeName;
      commitReconciliationEffects(finishedWork);
      root = finishedWork.stateNode;
      root._current = finishedWork;
      root._visibility &= -3;
      root._visibility |= root._pendingVisibility & 2;
      if (
        flags & 8192 &&
        ((root._visibility = node
          ? root._visibility & -2
          : root._visibility | 1),
        node &&
          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
          null === current ||
            nextNode ||
            root ||
            recursivelyTraverseDisappearLayoutEffects(finishedWork)),
        null === finishedWork.memoizedProps ||
          "manual" !== finishedWork.memoizedProps.mode)
      )
        a: for (current = null, root = finishedWork; ; ) {
          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
            if (null === current) {
              nextNode = current = root;
              try {
                if (((hoistableRoot = nextNode.stateNode), node))
                  (currentResource = hoistableRoot.style),
                    "function" === typeof currentResource.setProperty
                      ? currentResource.setProperty(
                          "display",
                          "none",
                          "important"
                        )
                      : (currentResource.display = "none");
                else {
                  maybeNodes = nextNode.stateNode;
                  i = nextNode.memoizedProps.style;
                  var display =
                    void 0 !== i && null !== i && i.hasOwnProperty("display")
                      ? i.display
                      : null;
                  maybeNodes.style.display =
                    null == display || "boolean" === typeof display
                      ? ""
                      : ("" + display).trim();
                }
              } catch (error) {
                captureCommitPhaseError(nextNode, nextNode.return, error);
              }
            }
          } else if (6 === root.tag) {
            if (null === current) {
              nextNode = root;
              try {
                nextNode.stateNode.nodeValue = node
                  ? ""
                  : nextNode.memoizedProps;
              } catch (error) {
                captureCommitPhaseError(nextNode, nextNode.return, error);
              }
            }
          } else if (
            ((22 !== root.tag && 23 !== root.tag) ||
              null === root.memoizedState ||
              root === finishedWork) &&
            null !== root.child
          ) {
            root.child.return = root;
            root = root.child;
            continue;
          }
          if (root === finishedWork) break a;
          for (; null === root.sibling; ) {
            if (null === root.return || root.return === finishedWork) break a;
            current === root && (current = null);
            root = root.return;
          }
          current === root && (current = null);
          root.sibling.return = root.return;
          root = root.sibling;
        }
      flags & 4 &&
        ((flags = finishedWork.updateQueue),
        null !== flags &&
          ((current = flags.retryQueue),
          null !== current &&
            ((flags.retryQueue = null),
            attachSuspenseRetryListeners(finishedWork, current))));
      break;
    case 19:
      recursivelyTraverseMutationEffects(root, finishedWork);
      commitReconciliationEffects(finishedWork);
      flags & 4 &&
        ((flags = finishedWork.updateQueue),
        null !== flags &&
          ((finishedWork.updateQueue = null),
          attachSuspenseRetryListeners(finishedWork, flags)));
      break;
    case 21:
      break;
    default:
      recursivelyTraverseMutationEffects(root, finishedWork),
        commitReconciliationEffects(finishedWork);
  }
}
function commitReconciliationEffects(finishedWork) {
  var flags = finishedWork.flags;
  if (flags & 2) {
    try {
      if (27 !== finishedWork.tag) {
        a: {
          for (var parent = finishedWork.return; null !== parent; ) {
            if (isHostParent(parent)) {
              var JSCompiler_inline_result = parent;
              break a;
            }
            parent = parent.return;
          }
          throw Error(formatProdErrorMessage(160));
        }
        switch (JSCompiler_inline_result.tag) {
          case 27:
            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
              before = getHostSibling(finishedWork);
            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
            break;
          case 5:
            var parent$113 = JSCompiler_inline_result.stateNode;
            JSCompiler_inline_result.flags & 32 &&
              (setTextContent(parent$113, ""),
              (JSCompiler_inline_result.flags &= -33));
            var before$114 = getHostSibling(finishedWork);
            insertOrAppendPlacementNode(finishedWork, before$114, parent$113);
            break;
          case 3:
          case 4:
            var parent$115 = JSCompiler_inline_result.stateNode.containerInfo,
              before$116 = getHostSibling(finishedWork);
            insertOrAppendPlacementNodeIntoContainer(
              finishedWork,
              before$116,
              parent$115
            );
            break;
          default:
            throw Error(formatProdErrorMessage(161));
        }
      }
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
    finishedWork.flags &= -3;
  }
  flags & 4096 && (finishedWork.flags &= -4097);
}
function recursivelyResetForms(parentFiber) {
  if (parentFiber.subtreeFlags & 1024)
    for (parentFiber = parentFiber.child; null !== parentFiber; ) {
      var fiber = parentFiber;
      recursivelyResetForms(fiber);
      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
      parentFiber = parentFiber.sibling;
    }
}
function recursivelyTraverseLayoutEffects(root, parentFiber) {
  if (parentFiber.subtreeFlags & 8772)
    for (parentFiber = parentFiber.child; null !== parentFiber; )
      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),
        (parentFiber = parentFiber.sibling);
}
function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
    var finishedWork = parentFiber;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);
        recursivelyTraverseDisappearLayoutEffects(finishedWork);
        break;
      case 1:
        safelyDetachRef(finishedWork, finishedWork.return);
        var instance = finishedWork.stateNode;
        "function" === typeof instance.componentWillUnmount &&
          safelyCallComponentWillUnmount(
            finishedWork,
            finishedWork.return,
            instance
          );
        recursivelyTraverseDisappearLayoutEffects(finishedWork);
        break;
      case 26:
      case 27:
      case 5:
        safelyDetachRef(finishedWork, finishedWork.return);
        recursivelyTraverseDisappearLayoutEffects(finishedWork);
        break;
      case 22:
        safelyDetachRef(finishedWork, finishedWork.return);
        null === finishedWork.memoizedState &&
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
        break;
      default:
        recursivelyTraverseDisappearLayoutEffects(finishedWork);
    }
    parentFiber = parentFiber.sibling;
  }
}
function recursivelyTraverseReappearLayoutEffects(
  finishedRoot$jscomp$0,
  parentFiber,
  includeWorkInProgressEffects
) {
  includeWorkInProgressEffects =
    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
    var current = parentFiber.alternate,
      finishedRoot = finishedRoot$jscomp$0,
      finishedWork = parentFiber,
      flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
        commitHookEffectListMount(4, finishedWork);
        break;
      case 1:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
        current = finishedWork;
        finishedRoot = current.stateNode;
        if ("function" === typeof finishedRoot.componentDidMount)
          try {
            finishedRoot.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(current, current.return, error);
          }
        current = finishedWork;
        finishedRoot = current.updateQueue;
        if (null !== finishedRoot) {
          var instance = current.stateNode;
          try {
            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;
            if (null !== hiddenCallbacks)
              for (
                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;
                finishedRoot < hiddenCallbacks.length;
                finishedRoot++
              )
                callCallback(hiddenCallbacks[finishedRoot], instance);
          } catch (error) {
            captureCommitPhaseError(current, current.return, error);
          }
        }
        includeWorkInProgressEffects &&
          flags & 64 &&
          commitClassCallbacks(finishedWork);
        safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 26:
      case 27:
      case 5:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
        includeWorkInProgressEffects &&
          null === current &&
          flags & 4 &&
          commitHostMount(finishedWork);
        safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 12:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
        break;
      case 13:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
        includeWorkInProgressEffects &&
          flags & 4 &&
          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
        break;
      case 22:
        null === finishedWork.memoizedState &&
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
        safelyAttachRef(finishedWork, finishedWork.return);
        break;
      default:
        recursivelyTraverseReappearLayoutEffects(
          finishedRoot,
          finishedWork,
          includeWorkInProgressEffects
        );
    }
    parentFiber = parentFiber.sibling;
  }
}
function commitOffscreenPassiveMountEffects(current, finishedWork) {
  var previousCache = null;
  null !== current &&
    null !== current.memoizedState &&
    null !== current.memoizedState.cachePool &&
    (previousCache = current.memoizedState.cachePool.pool);
  current = null;
  null !== finishedWork.memoizedState &&
    null !== finishedWork.memoizedState.cachePool &&
    (current = finishedWork.memoizedState.cachePool.pool);
  current !== previousCache &&
    (null != current && current.refCount++,
    null != previousCache && releaseCache(previousCache));
}
function commitCachePassiveMountEffect(current, finishedWork) {
  current = null;
  null !== finishedWork.alternate &&
    (current = finishedWork.alternate.memoizedState.cache);
  finishedWork = finishedWork.memoizedState.cache;
  finishedWork !== current &&
    (finishedWork.refCount++, null != current && releaseCache(current));
}
function recursivelyTraversePassiveMountEffects(
  root,
  parentFiber,
  committedLanes,
  committedTransitions
) {
  if (parentFiber.subtreeFlags & 10256)
    for (parentFiber = parentFiber.child; null !== parentFiber; )
      commitPassiveMountOnFiber(
        root,
        parentFiber,
        committedLanes,
        committedTransitions
      ),
        (parentFiber = parentFiber.sibling);
}
function commitPassiveMountOnFiber(
  finishedRoot,
  finishedWork,
  committedLanes,
  committedTransitions
) {
  var flags = finishedWork.flags;
  switch (finishedWork.tag) {
    case 0:
    case 11:
    case 15:
      recursivelyTraversePassiveMountEffects(
        finishedRoot,
        finishedWork,
        committedLanes,
        committedTransitions
      );
      flags & 2048 && commitHookEffectListMount(9, finishedWork);
      break;
    case 3:
      recursivelyTraversePassiveMountEffects(
        finishedRoot,
        finishedWork,
        committedLanes,
        committedTransitions
      );
      flags & 2048 &&
        ((finishedRoot = null),
        null !== finishedWork.alternate &&
          (finishedRoot = finishedWork.alternate.memoizedState.cache),
        (finishedWork = finishedWork.memoizedState.cache),
        finishedWork !== finishedRoot &&
          (finishedWork.refCount++,
          null != finishedRoot && releaseCache(finishedRoot)));
      break;
    case 12:
      if (flags & 2048) {
        recursivelyTraversePassiveMountEffects(
          finishedRoot,
          finishedWork,
          committedLanes,
          committedTransitions
        );
        finishedRoot = finishedWork.stateNode;
        try {
          var _finishedWork$memoize2 = finishedWork.memoizedProps,
            id = _finishedWork$memoize2.id,
            onPostCommit = _finishedWork$memoize2.onPostCommit;
          "function" === typeof onPostCommit &&
            onPostCommit(
              id,
              null === finishedWork.alternate ? "mount" : "update",
              finishedRoot.passiveEffectDuration,
              -0
            );
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      } else
        recursivelyTraversePassiveMountEffects(
          finishedRoot,
          finishedWork,
          committedLanes,
          committedTransitions
        );
      break;
    case 23:
      break;
    case 22:
      _finishedWork$memoize2 = finishedWork.stateNode;
      null !== finishedWork.memoizedState
        ? _finishedWork$memoize2._visibility & 4
          ? recursivelyTraversePassiveMountEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions
            )
          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)
        : _finishedWork$memoize2._visibility & 4
          ? recursivelyTraversePassiveMountEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions
            )
          : ((_finishedWork$memoize2._visibility |= 4),
            recursivelyTraverseReconnectPassiveEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions,
              0 !== (finishedWork.subtreeFlags & 10256)
            ));
      flags & 2048 &&
        commitOffscreenPassiveMountEffects(
          finishedWork.alternate,
          finishedWork
        );
      break;
    case 24:
      recursivelyTraversePassiveMountEffects(
        finishedRoot,
        finishedWork,
        committedLanes,
        committedTransitions
      );
      flags & 2048 &&
        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
      break;
    default:
      recursivelyTraversePassiveMountEffects(
        finishedRoot,
        finishedWork,
        committedLanes,
        committedTransitions
      );
  }
}
function recursivelyTraverseReconnectPassiveEffects(
  finishedRoot$jscomp$0,
  parentFiber,
  committedLanes$jscomp$0,
  committedTransitions$jscomp$0,
  includeWorkInProgressEffects
) {
  includeWorkInProgressEffects =
    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
    var finishedRoot = finishedRoot$jscomp$0,
      finishedWork = parentFiber,
      committedLanes = committedLanes$jscomp$0,
      committedTransitions = committedTransitions$jscomp$0,
      flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraverseReconnectPassiveEffects(
          finishedRoot,
          finishedWork,
          committedLanes,
          committedTransitions,
          includeWorkInProgressEffects
        );
        commitHookEffectListMount(8, finishedWork);
        break;
      case 23:
        break;
      case 22:
        var instance = finishedWork.stateNode;
        null !== finishedWork.memoizedState
          ? instance._visibility & 4
            ? recursivelyTraverseReconnectPassiveEffects(
                finishedRoot,
                finishedWork,
                committedLanes,
                committedTransitions,
                includeWorkInProgressEffects
              )
            : recursivelyTraverseAtomicPassiveEffects(
                finishedRoot,
                finishedWork
              )
          : ((instance._visibility |= 4),
            recursivelyTraverseReconnectPassiveEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions,
              includeWorkInProgressEffects
            ));
        includeWorkInProgressEffects &&
          flags & 2048 &&
          commitOffscreenPassiveMountEffects(
            finishedWork.alternate,
            finishedWork
          );
        break;
      case 24:
        recursivelyTraverseReconnectPassiveEffects(
          finishedRoot,
          finishedWork,
          committedLanes,
          committedTransitions,
          includeWorkInProgressEffects
        );
        includeWorkInProgressEffects &&
          flags & 2048 &&
          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
        break;
      default:
        recursivelyTraverseReconnectPassiveEffects(
          finishedRoot,
          finishedWork,
          committedLanes,
          committedTransitions,
          includeWorkInProgressEffects
        );
    }
    parentFiber = parentFiber.sibling;
  }
}
function recursivelyTraverseAtomicPassiveEffects(
  finishedRoot$jscomp$0,
  parentFiber
) {
  if (parentFiber.subtreeFlags & 10256)
    for (parentFiber = parentFiber.child; null !== parentFiber; ) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 22:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 &&
            commitOffscreenPassiveMountEffects(
              finishedWork.alternate,
              finishedWork
            );
          break;
        case 24:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 &&
            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
      }
      parentFiber = parentFiber.sibling;
    }
}
var suspenseyCommitFlag = 8192;
function recursivelyAccumulateSuspenseyCommit(parentFiber) {
  if (parentFiber.subtreeFlags & suspenseyCommitFlag)
    for (parentFiber = parentFiber.child; null !== parentFiber; )
      accumulateSuspenseyCommitOnFiber(parentFiber),
        (parentFiber = parentFiber.sibling);
}
function accumulateSuspenseyCommitOnFiber(fiber) {
  switch (fiber.tag) {
    case 26:
      recursivelyAccumulateSuspenseyCommit(fiber);
      fiber.flags & suspenseyCommitFlag &&
        null !== fiber.memoizedState &&
        suspendResource(
          currentHoistableRoot,
          fiber.memoizedState,
          fiber.memoizedProps
        );
      break;
    case 5:
      recursivelyAccumulateSuspenseyCommit(fiber);
      break;
    case 3:
    case 4:
      var previousHoistableRoot = currentHoistableRoot;
      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);
      recursivelyAccumulateSuspenseyCommit(fiber);
      currentHoistableRoot = previousHoistableRoot;
      break;
    case 22:
      null === fiber.memoizedState &&
        ((previousHoistableRoot = fiber.alternate),
        null !== previousHoistableRoot &&
        null !== previousHoistableRoot.memoizedState
          ? ((previousHoistableRoot = suspenseyCommitFlag),
            (suspenseyCommitFlag = 16777216),
            recursivelyAccumulateSuspenseyCommit(fiber),
            (suspenseyCommitFlag = previousHoistableRoot))
          : recursivelyAccumulateSuspenseyCommit(fiber));
      break;
    default:
      recursivelyAccumulateSuspenseyCommit(fiber);
  }
}
function detachAlternateSiblings(parentFiber) {
  var previousFiber = parentFiber.alternate;
  if (
    null !== previousFiber &&
    ((parentFiber = previousFiber.child), null !== parentFiber)
  ) {
    previousFiber.child = null;
    do
      (previousFiber = parentFiber.sibling),
        (parentFiber.sibling = null),
        (parentFiber = previousFiber);
    while (null !== parentFiber);
  }
}
function recursivelyTraversePassiveUnmountEffects(parentFiber) {
  var deletions = parentFiber.deletions;
  if (0 !== (parentFiber.flags & 16)) {
    if (null !== deletions)
      for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
          childToDelete,
          parentFiber
        );
      }
    detachAlternateSiblings(parentFiber);
  }
  if (parentFiber.subtreeFlags & 10256)
    for (parentFiber = parentFiber.child; null !== parentFiber; )
      commitPassiveUnmountOnFiber(parentFiber),
        (parentFiber = parentFiber.sibling);
}
function commitPassiveUnmountOnFiber(finishedWork) {
  switch (finishedWork.tag) {
    case 0:
    case 11:
    case 15:
      recursivelyTraversePassiveUnmountEffects(finishedWork);
      finishedWork.flags & 2048 &&
        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);
      break;
    case 3:
      recursivelyTraversePassiveUnmountEffects(finishedWork);
      break;
    case 12:
      recursivelyTraversePassiveUnmountEffects(finishedWork);
      break;
    case 22:
      var instance = finishedWork.stateNode;
      null !== finishedWork.memoizedState &&
      instance._visibility & 4 &&
      (null === finishedWork.return || 13 !== finishedWork.return.tag)
        ? ((instance._visibility &= -5),
          recursivelyTraverseDisconnectPassiveEffects(finishedWork))
        : recursivelyTraversePassiveUnmountEffects(finishedWork);
      break;
    default:
      recursivelyTraversePassiveUnmountEffects(finishedWork);
  }
}
function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
  var deletions = parentFiber.deletions;
  if (0 !== (parentFiber.flags & 16)) {
    if (null !== deletions)
      for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
          childToDelete,
          parentFiber
        );
      }
    detachAlternateSiblings(parentFiber);
  }
  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
    deletions = parentFiber;
    switch (deletions.tag) {
      case 0:
      case 11:
      case 15:
        commitHookEffectListUnmount(8, deletions, deletions.return);
        recursivelyTraverseDisconnectPassiveEffects(deletions);
        break;
      case 22:
        i = deletions.stateNode;
        i._visibility & 4 &&
          ((i._visibility &= -5),
          recursivelyTraverseDisconnectPassiveEffects(deletions));
        break;
      default:
        recursivelyTraverseDisconnectPassiveEffects(deletions);
    }
    parentFiber = parentFiber.sibling;
  }
}
function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
  deletedSubtreeRoot,
  nearestMountedAncestor
) {
  for (; null !== nextEffect; ) {
    var fiber = nextEffect;
    switch (fiber.tag) {
      case 0:
      case 11:
      case 15:
        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);
        break;
      case 23:
      case 22:
        if (
          null !== fiber.memoizedState &&
          null !== fiber.memoizedState.cachePool
        ) {
          var cache = fiber.memoizedState.cachePool.pool;
          null != cache && cache.refCount++;
        }
        break;
      case 24:
        releaseCache(fiber.memoizedState.cache);
    }
    cache = fiber.child;
    if (null !== cache) (cache.return = fiber), (nextEffect = cache);
    else
      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {
        cache = nextEffect;
        var sibling = cache.sibling,
          returnFiber = cache.return;
        detachFiberAfterEffects(cache);
        if (cache === fiber) {
          nextEffect = null;
          break a;
        }
        if (null !== sibling) {
          sibling.return = returnFiber;
          nextEffect = sibling;
          break a;
        }
        nextEffect = returnFiber;
      }
  }
}
function FiberNode(tag, pendingProps, key, mode) {
  this.tag = tag;
  this.key = key;
  this.sibling =
    this.child =
    this.return =
    this.stateNode =
    this.type =
    this.elementType =
      null;
  this.index = 0;
  this.refCleanup = this.ref = null;
  this.pendingProps = pendingProps;
  this.dependencies =
    this.memoizedState =
    this.updateQueue =
    this.memoizedProps =
      null;
  this.mode = mode;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function createFiberImplClass(tag, pendingProps, key, mode) {
  return new FiberNode(tag, pendingProps, key, mode);
}
function shouldConstruct(Component) {
  Component = Component.prototype;
  return !(!Component || !Component.isReactComponent);
}
function createWorkInProgress(current, pendingProps) {
  var workInProgress = current.alternate;
  null === workInProgress
    ? ((workInProgress = createFiberImplClass(
        current.tag,
        pendingProps,
        current.key,
        current.mode
      )),
      (workInProgress.elementType = current.elementType),
      (workInProgress.type = current.type),
      (workInProgress.stateNode = current.stateNode),
      (workInProgress.alternate = current),
      (current.alternate = workInProgress))
    : ((workInProgress.pendingProps = pendingProps),
      (workInProgress.type = current.type),
      (workInProgress.flags = 0),
      (workInProgress.subtreeFlags = 0),
      (workInProgress.deletions = null));
  workInProgress.flags = current.flags & 31457280;
  workInProgress.childLanes = current.childLanes;
  workInProgress.lanes = current.lanes;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;
  pendingProps = current.dependencies;
  workInProgress.dependencies =
    null === pendingProps
      ? null
      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;
  workInProgress.refCleanup = current.refCleanup;
  return workInProgress;
}
function resetWorkInProgress(workInProgress, renderLanes) {
  workInProgress.flags &= 31457282;
  var current = workInProgress.alternate;
  null === current
    ? ((workInProgress.childLanes = 0),
      (workInProgress.lanes = renderLanes),
      (workInProgress.child = null),
      (workInProgress.subtreeFlags = 0),
      (workInProgress.memoizedProps = null),
      (workInProgress.memoizedState = null),
      (workInProgress.updateQueue = null),
      (workInProgress.dependencies = null),
      (workInProgress.stateNode = null))
    : ((workInProgress.childLanes = current.childLanes),
      (workInProgress.lanes = current.lanes),
      (workInProgress.child = current.child),
      (workInProgress.subtreeFlags = 0),
      (workInProgress.deletions = null),
      (workInProgress.memoizedProps = current.memoizedProps),
      (workInProgress.memoizedState = current.memoizedState),
      (workInProgress.updateQueue = current.updateQueue),
      (workInProgress.type = current.type),
      (renderLanes = current.dependencies),
      (workInProgress.dependencies =
        null === renderLanes
          ? null
          : {
              lanes: renderLanes.lanes,
              firstContext: renderLanes.firstContext
            }));
  return workInProgress;
}
function createFiberFromTypeAndProps(
  type,
  key,
  pendingProps,
  owner,
  mode,
  lanes
) {
  var fiberTag = 0;
  owner = type;
  if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);
  else if ("string" === typeof type)
    fiberTag = isHostHoistableType(
      type,
      pendingProps,
      contextStackCursor.current
    )
      ? 26
      : "html" === type || "head" === type || "body" === type
        ? 27
        : 5;
  else
    a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);
      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 24;
        break;
      case REACT_PROFILER_TYPE:
        return (
          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),
          (type.elementType = REACT_PROFILER_TYPE),
          (type.lanes = lanes),
          type
        );
      case REACT_SUSPENSE_TYPE:
        return (
          (type = createFiberImplClass(13, pendingProps, key, mode)),
          (type.elementType = REACT_SUSPENSE_TYPE),
          (type.lanes = lanes),
          type
        );
      case REACT_SUSPENSE_LIST_TYPE:
        return (
          (type = createFiberImplClass(19, pendingProps, key, mode)),
          (type.elementType = REACT_SUSPENSE_LIST_TYPE),
          (type.lanes = lanes),
          type
        );
      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);
      default:
        if ("object" === typeof type && null !== type)
          switch (type.$$typeof) {
            case REACT_PROVIDER_TYPE:
            case REACT_CONTEXT_TYPE:
              fiberTag = 10;
              break a;
            case REACT_CONSUMER_TYPE:
              fiberTag = 9;
              break a;
            case REACT_FORWARD_REF_TYPE:
              fiberTag = 11;
              break a;
            case REACT_MEMO_TYPE:
              fiberTag = 14;
              break a;
            case REACT_LAZY_TYPE:
              fiberTag = 16;
              owner = null;
              break a;
          }
        fiberTag = 29;
        pendingProps = Error(
          formatProdErrorMessage(130, null === type ? "null" : typeof type, "")
        );
        owner = null;
    }
  key = createFiberImplClass(fiberTag, pendingProps, key, mode);
  key.elementType = type;
  key.type = owner;
  key.lanes = lanes;
  return key;
}
function createFiberFromFragment(elements, mode, lanes, key) {
  elements = createFiberImplClass(7, elements, key, mode);
  elements.lanes = lanes;
  return elements;
}
function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
  pendingProps = createFiberImplClass(22, pendingProps, key, mode);
  pendingProps.elementType = REACT_OFFSCREEN_TYPE;
  pendingProps.lanes = lanes;
  var primaryChildInstance = {
    _visibility: 1,
    _pendingVisibility: 1,
    _pendingMarkers: null,
    _retryCache: null,
    _transitions: null,
    _current: null,
    detach: function () {
      var fiber = primaryChildInstance._current;
      if (null === fiber) throw Error(formatProdErrorMessage(456));
      if (0 === (primaryChildInstance._pendingVisibility & 2)) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root &&
          ((primaryChildInstance._pendingVisibility |= 2),
          scheduleUpdateOnFiber(root, fiber, 2));
      }
    },
    attach: function () {
      var fiber = primaryChildInstance._current;
      if (null === fiber) throw Error(formatProdErrorMessage(456));
      if (0 !== (primaryChildInstance._pendingVisibility & 2)) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root &&
          ((primaryChildInstance._pendingVisibility &= -3),
          scheduleUpdateOnFiber(root, fiber, 2));
      }
    }
  };
  pendingProps.stateNode = primaryChildInstance;
  return pendingProps;
}
function createFiberFromText(content, mode, lanes) {
  content = createFiberImplClass(6, content, null, mode);
  content.lanes = lanes;
  return content;
}
function createFiberFromPortal(portal, mode, lanes) {
  mode = createFiberImplClass(
    4,
    null !== portal.children ? portal.children : [],
    portal.key,
    mode
  );
  mode.lanes = lanes;
  mode.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    implementation: portal.implementation
  };
  return mode;
}
function markUpdate(workInProgress) {
  workInProgress.flags |= 4;
}
function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
  if ("stylesheet" !== resource.type || 0 !== (resource.state.loading & 4))
    workInProgress.flags &= -16777217;
  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {
    resource = suspenseHandlerStackCursor.current;
    if (
      null !== resource &&
      ((workInProgressRootRenderLanes & 4194176) ===
      workInProgressRootRenderLanes
        ? null !== shellBoundary
        : ((workInProgressRootRenderLanes & 62914560) !==
            workInProgressRootRenderLanes &&
            0 === (workInProgressRootRenderLanes & 536870912)) ||
          resource !== shellBoundary)
    )
      throw (
        ((suspendedThenable = noopSuspenseyCommitThenable),
        SuspenseyCommitException)
      );
    workInProgress.flags |= 8192;
  }
}
function scheduleRetryEffect(workInProgress, retryQueue) {
  null !== retryQueue && (workInProgress.flags |= 4);
  workInProgress.flags & 16384 &&
    ((retryQueue =
      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
    (workInProgress.lanes |= retryQueue),
    (workInProgressSuspendedRetryLanes |= retryQueue));
}
function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  if (!isHydrating)
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;
        for (var lastTailNode = null; null !== hasRenderedATailFallback; )
          null !== hasRenderedATailFallback.alternate &&
            (lastTailNode = hasRenderedATailFallback),
            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);
        null === lastTailNode
          ? (renderState.tail = null)
          : (lastTailNode.sibling = null);
        break;
      case "collapsed":
        lastTailNode = renderState.tail;
        for (var lastTailNode$131 = null; null !== lastTailNode; )
          null !== lastTailNode.alternate && (lastTailNode$131 = lastTailNode),
            (lastTailNode = lastTailNode.sibling);
        null === lastTailNode$131
          ? hasRenderedATailFallback || null === renderState.tail
            ? (renderState.tail = null)
            : (renderState.tail.sibling = null)
          : (lastTailNode$131.sibling = null);
    }
}
function bubbleProperties(completedWork) {
  var didBailout =
      null !== completedWork.alternate &&
      completedWork.alternate.child === completedWork.child,
    newChildLanes = 0,
    subtreeFlags = 0;
  if (didBailout)
    for (var child$132 = completedWork.child; null !== child$132; )
      (newChildLanes |= child$132.lanes | child$132.childLanes),
        (subtreeFlags |= child$132.subtreeFlags & 31457280),
        (subtreeFlags |= child$132.flags & 31457280),
        (child$132.return = completedWork),
        (child$132 = child$132.sibling);
  else
    for (child$132 = completedWork.child; null !== child$132; )
      (newChildLanes |= child$132.lanes | child$132.childLanes),
        (subtreeFlags |= child$132.subtreeFlags),
        (subtreeFlags |= child$132.flags),
        (child$132.return = completedWork),
        (child$132 = child$132.sibling);
  completedWork.subtreeFlags |= subtreeFlags;
  completedWork.childLanes = newChildLanes;
  return didBailout;
}
function completeWork(current, workInProgress, renderLanes) {
  var newProps = workInProgress.pendingProps;
  popTreeContext(workInProgress);
  switch (workInProgress.tag) {
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return bubbleProperties(workInProgress), null;
    case 1:
      return bubbleProperties(workInProgress), null;
    case 3:
      renderLanes = workInProgress.stateNode;
      newProps = null;
      null !== current && (newProps = current.memoizedState.cache);
      workInProgress.memoizedState.cache !== newProps &&
        (workInProgress.flags |= 2048);
      popProvider(CacheContext);
      popHostContainer();
      renderLanes.pendingContext &&
        ((renderLanes.context = renderLanes.pendingContext),
        (renderLanes.pendingContext = null));
      if (null === current || null === current.child)
        popHydrationState(workInProgress)
          ? markUpdate(workInProgress)
          : null === current ||
            (current.memoizedState.isDehydrated &&
              0 === (workInProgress.flags & 256)) ||
            ((workInProgress.flags |= 1024),
            null !== hydrationErrors &&
              (queueRecoverableErrors(hydrationErrors),
              (hydrationErrors = null)));
      bubbleProperties(workInProgress);
      return null;
    case 26:
      return (
        (renderLanes = workInProgress.memoizedState),
        null === current
          ? (markUpdate(workInProgress),
            null !== renderLanes
              ? (bubbleProperties(workInProgress),
                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))
              : (bubbleProperties(workInProgress),
                (workInProgress.flags &= -16777217)))
          : renderLanes
            ? renderLanes !== current.memoizedState
              ? (markUpdate(workInProgress),
                bubbleProperties(workInProgress),
                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))
              : (bubbleProperties(workInProgress),
                (workInProgress.flags &= -16777217))
            : (current.memoizedProps !== newProps && markUpdate(workInProgress),
              bubbleProperties(workInProgress),
              (workInProgress.flags &= -16777217)),
        null
      );
    case 27:
      popHostContext(workInProgress);
      renderLanes = rootInstanceStackCursor.current;
      var type = workInProgress.type;
      if (null !== current && null != workInProgress.stateNode)
        current.memoizedProps !== newProps && markUpdate(workInProgress);
      else {
        if (!newProps) {
          if (null === workInProgress.stateNode)
            throw Error(formatProdErrorMessage(166));
          bubbleProperties(workInProgress);
          return null;
        }
        current = contextStackCursor.current;
        popHydrationState(workInProgress)
          ? prepareToHydrateHostInstance(workInProgress, current)
          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),
            (workInProgress.stateNode = current),
            markUpdate(workInProgress));
      }
      bubbleProperties(workInProgress);
      return null;
    case 5:
      popHostContext(workInProgress);
      renderLanes = workInProgress.type;
      if (null !== current && null != workInProgress.stateNode)
        current.memoizedProps !== newProps && markUpdate(workInProgress);
      else {
        if (!newProps) {
          if (null === workInProgress.stateNode)
            throw Error(formatProdErrorMessage(166));
          bubbleProperties(workInProgress);
          return null;
        }
        current = contextStackCursor.current;
        if (popHydrationState(workInProgress))
          prepareToHydrateHostInstance(workInProgress, current);
        else {
          type = getOwnerDocumentFromRootContainer(
            rootInstanceStackCursor.current
          );
          switch (current) {
            case 1:
              current = type.createElementNS(
                "http://www.w3.org/2000/svg",
                renderLanes
              );
              break;
            case 2:
              current = type.createElementNS(
                "http://www.w3.org/1998/Math/MathML",
                renderLanes
              );
              break;
            default:
              switch (renderLanes) {
                case "svg":
                  current = type.createElementNS(
                    "http://www.w3.org/2000/svg",
                    renderLanes
                  );
                  break;
                case "math":
                  current = type.createElementNS(
                    "http://www.w3.org/1998/Math/MathML",
                    renderLanes
                  );
                  break;
                case "script":
                  current = type.createElement("div");
                  current.innerHTML = "<script>\x3c/script>";
                  current = current.removeChild(current.firstChild);
                  break;
                case "select":
                  current =
                    "string" === typeof newProps.is
                      ? type.createElement("select", { is: newProps.is })
                      : type.createElement("select");
                  newProps.multiple
                    ? (current.multiple = !0)
                    : newProps.size && (current.size = newProps.size);
                  break;
                default:
                  current =
                    "string" === typeof newProps.is
                      ? type.createElement(renderLanes, { is: newProps.is })
                      : type.createElement(renderLanes);
              }
          }
          current[internalInstanceKey] = workInProgress;
          current[internalPropsKey] = newProps;
          a: for (type = workInProgress.child; null !== type; ) {
            if (5 === type.tag || 6 === type.tag)
              current.appendChild(type.stateNode);
            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {
              type.child.return = type;
              type = type.child;
              continue;
            }
            if (type === workInProgress) break a;
            for (; null === type.sibling; ) {
              if (null === type.return || type.return === workInProgress)
                break a;
              type = type.return;
            }
            type.sibling.return = type.return;
            type = type.sibling;
          }
          workInProgress.stateNode = current;
          a: switch (
            (setInitialProperties(current, renderLanes, newProps), renderLanes)
          ) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              current = !!newProps.autoFocus;
              break a;
            case "img":
              current = !0;
              break a;
            default:
              current = !1;
          }
          current && markUpdate(workInProgress);
        }
      }
      bubbleProperties(workInProgress);
      workInProgress.flags &= -16777217;
      return null;
    case 6:
      if (current && null != workInProgress.stateNode)
        current.memoizedProps !== newProps && markUpdate(workInProgress);
      else {
        if ("string" !== typeof newProps && null === workInProgress.stateNode)
          throw Error(formatProdErrorMessage(166));
        current = rootInstanceStackCursor.current;
        if (popHydrationState(workInProgress)) {
          current = workInProgress.stateNode;
          renderLanes = workInProgress.memoizedProps;
          newProps = null;
          type = hydrationParentFiber;
          if (null !== type)
            switch (type.tag) {
              case 27:
              case 5:
                newProps = type.memoizedProps;
            }
          current[internalInstanceKey] = workInProgress;
          current =
            current.nodeValue === renderLanes ||
            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||
            checkForUnmatchedText(current.nodeValue, renderLanes)
              ? !0
              : !1;
          current || throwOnHydrationMismatch(workInProgress);
        } else
          (current =
            getOwnerDocumentFromRootContainer(current).createTextNode(
              newProps
            )),
            (current[internalInstanceKey] = workInProgress),
            (workInProgress.stateNode = current);
      }
      bubbleProperties(workInProgress);
      return null;
    case 13:
      newProps = workInProgress.memoizedState;
      if (
        null === current ||
        (null !== current.memoizedState &&
          null !== current.memoizedState.dehydrated)
      ) {
        type = popHydrationState(workInProgress);
        if (null !== newProps && null !== newProps.dehydrated) {
          if (null === current) {
            if (!type) throw Error(formatProdErrorMessage(318));
            type = workInProgress.memoizedState;
            type = null !== type ? type.dehydrated : null;
            if (!type) throw Error(formatProdErrorMessage(317));
            type[internalInstanceKey] = workInProgress;
          } else
            resetHydrationState(),
              0 === (workInProgress.flags & 128) &&
                (workInProgress.memoizedState = null),
              (workInProgress.flags |= 4);
          bubbleProperties(workInProgress);
          type = !1;
        } else
          null !== hydrationErrors &&
            (queueRecoverableErrors(hydrationErrors), (hydrationErrors = null)),
            (type = !0);
        if (!type) {
          if (workInProgress.flags & 256)
            return popSuspenseHandler(workInProgress), workInProgress;
          popSuspenseHandler(workInProgress);
          return null;
        }
      }
      popSuspenseHandler(workInProgress);
      if (0 !== (workInProgress.flags & 128))
        return (workInProgress.lanes = renderLanes), workInProgress;
      renderLanes = null !== newProps;
      current = null !== current && null !== current.memoizedState;
      if (renderLanes) {
        newProps = workInProgress.child;
        type = null;
        null !== newProps.alternate &&
          null !== newProps.alternate.memoizedState &&
          null !== newProps.alternate.memoizedState.cachePool &&
          (type = newProps.alternate.memoizedState.cachePool.pool);
        var cache$144 = null;
        null !== newProps.memoizedState &&
          null !== newProps.memoizedState.cachePool &&
          (cache$144 = newProps.memoizedState.cachePool.pool);
        cache$144 !== type && (newProps.flags |= 2048);
      }
      renderLanes !== current &&
        renderLanes &&
        (workInProgress.child.flags |= 8192);
      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
      bubbleProperties(workInProgress);
      return null;
    case 4:
      return (
        popHostContainer(),
        null === current &&
          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),
        bubbleProperties(workInProgress),
        null
      );
    case 10:
      return (
        popProvider(workInProgress.type), bubbleProperties(workInProgress), null
      );
    case 19:
      pop(suspenseStackCursor);
      type = workInProgress.memoizedState;
      if (null === type) return bubbleProperties(workInProgress), null;
      newProps = 0 !== (workInProgress.flags & 128);
      cache$144 = type.rendering;
      if (null === cache$144)
        if (newProps) cutOffTailIfNeeded(type, !1);
        else {
          if (
            0 !== workInProgressRootExitStatus ||
            (null !== current && 0 !== (current.flags & 128))
          )
            for (current = workInProgress.child; null !== current; ) {
              cache$144 = findFirstSuspended(current);
              if (null !== cache$144) {
                workInProgress.flags |= 128;
                cutOffTailIfNeeded(type, !1);
                current = cache$144.updateQueue;
                workInProgress.updateQueue = current;
                scheduleRetryEffect(workInProgress, current);
                workInProgress.subtreeFlags = 0;
                current = renderLanes;
                for (renderLanes = workInProgress.child; null !== renderLanes; )
                  resetWorkInProgress(renderLanes, current),
                    (renderLanes = renderLanes.sibling);
                push(
                  suspenseStackCursor,
                  (suspenseStackCursor.current & 1) | 2
                );
                return workInProgress.child;
              }
              current = current.sibling;
            }
          null !== type.tail &&
            now() > workInProgressRootRenderTargetTime &&
            ((workInProgress.flags |= 128),
            (newProps = !0),
            cutOffTailIfNeeded(type, !1),
            (workInProgress.lanes = 4194304));
        }
      else {
        if (!newProps)
          if (((current = findFirstSuspended(cache$144)), null !== current)) {
            if (
              ((workInProgress.flags |= 128),
              (newProps = !0),
              (current = current.updateQueue),
              (workInProgress.updateQueue = current),
              scheduleRetryEffect(workInProgress, current),
              cutOffTailIfNeeded(type, !0),
              null === type.tail &&
                "hidden" === type.tailMode &&
                !cache$144.alternate &&
                !isHydrating)
            )
              return bubbleProperties(workInProgress), null;
          } else
            2 * now() - type.renderingStartTime >
              workInProgressRootRenderTargetTime &&
              536870912 !== renderLanes &&
              ((workInProgress.flags |= 128),
              (newProps = !0),
              cutOffTailIfNeeded(type, !1),
              (workInProgress.lanes = 4194304));
        type.isBackwards
          ? ((cache$144.sibling = workInProgress.child),
            (workInProgress.child = cache$144))
          : ((current = type.last),
            null !== current
              ? (current.sibling = cache$144)
              : (workInProgress.child = cache$144),
            (type.last = cache$144));
      }
      if (null !== type.tail)
        return (
          (workInProgress = type.tail),
          (type.rendering = workInProgress),
          (type.tail = workInProgress.sibling),
          (type.renderingStartTime = now()),
          (workInProgress.sibling = null),
          (current = suspenseStackCursor.current),
          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),
          workInProgress
        );
      bubbleProperties(workInProgress);
      return null;
    case 22:
    case 23:
      return (
        popSuspenseHandler(workInProgress),
        popHiddenContext(),
        (newProps = null !== workInProgress.memoizedState),
        null !== current
          ? (null !== current.memoizedState) !== newProps &&
            (workInProgress.flags |= 8192)
          : newProps && (workInProgress.flags |= 8192),
        newProps
          ? 0 !== (renderLanes & 536870912) &&
            0 === (workInProgress.flags & 128) &&
            (bubbleProperties(workInProgress),
            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))
          : bubbleProperties(workInProgress),
        (renderLanes = workInProgress.updateQueue),
        null !== renderLanes &&
          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),
        (renderLanes = null),
        null !== current &&
          null !== current.memoizedState &&
          null !== current.memoizedState.cachePool &&
          (renderLanes = current.memoizedState.cachePool.pool),
        (newProps = null),
        null !== workInProgress.memoizedState &&
          null !== workInProgress.memoizedState.cachePool &&
          (newProps = workInProgress.memoizedState.cachePool.pool),
        newProps !== renderLanes && (workInProgress.flags |= 2048),
        null !== current && pop(resumedCache),
        null
      );
    case 24:
      return (
        (renderLanes = null),
        null !== current && (renderLanes = current.memoizedState.cache),
        workInProgress.memoizedState.cache !== renderLanes &&
          (workInProgress.flags |= 2048),
        popProvider(CacheContext),
        bubbleProperties(workInProgress),
        null
      );
    case 25:
      return null;
  }
  throw Error(formatProdErrorMessage(156, workInProgress.tag));
}
function unwindWork(current, workInProgress) {
  popTreeContext(workInProgress);
  switch (workInProgress.tag) {
    case 1:
      return (
        (current = workInProgress.flags),
        current & 65536
          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)
          : null
      );
    case 3:
      return (
        popProvider(CacheContext),
        popHostContainer(),
        (current = workInProgress.flags),
        0 !== (current & 65536) && 0 === (current & 128)
          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)
          : null
      );
    case 26:
    case 27:
    case 5:
      return popHostContext(workInProgress), null;
    case 13:
      popSuspenseHandler(workInProgress);
      current = workInProgress.memoizedState;
      if (null !== current && null !== current.dehydrated) {
        if (null === workInProgress.alternate)
          throw Error(formatProdErrorMessage(340));
        resetHydrationState();
      }
      current = workInProgress.flags;
      return current & 65536
        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)
        : null;
    case 19:
      return pop(suspenseStackCursor), null;
    case 4:
      return popHostContainer(), null;
    case 10:
      return popProvider(workInProgress.type), null;
    case 22:
    case 23:
      return (
        popSuspenseHandler(workInProgress),
        popHiddenContext(),
        null !== current && pop(resumedCache),
        (current = workInProgress.flags),
        current & 65536
          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)
          : null
      );
    case 24:
      return popProvider(CacheContext), null;
    case 25:
      return null;
    default:
      return null;
  }
}
function unwindInterruptedWork(current, interruptedWork) {
  popTreeContext(interruptedWork);
  switch (interruptedWork.tag) {
    case 3:
      popProvider(CacheContext);
      popHostContainer();
      break;
    case 26:
    case 27:
    case 5:
      popHostContext(interruptedWork);
      break;
    case 4:
      popHostContainer();
      break;
    case 13:
      popSuspenseHandler(interruptedWork);
      break;
    case 19:
      pop(suspenseStackCursor);
      break;
    case 10:
      popProvider(interruptedWork.type);
      break;
    case 22:
    case 23:
      popSuspenseHandler(interruptedWork);
      popHiddenContext();
      null !== current && pop(resumedCache);
      break;
    case 24:
      popProvider(CacheContext);
  }
}
var DefaultAsyncDispatcher = {
    getCacheForType: function (resourceType) {
      var cache = readContext(CacheContext),
        cacheForType = cache.data.get(resourceType);
      void 0 === cacheForType &&
        ((cacheForType = resourceType()),
        cache.data.set(resourceType, cacheForType));
      return cacheForType;
    }
  },
  PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
  executionContext = 0,
  workInProgressRoot = null,
  workInProgress = null,
  workInProgressRootRenderLanes = 0,
  workInProgressSuspendedReason = 0,
  workInProgressThrownValue = null,
  workInProgressRootDidSkipSuspendedSiblings = !1,
  workInProgressRootIsPrerendering = !1,
  workInProgressRootDidAttachPingListener = !1,
  entangledRenderLanes = 0,
  workInProgressRootExitStatus = 0,
  workInProgressRootSkippedLanes = 0,
  workInProgressRootInterleavedUpdatedLanes = 0,
  workInProgressRootPingedLanes = 0,
  workInProgressDeferredLane = 0,
  workInProgressSuspendedRetryLanes = 0,
  workInProgressRootConcurrentErrors = null,
  workInProgressRootRecoverableErrors = null,
  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
  globalMostRecentFallbackTime = 0,
  workInProgressRootRenderTargetTime = Infinity,
  workInProgressTransitions = null,
  legacyErrorBoundariesThatAlreadyFailed = null,
  rootDoesHavePassiveEffects = !1,
  rootWithPendingPassiveEffects = null,
  pendingPassiveEffectsLanes = 0,
  pendingPassiveEffectsRemainingLanes = 0,
  pendingPassiveTransitions = null,
  nestedUpdateCount = 0,
  rootWithNestedUpdates = null;
function requestUpdateLane() {
  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)
    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
  if (null !== ReactSharedInternals.T) {
    var actionScopeLane = currentEntangledLane;
    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();
  }
  return resolveUpdatePriority();
}
function requestDeferredLane() {
  0 === workInProgressDeferredLane &&
    (workInProgressDeferredLane =
      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating
        ? claimNextTransitionLane()
        : 536870912);
  var suspenseHandler = suspenseHandlerStackCursor.current;
  null !== suspenseHandler && (suspenseHandler.flags |= 32);
  return workInProgressDeferredLane;
}
function scheduleUpdateOnFiber(root, fiber, lane) {
  if (
    (root === workInProgressRoot && 2 === workInProgressSuspendedReason) ||
    null !== root.cancelPendingCommit
  )
    prepareFreshStack(root, 0),
      markRootSuspended(
        root,
        workInProgressRootRenderLanes,
        workInProgressDeferredLane,
        !1
      );
  markRootUpdated$1(root, lane);
  if (0 === (executionContext & 2) || root !== workInProgressRoot)
    root === workInProgressRoot &&
      (0 === (executionContext & 2) &&
        (workInProgressRootInterleavedUpdatedLanes |= lane),
      4 === workInProgressRootExitStatus &&
        markRootSuspended(
          root,
          workInProgressRootRenderLanes,
          workInProgressDeferredLane,
          !1
        )),
      ensureRootIsScheduled(root);
}
function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));
  var shouldTimeSlice =
      (!forceSync &&
        0 === (lanes & 60) &&
        0 === (lanes & root$jscomp$0.expiredLanes)) ||
      checkIfRootIsPrerendering(root$jscomp$0, lanes),
    exitStatus = shouldTimeSlice
      ? renderRootConcurrent(root$jscomp$0, lanes)
      : renderRootSync(root$jscomp$0, lanes, !0),
    renderWasConcurrent = shouldTimeSlice;
  do {
    if (0 === exitStatus) {
      workInProgressRootIsPrerendering &&
        !shouldTimeSlice &&
        markRootSuspended(root$jscomp$0, lanes, 0, !1);
      break;
    } else if (6 === exitStatus)
      markRootSuspended(
        root$jscomp$0,
        lanes,
        0,
        !workInProgressRootDidSkipSuspendedSiblings
      );
    else {
      forceSync = root$jscomp$0.current.alternate;
      if (
        renderWasConcurrent &&
        !isRenderConsistentWithExternalStores(forceSync)
      ) {
        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);
        renderWasConcurrent = !1;
        continue;
      }
      if (2 === exitStatus) {
        renderWasConcurrent = lanes;
        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)
          var JSCompiler_inline_result = 0;
        else
          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),
            (JSCompiler_inline_result =
              0 !== JSCompiler_inline_result
                ? JSCompiler_inline_result
                : JSCompiler_inline_result & 536870912
                  ? 536870912
                  : 0);
        if (0 !== JSCompiler_inline_result) {
          lanes = JSCompiler_inline_result;
          a: {
            var root = root$jscomp$0;
            exitStatus = workInProgressRootConcurrentErrors;
            var wasRootDehydrated = root.current.memoizedState.isDehydrated;
            wasRootDehydrated &&
              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);
            JSCompiler_inline_result = renderRootSync(
              root,
              JSCompiler_inline_result,
              !1
            );
            if (2 !== JSCompiler_inline_result) {
              if (
                workInProgressRootDidAttachPingListener &&
                !wasRootDehydrated
              ) {
                root.errorRecoveryDisabledLanes |= renderWasConcurrent;
                workInProgressRootInterleavedUpdatedLanes |=
                  renderWasConcurrent;
                exitStatus = 4;
                break a;
              }
              renderWasConcurrent = workInProgressRootRecoverableErrors;
              workInProgressRootRecoverableErrors = exitStatus;
              null !== renderWasConcurrent &&
                queueRecoverableErrors(renderWasConcurrent);
            }
            exitStatus = JSCompiler_inline_result;
          }
          renderWasConcurrent = !1;
          if (2 !== exitStatus) continue;
        }
      }
      if (1 === exitStatus) {
        prepareFreshStack(root$jscomp$0, 0);
        markRootSuspended(root$jscomp$0, lanes, 0, !0);
        break;
      }
      a: {
        shouldTimeSlice = root$jscomp$0;
        switch (exitStatus) {
          case 0:
          case 1:
            throw Error(formatProdErrorMessage(345));
          case 4:
            if ((lanes & 4194176) === lanes) {
              markRootSuspended(
                shouldTimeSlice,
                lanes,
                workInProgressDeferredLane,
                !workInProgressRootDidSkipSuspendedSiblings
              );
              break a;
            }
            break;
          case 2:
            workInProgressRootRecoverableErrors = null;
            break;
          case 3:
          case 5:
            break;
          default:
            throw Error(formatProdErrorMessage(329));
        }
        shouldTimeSlice.finishedWork = forceSync;
        shouldTimeSlice.finishedLanes = lanes;
        if (
          (lanes & 62914560) === lanes &&
          ((renderWasConcurrent = globalMostRecentFallbackTime + 300 - now()),
          10 < renderWasConcurrent)
        ) {
          markRootSuspended(
            shouldTimeSlice,
            lanes,
            workInProgressDeferredLane,
            !workInProgressRootDidSkipSuspendedSiblings
          );
          if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;
          shouldTimeSlice.timeoutHandle = scheduleTimeout(
            commitRootWhenReady.bind(
              null,
              shouldTimeSlice,
              forceSync,
              workInProgressRootRecoverableErrors,
              workInProgressTransitions,
              workInProgressRootDidIncludeRecursiveRenderUpdate,
              lanes,
              workInProgressDeferredLane,
              workInProgressRootInterleavedUpdatedLanes,
              workInProgressSuspendedRetryLanes,
              workInProgressRootDidSkipSuspendedSiblings,
              2,
              -0,
              0
            ),
            renderWasConcurrent
          );
          break a;
        }
        commitRootWhenReady(
          shouldTimeSlice,
          forceSync,
          workInProgressRootRecoverableErrors,
          workInProgressTransitions,
          workInProgressRootDidIncludeRecursiveRenderUpdate,
          lanes,
          workInProgressDeferredLane,
          workInProgressRootInterleavedUpdatedLanes,
          workInProgressSuspendedRetryLanes,
          workInProgressRootDidSkipSuspendedSiblings,
          0,
          -0,
          0
        );
      }
    }
    break;
  } while (1);
  ensureRootIsScheduled(root$jscomp$0);
}
function queueRecoverableErrors(errors) {
  null === workInProgressRootRecoverableErrors
    ? (workInProgressRootRecoverableErrors = errors)
    : workInProgressRootRecoverableErrors.push.apply(
        workInProgressRootRecoverableErrors,
        errors
      );
}
function commitRootWhenReady(
  root,
  finishedWork,
  recoverableErrors,
  transitions,
  didIncludeRenderPhaseUpdate,
  lanes,
  spawnedLane,
  updatedLanes,
  suspendedRetryLanes,
  didSkipSuspendedSiblings,
  suspendedCommitReason,
  completedRenderStartTime,
  completedRenderEndTime
) {
  var subtreeFlags = finishedWork.subtreeFlags;
  if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408))
    if (
      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),
      accumulateSuspenseyCommitOnFiber(finishedWork),
      (finishedWork = waitForCommitToBeReady()),
      null !== finishedWork)
    ) {
      root.cancelPendingCommit = finishedWork(
        commitRoot.bind(
          null,
          root,
          recoverableErrors,
          transitions,
          didIncludeRenderPhaseUpdate,
          spawnedLane,
          updatedLanes,
          suspendedRetryLanes,
          1,
          completedRenderStartTime,
          completedRenderEndTime
        )
      );
      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);
      return;
    }
  commitRoot(
    root,
    recoverableErrors,
    transitions,
    didIncludeRenderPhaseUpdate,
    spawnedLane,
    updatedLanes,
    suspendedRetryLanes,
    suspendedCommitReason,
    completedRenderStartTime,
    completedRenderEndTime
  );
}
function isRenderConsistentWithExternalStores(finishedWork) {
  for (var node = finishedWork; ; ) {
    var tag = node.tag;
    if (
      (0 === tag || 11 === tag || 15 === tag) &&
      node.flags & 16384 &&
      ((tag = node.updateQueue),
      null !== tag && ((tag = tag.stores), null !== tag))
    )
      for (var i = 0; i < tag.length; i++) {
        var check = tag[i],
          getSnapshot = check.getSnapshot;
        check = check.value;
        try {
          if (!objectIs(getSnapshot(), check)) return !1;
        } catch (error) {
          return !1;
        }
      }
    tag = node.child;
    if (node.subtreeFlags & 16384 && null !== tag)
      (tag.return = node), (node = tag);
    else {
      if (node === finishedWork) break;
      for (; null === node.sibling; ) {
        if (null === node.return || node.return === finishedWork) return !0;
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
  return !0;
}
function markRootSuspended(
  root,
  suspendedLanes,
  spawnedLane,
  didAttemptEntireTree
) {
  suspendedLanes &= ~workInProgressRootPingedLanes;
  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
  root.suspendedLanes |= suspendedLanes;
  root.pingedLanes &= ~suspendedLanes;
  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
  didAttemptEntireTree = root.expirationTimes;
  for (var lanes = suspendedLanes; 0 < lanes; ) {
    var index$6 = 31 - clz32(lanes),
      lane = 1 << index$6;
    didAttemptEntireTree[index$6] = -1;
    lanes &= ~lane;
  }
  0 !== spawnedLane &&
    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
}
function flushSyncWork$1() {
  return 0 === (executionContext & 6)
    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)
    : !0;
}
function resetWorkInProgressStack() {
  if (null !== workInProgress) {
    if (0 === workInProgressSuspendedReason)
      var interruptedWork = workInProgress.return;
    else
      (interruptedWork = workInProgress),
        (lastContextDependency = currentlyRenderingFiber = null),
        resetHooksOnUnwind(interruptedWork),
        (thenableState$1 = null),
        (thenableIndexCounter$1 = 0),
        (interruptedWork = workInProgress);
    for (; null !== interruptedWork; )
      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),
        (interruptedWork = interruptedWork.return);
    workInProgress = null;
  }
}
function prepareFreshStack(root, lanes) {
  root.finishedWork = null;
  root.finishedLanes = 0;
  var timeoutHandle = root.timeoutHandle;
  -1 !== timeoutHandle &&
    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));
  timeoutHandle = root.cancelPendingCommit;
  null !== timeoutHandle &&
    ((root.cancelPendingCommit = null), timeoutHandle());
  resetWorkInProgressStack();
  workInProgressRoot = root;
  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
  workInProgressRootRenderLanes = lanes;
  workInProgressSuspendedReason = 0;
  workInProgressThrownValue = null;
  workInProgressRootDidSkipSuspendedSiblings = !1;
  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
  workInProgressRootDidAttachPingListener = !1;
  workInProgressSuspendedRetryLanes =
    workInProgressDeferredLane =
    workInProgressRootPingedLanes =
    workInProgressRootInterleavedUpdatedLanes =
    workInProgressRootSkippedLanes =
    workInProgressRootExitStatus =
      0;
  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
    null;
  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
  0 !== (lanes & 8) && (lanes |= lanes & 32);
  var allEntangledLanes = root.entangledLanes;
  if (0 !== allEntangledLanes)
    for (
      root = root.entanglements, allEntangledLanes &= lanes;
      0 < allEntangledLanes;

    ) {
      var index$4 = 31 - clz32(allEntangledLanes),
        lane = 1 << index$4;
      lanes |= root[index$4];
      allEntangledLanes &= ~lane;
    }
  entangledRenderLanes = lanes;
  finishQueueingConcurrentUpdates();
  return timeoutHandle;
}
function handleThrow(root, thrownValue) {
  currentlyRenderingFiber$1 = null;
  ReactSharedInternals.H = ContextOnlyDispatcher;
  thrownValue === SuspenseException
    ? ((thrownValue = getSuspendedThenable()),
      (workInProgressSuspendedReason = 3))
    : thrownValue === SuspenseyCommitException
      ? ((thrownValue = getSuspendedThenable()),
        (workInProgressSuspendedReason = 4))
      : (workInProgressSuspendedReason =
          thrownValue === SelectiveHydrationException
            ? 8
            : null !== thrownValue &&
                "object" === typeof thrownValue &&
                "function" === typeof thrownValue.then
              ? 6
              : 1);
  workInProgressThrownValue = thrownValue;
  null === workInProgress &&
    ((workInProgressRootExitStatus = 1),
    logUncaughtError(
      root,
      createCapturedValueAtFiber(thrownValue, root.current)
    ));
}
function pushDispatcher() {
  var prevDispatcher = ReactSharedInternals.H;
  ReactSharedInternals.H = ContextOnlyDispatcher;
  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
}
function pushAsyncDispatcher() {
  var prevAsyncDispatcher = ReactSharedInternals.A;
  ReactSharedInternals.A = DefaultAsyncDispatcher;
  return prevAsyncDispatcher;
}
function renderDidSuspendDelayIfPossible() {
  workInProgressRootExitStatus = 4;
  workInProgressRootDidSkipSuspendedSiblings ||
    ((workInProgressRootRenderLanes & 4194176) !==
      workInProgressRootRenderLanes &&
      null !== suspenseHandlerStackCursor.current) ||
    (workInProgressRootIsPrerendering = !0);
  (0 === (workInProgressRootSkippedLanes & 134217727) &&
    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||
    null === workInProgressRoot ||
    markRootSuspended(
      workInProgressRoot,
      workInProgressRootRenderLanes,
      workInProgressDeferredLane,
      !1
    );
}
function renderRootSync(root, lanes, shouldYieldForPrerendering) {
  var prevExecutionContext = executionContext;
  executionContext |= 2;
  var prevDispatcher = pushDispatcher(),
    prevAsyncDispatcher = pushAsyncDispatcher();
  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)
    (workInProgressTransitions = null), prepareFreshStack(root, lanes);
  lanes = !1;
  var exitStatus = workInProgressRootExitStatus;
  a: do
    try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        var unitOfWork = workInProgress,
          thrownValue = workInProgressThrownValue;
        switch (workInProgressSuspendedReason) {
          case 8:
            resetWorkInProgressStack();
            exitStatus = 6;
            break a;
          case 3:
          case 2:
          case 6:
            null === suspenseHandlerStackCursor.current && (lanes = !0);
            var reason = workInProgressSuspendedReason;
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
            if (
              shouldYieldForPrerendering &&
              workInProgressRootIsPrerendering
            ) {
              exitStatus = 0;
              break a;
            }
            break;
          default:
            (reason = workInProgressSuspendedReason),
              (workInProgressSuspendedReason = 0),
              (workInProgressThrownValue = null),
              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
        }
      }
      workLoopSync();
      exitStatus = workInProgressRootExitStatus;
      break;
    } catch (thrownValue$164) {
      handleThrow(root, thrownValue$164);
    }
  while (1);
  lanes && root.shellSuspendCounter++;
  lastContextDependency = currentlyRenderingFiber = null;
  executionContext = prevExecutionContext;
  ReactSharedInternals.H = prevDispatcher;
  ReactSharedInternals.A = prevAsyncDispatcher;
  null === workInProgress &&
    ((workInProgressRoot = null),
    (workInProgressRootRenderLanes = 0),
    finishQueueingConcurrentUpdates());
  return exitStatus;
}
function workLoopSync() {
  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);
}
function renderRootConcurrent(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= 2;
  var prevDispatcher = pushDispatcher(),
    prevAsyncDispatcher = pushAsyncDispatcher();
  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes
    ? ((workInProgressTransitions = null),
      (workInProgressRootRenderTargetTime = now() + 500),
      prepareFreshStack(root, lanes))
    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(
        root,
        lanes
      ));
  a: do
    try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        lanes = workInProgress;
        var thrownValue = workInProgressThrownValue;
        b: switch (workInProgressSuspendedReason) {
          case 1:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);
            break;
          case 2:
            if (isThenableResolved(thrownValue)) {
              workInProgressSuspendedReason = 0;
              workInProgressThrownValue = null;
              replaySuspendedUnitOfWork(lanes);
              break;
            }
            lanes = function () {
              2 === workInProgressSuspendedReason &&
                workInProgressRoot === root &&
                (workInProgressSuspendedReason = 7);
              ensureRootIsScheduled(root);
            };
            thrownValue.then(lanes, lanes);
            break a;
          case 3:
            workInProgressSuspendedReason = 7;
            break a;
          case 4:
            workInProgressSuspendedReason = 5;
            break a;
          case 7:
            isThenableResolved(thrownValue)
              ? ((workInProgressSuspendedReason = 0),
                (workInProgressThrownValue = null),
                replaySuspendedUnitOfWork(lanes))
              : ((workInProgressSuspendedReason = 0),
                (workInProgressThrownValue = null),
                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));
            break;
          case 5:
            var resource = null;
            switch (workInProgress.tag) {
              case 26:
                resource = workInProgress.memoizedState;
              case 5:
              case 27:
                var hostFiber = workInProgress;
                if (resource ? preloadResource(resource) : 1) {
                  workInProgressSuspendedReason = 0;
                  workInProgressThrownValue = null;
                  var sibling = hostFiber.sibling;
                  if (null !== sibling) workInProgress = sibling;
                  else {
                    var returnFiber = hostFiber.return;
                    null !== returnFiber
                      ? ((workInProgress = returnFiber),
                        completeUnitOfWork(returnFiber))
                      : (workInProgress = null);
                  }
                  break b;
                }
            }
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);
            break;
          case 6:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);
            break;
          case 8:
            resetWorkInProgressStack();
            workInProgressRootExitStatus = 6;
            break a;
          default:
            throw Error(formatProdErrorMessage(462));
        }
      }
      workLoopConcurrent();
      break;
    } catch (thrownValue$166) {
      handleThrow(root, thrownValue$166);
    }
  while (1);
  lastContextDependency = currentlyRenderingFiber = null;
  ReactSharedInternals.H = prevDispatcher;
  ReactSharedInternals.A = prevAsyncDispatcher;
  executionContext = prevExecutionContext;
  if (null !== workInProgress) return 0;
  workInProgressRoot = null;
  workInProgressRootRenderLanes = 0;
  finishQueueingConcurrentUpdates();
  return workInProgressRootExitStatus;
}
function workLoopConcurrent() {
  for (; null !== workInProgress && !shouldYield(); )
    performUnitOfWork(workInProgress);
}
function performUnitOfWork(unitOfWork) {
  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);
  unitOfWork.memoizedProps = unitOfWork.pendingProps;
  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);
}
function replaySuspendedUnitOfWork(unitOfWork) {
  var next = unitOfWork;
  var current = next.alternate;
  switch (next.tag) {
    case 15:
    case 0:
      next = replayFunctionComponent(
        current,
        next,
        next.pendingProps,
        next.type,
        void 0,
        workInProgressRootRenderLanes
      );
      break;
    case 11:
      next = replayFunctionComponent(
        current,
        next,
        next.pendingProps,
        next.type.render,
        next.ref,
        workInProgressRootRenderLanes
      );
      break;
    case 5:
      resetHooksOnUnwind(next);
    default:
      unwindInterruptedWork(current, next),
        (next = workInProgress =
          resetWorkInProgress(next, entangledRenderLanes)),
        (next = beginWork(current, next, entangledRenderLanes));
  }
  unitOfWork.memoizedProps = unitOfWork.pendingProps;
  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);
}
function throwAndUnwindWorkLoop(
  root,
  unitOfWork,
  thrownValue,
  suspendedReason
) {
  lastContextDependency = currentlyRenderingFiber = null;
  resetHooksOnUnwind(unitOfWork);
  thenableState$1 = null;
  thenableIndexCounter$1 = 0;
  var returnFiber = unitOfWork.return;
  try {
    if (
      throwException(
        root,
        returnFiber,
        unitOfWork,
        thrownValue,
        workInProgressRootRenderLanes
      )
    ) {
      workInProgressRootExitStatus = 1;
      logUncaughtError(
        root,
        createCapturedValueAtFiber(thrownValue, root.current)
      );
      workInProgress = null;
      return;
    }
  } catch (error) {
    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);
    workInProgressRootExitStatus = 1;
    logUncaughtError(
      root,
      createCapturedValueAtFiber(thrownValue, root.current)
    );
    workInProgress = null;
    return;
  }
  if (unitOfWork.flags & 32768) {
    if (isHydrating || 1 === suspendedReason) root = !0;
    else if (
      workInProgressRootIsPrerendering ||
      0 !== (workInProgressRootRenderLanes & 536870912)
    )
      root = !1;
    else if (
      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),
      2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason)
    )
      (suspendedReason = suspenseHandlerStackCursor.current),
        null !== suspendedReason &&
          13 === suspendedReason.tag &&
          (suspendedReason.flags |= 16384);
    unwindUnitOfWork(unitOfWork, root);
  } else completeUnitOfWork(unitOfWork);
}
function completeUnitOfWork(unitOfWork) {
  var completedWork = unitOfWork;
  do {
    if (0 !== (completedWork.flags & 32768)) {
      unwindUnitOfWork(
        completedWork,
        workInProgressRootDidSkipSuspendedSiblings
      );
      return;
    }
    unitOfWork = completedWork.return;
    var next = completeWork(
      completedWork.alternate,
      completedWork,
      entangledRenderLanes
    );
    if (null !== next) {
      workInProgress = next;
      return;
    }
    completedWork = completedWork.sibling;
    if (null !== completedWork) {
      workInProgress = completedWork;
      return;
    }
    workInProgress = completedWork = unitOfWork;
  } while (null !== completedWork);
  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);
}
function unwindUnitOfWork(unitOfWork, skipSiblings) {
  do {
    var next = unwindWork(unitOfWork.alternate, unitOfWork);
    if (null !== next) {
      next.flags &= 32767;
      workInProgress = next;
      return;
    }
    next = unitOfWork.return;
    null !== next &&
      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));
    if (
      !skipSiblings &&
      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)
    ) {
      workInProgress = unitOfWork;
      return;
    }
    workInProgress = unitOfWork = next;
  } while (null !== unitOfWork);
  workInProgressRootExitStatus = 6;
  workInProgress = null;
}
function commitRoot(
  root,
  recoverableErrors,
  transitions,
  didIncludeRenderPhaseUpdate,
  spawnedLane,
  updatedLanes,
  suspendedRetryLanes,
  suspendedCommitReason,
  completedRenderStartTime,
  completedRenderEndTime
) {
  var prevTransition = ReactSharedInternals.T,
    previousUpdateLanePriority = ReactDOMSharedInternals.p;
  try {
    (ReactDOMSharedInternals.p = 2),
      (ReactSharedInternals.T = null),
      commitRootImpl(
        root,
        recoverableErrors,
        transitions,
        didIncludeRenderPhaseUpdate,
        previousUpdateLanePriority,
        spawnedLane,
        updatedLanes,
        suspendedRetryLanes,
        suspendedCommitReason,
        completedRenderStartTime,
        completedRenderEndTime
      );
  } finally {
    (ReactSharedInternals.T = prevTransition),
      (ReactDOMSharedInternals.p = previousUpdateLanePriority);
  }
}
function commitRootImpl(
  root,
  recoverableErrors,
  transitions,
  didIncludeRenderPhaseUpdate,
  renderPriorityLevel,
  spawnedLane,
  updatedLanes,
  suspendedRetryLanes
) {
  do flushPassiveEffects();
  while (null !== rootWithPendingPassiveEffects);
  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));
  var finishedWork = root.finishedWork;
  didIncludeRenderPhaseUpdate = root.finishedLanes;
  if (null === finishedWork) return null;
  root.finishedWork = null;
  root.finishedLanes = 0;
  if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));
  root.callbackNode = null;
  root.callbackPriority = 0;
  root.cancelPendingCommit = null;
  var remainingLanes = finishedWork.lanes | finishedWork.childLanes;
  remainingLanes |= concurrentlyUpdatedLanes;
  markRootFinished(
    root,
    didIncludeRenderPhaseUpdate,
    remainingLanes,
    spawnedLane,
    updatedLanes,
    suspendedRetryLanes
  );
  root === workInProgressRoot &&
    ((workInProgress = workInProgressRoot = null),
    (workInProgressRootRenderLanes = 0));
  (0 === (finishedWork.subtreeFlags & 10256) &&
    0 === (finishedWork.flags & 10256)) ||
    rootDoesHavePassiveEffects ||
    ((rootDoesHavePassiveEffects = !0),
    (pendingPassiveEffectsRemainingLanes = remainingLanes),
    (pendingPassiveTransitions = transitions),
    scheduleCallback$1(NormalPriority$1, function () {
      flushPassiveEffects(!0);
      return null;
    }));
  transitions = 0 !== (finishedWork.flags & 15990);
  0 !== (finishedWork.subtreeFlags & 15990) || transitions
    ? ((transitions = ReactSharedInternals.T),
      (ReactSharedInternals.T = null),
      (spawnedLane = ReactDOMSharedInternals.p),
      (ReactDOMSharedInternals.p = 2),
      (updatedLanes = executionContext),
      (executionContext |= 4),
      commitBeforeMutationEffects(root, finishedWork),
      commitMutationEffectsOnFiber(finishedWork, root),
      restoreSelection(selectionInformation, root.containerInfo),
      (_enabled = !!eventsEnabled),
      (selectionInformation = eventsEnabled = null),
      (root.current = finishedWork),
      commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork),
      requestPaint(),
      (executionContext = updatedLanes),
      (ReactDOMSharedInternals.p = spawnedLane),
      (ReactSharedInternals.T = transitions))
    : (root.current = finishedWork);
  rootDoesHavePassiveEffects
    ? ((rootDoesHavePassiveEffects = !1),
      (rootWithPendingPassiveEffects = root),
      (pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate))
    : releaseRootPooledCache(root, remainingLanes);
  remainingLanes = root.pendingLanes;
  0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
  ensureRootIsScheduled(root);
  if (null !== recoverableErrors)
    for (
      renderPriorityLevel = root.onRecoverableError, finishedWork = 0;
      finishedWork < recoverableErrors.length;
      finishedWork++
    )
      (remainingLanes = recoverableErrors[finishedWork]),
        renderPriorityLevel(remainingLanes.value, {
          componentStack: remainingLanes.stack
        });
  0 !== (pendingPassiveEffectsLanes & 3) && flushPassiveEffects();
  remainingLanes = root.pendingLanes;
  0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42)
    ? root === rootWithNestedUpdates
      ? nestedUpdateCount++
      : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))
    : (nestedUpdateCount = 0);
  flushSyncWorkAcrossRoots_impl(0, !1);
  return null;
}
function releaseRootPooledCache(root, remainingLanes) {
  0 === (root.pooledCacheLanes &= remainingLanes) &&
    ((remainingLanes = root.pooledCache),
    null != remainingLanes &&
      ((root.pooledCache = null), releaseCache(remainingLanes)));
}
function flushPassiveEffects() {
  if (null !== rootWithPendingPassiveEffects) {
    var root$170 = rootWithPendingPassiveEffects,
      remainingLanes = pendingPassiveEffectsRemainingLanes;
    pendingPassiveEffectsRemainingLanes = 0;
    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),
      prevTransition = ReactSharedInternals.T,
      previousPriority = ReactDOMSharedInternals.p;
    try {
      ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;
      ReactSharedInternals.T = null;
      if (null === rootWithPendingPassiveEffects)
        var JSCompiler_inline_result = !1;
      else {
        renderPriority = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects,
          lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null;
        pendingPassiveEffectsLanes = 0;
        if (0 !== (executionContext & 6))
          throw Error(formatProdErrorMessage(331));
        var prevExecutionContext = executionContext;
        executionContext |= 4;
        commitPassiveUnmountOnFiber(root.current);
        commitPassiveMountOnFiber(root, root.current, lanes, renderPriority);
        executionContext = prevExecutionContext;
        flushSyncWorkAcrossRoots_impl(0, !1);
        if (
          injectedHook &&
          "function" === typeof injectedHook.onPostCommitFiberRoot
        )
          try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
          } catch (err) {}
        JSCompiler_inline_result = !0;
      }
      return JSCompiler_inline_result;
    } finally {
      (ReactDOMSharedInternals.p = previousPriority),
        (ReactSharedInternals.T = prevTransition),
        releaseRootPooledCache(root$170, remainingLanes);
    }
  }
  return !1;
}
function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
  null !== rootFiber &&
    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
}
function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
  if (3 === sourceFiber.tag)
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
  else
    for (; null !== nearestMountedAncestor; ) {
      if (3 === nearestMountedAncestor.tag) {
        captureCommitPhaseErrorOnRoot(
          nearestMountedAncestor,
          sourceFiber,
          error
        );
        break;
      } else if (1 === nearestMountedAncestor.tag) {
        var instance = nearestMountedAncestor.stateNode;
        if (
          "function" ===
            typeof nearestMountedAncestor.type.getDerivedStateFromError ||
          ("function" === typeof instance.componentDidCatch &&
            (null === legacyErrorBoundariesThatAlreadyFailed ||
              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))
        ) {
          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
          error = createClassErrorUpdate(2);
          instance = enqueueUpdate(nearestMountedAncestor, error, 2);
          null !== instance &&
            (initializeClassErrorUpdate(
              error,
              instance,
              nearestMountedAncestor,
              sourceFiber
            ),
            markRootUpdated$1(instance, 2),
            ensureRootIsScheduled(instance));
          break;
        }
      }
      nearestMountedAncestor = nearestMountedAncestor.return;
    }
}
function attachPingListener(root, wakeable, lanes) {
  var pingCache = root.pingCache;
  if (null === pingCache) {
    pingCache = root.pingCache = new PossiblyWeakMap();
    var threadIDs = new Set();
    pingCache.set(wakeable, threadIDs);
  } else
    (threadIDs = pingCache.get(wakeable)),
      void 0 === threadIDs &&
        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
  threadIDs.has(lanes) ||
    ((workInProgressRootDidAttachPingListener = !0),
    threadIDs.add(lanes),
    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
    wakeable.then(root, root));
}
function pingSuspendedRoot(root, wakeable, pingedLanes) {
  var pingCache = root.pingCache;
  null !== pingCache && pingCache.delete(wakeable);
  root.pingedLanes |= root.suspendedLanes & pingedLanes;
  root.warmLanes &= ~pingedLanes;
  workInProgressRoot === root &&
    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&
    (4 === workInProgressRootExitStatus ||
    (3 === workInProgressRootExitStatus &&
      (workInProgressRootRenderLanes & 62914560) ===
        workInProgressRootRenderLanes &&
      300 > now() - globalMostRecentFallbackTime)
      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)
      : (workInProgressRootPingedLanes |= pingedLanes),
    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&
      (workInProgressSuspendedRetryLanes = 0));
  ensureRootIsScheduled(root);
}
function retryTimedOutBoundary(boundaryFiber, retryLane) {
  0 === retryLane && (retryLane = claimNextRetryLane());
  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
  null !== boundaryFiber &&
    (markRootUpdated$1(boundaryFiber, retryLane),
    ensureRootIsScheduled(boundaryFiber));
}
function retryDehydratedSuspenseBoundary(boundaryFiber) {
  var suspenseState = boundaryFiber.memoizedState,
    retryLane = 0;
  null !== suspenseState && (retryLane = suspenseState.retryLane);
  retryTimedOutBoundary(boundaryFiber, retryLane);
}
function resolveRetryWakeable(boundaryFiber, wakeable) {
  var retryLane = 0;
  switch (boundaryFiber.tag) {
    case 13:
      var retryCache = boundaryFiber.stateNode;
      var suspenseState = boundaryFiber.memoizedState;
      null !== suspenseState && (retryLane = suspenseState.retryLane);
      break;
    case 19:
      retryCache = boundaryFiber.stateNode;
      break;
    case 22:
      retryCache = boundaryFiber.stateNode._retryCache;
      break;
    default:
      throw Error(formatProdErrorMessage(314));
  }
  null !== retryCache && retryCache.delete(wakeable);
  retryTimedOutBoundary(boundaryFiber, retryLane);
}
function scheduleCallback$1(priorityLevel, callback) {
  return scheduleCallback$3(priorityLevel, callback);
}
var firstScheduledRoot = null,
  lastScheduledRoot = null,
  didScheduleMicrotask = !1,
  mightHavePendingSyncWork = !1,
  isFlushingWork = !1,
  currentEventTransitionLane = 0;
function ensureRootIsScheduled(root) {
  root !== lastScheduledRoot &&
    null === root.next &&
    (null === lastScheduledRoot
      ? (firstScheduledRoot = lastScheduledRoot = root)
      : (lastScheduledRoot = lastScheduledRoot.next = root));
  mightHavePendingSyncWork = !0;
  didScheduleMicrotask ||
    ((didScheduleMicrotask = !0),
    scheduleImmediateTask(processRootScheduleInMicrotask));
}
function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
  if (!isFlushingWork && mightHavePendingSyncWork) {
    isFlushingWork = !0;
    do {
      var didPerformSomeWork = !1;
      for (var root$172 = firstScheduledRoot; null !== root$172; ) {
        if (!onlyLegacy)
          if (0 !== syncTransitionLanes) {
            var pendingLanes = root$172.pendingLanes;
            if (0 === pendingLanes) var JSCompiler_inline_result = 0;
            else {
              var suspendedLanes = root$172.suspendedLanes,
                pingedLanes = root$172.pingedLanes;
              JSCompiler_inline_result =
                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
              JSCompiler_inline_result &=
                pendingLanes & ~(suspendedLanes & ~pingedLanes);
              JSCompiler_inline_result =
                JSCompiler_inline_result & 201326677
                  ? (JSCompiler_inline_result & 201326677) | 1
                  : JSCompiler_inline_result
                    ? JSCompiler_inline_result | 2
                    : 0;
            }
            0 !== JSCompiler_inline_result &&
              ((didPerformSomeWork = !0),
              performSyncWorkOnRoot(root$172, JSCompiler_inline_result));
          } else
            (JSCompiler_inline_result = workInProgressRootRenderLanes),
              (JSCompiler_inline_result = getNextLanes(
                root$172,
                root$172 === workInProgressRoot ? JSCompiler_inline_result : 0
              )),
              0 === (JSCompiler_inline_result & 3) ||
                checkIfRootIsPrerendering(root$172, JSCompiler_inline_result) ||
                ((didPerformSomeWork = !0),
                performSyncWorkOnRoot(root$172, JSCompiler_inline_result));
        root$172 = root$172.next;
      }
    } while (didPerformSomeWork);
    isFlushingWork = !1;
  }
}
function processRootScheduleInMicrotask() {
  mightHavePendingSyncWork = didScheduleMicrotask = !1;
  var syncTransitionLanes = 0;
  0 !== currentEventTransitionLane &&
    (shouldAttemptEagerTransition() &&
      (syncTransitionLanes = currentEventTransitionLane),
    (currentEventTransitionLane = 0));
  for (
    var currentTime = now(), prev = null, root = firstScheduledRoot;
    null !== root;

  ) {
    var next = root.next,
      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
    if (0 === nextLanes)
      (root.next = null),
        null === prev ? (firstScheduledRoot = next) : (prev.next = next),
        null === next && (lastScheduledRoot = prev);
    else if (
      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
    )
      mightHavePendingSyncWork = !0;
    root = next;
  }
  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
}
function scheduleTaskForRootDuringMicrotask(root, currentTime) {
  for (
    var suspendedLanes = root.suspendedLanes,
      pingedLanes = root.pingedLanes,
      expirationTimes = root.expirationTimes,
      lanes = root.pendingLanes & -62914561;
    0 < lanes;

  ) {
    var index$5 = 31 - clz32(lanes),
      lane = 1 << index$5,
      expirationTime = expirationTimes[index$5];
    if (-1 === expirationTime) {
      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))
        expirationTimes[index$5] = computeExpirationTime(lane, currentTime);
    } else expirationTime <= currentTime && (root.expiredLanes |= lane);
    lanes &= ~lane;
  }
  currentTime = workInProgressRoot;
  suspendedLanes = workInProgressRootRenderLanes;
  suspendedLanes = getNextLanes(
    root,
    root === currentTime ? suspendedLanes : 0
  );
  pingedLanes = root.callbackNode;
  if (
    0 === suspendedLanes ||
    (root === currentTime && 2 === workInProgressSuspendedReason) ||
    null !== root.cancelPendingCommit
  )
    return (
      null !== pingedLanes &&
        null !== pingedLanes &&
        cancelCallback$1(pingedLanes),
      (root.callbackNode = null),
      (root.callbackPriority = 0)
    );
  if (
    0 === (suspendedLanes & 3) ||
    checkIfRootIsPrerendering(root, suspendedLanes)
  ) {
    currentTime = suspendedLanes & -suspendedLanes;
    if (currentTime === root.callbackPriority) return currentTime;
    null !== pingedLanes && cancelCallback$1(pingedLanes);
    switch (lanesToEventPriority(suspendedLanes)) {
      case 2:
      case 8:
        suspendedLanes = UserBlockingPriority;
        break;
      case 32:
        suspendedLanes = NormalPriority$1;
        break;
      case 268435456:
        suspendedLanes = IdlePriority;
        break;
      default:
        suspendedLanes = NormalPriority$1;
    }
    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);
    root.callbackPriority = currentTime;
    root.callbackNode = suspendedLanes;
    return currentTime;
  }
  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);
  root.callbackPriority = 2;
  root.callbackNode = null;
  return 2;
}
function performWorkOnRootViaSchedulerTask(root, didTimeout) {
  var originalCallbackNode = root.callbackNode;
  if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode)
    return null;
  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(
    root,
    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0
  );
  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
  scheduleTaskForRootDuringMicrotask(root, now());
  return null != root.callbackNode && root.callbackNode === originalCallbackNode
    ? performWorkOnRootViaSchedulerTask.bind(null, root)
    : null;
}
function performSyncWorkOnRoot(root, lanes) {
  if (flushPassiveEffects()) return null;
  performWorkOnRoot(root, lanes, !0);
}
function scheduleImmediateTask(cb) {
  scheduleMicrotask(function () {
    0 !== (executionContext & 6)
      ? scheduleCallback$3(ImmediatePriority, cb)
      : cb();
  });
}
function requestTransitionLane() {
  0 === currentEventTransitionLane &&
    (currentEventTransitionLane = claimNextTransitionLane());
  return currentEventTransitionLane;
}
function coerceFormActionProp(actionProp) {
  return null == actionProp ||
    "symbol" === typeof actionProp ||
    "boolean" === typeof actionProp
    ? null
    : "function" === typeof actionProp
      ? actionProp
      : sanitizeURL("" + actionProp);
}
function createFormDataWithSubmitter(form, submitter) {
  var temp = submitter.ownerDocument.createElement("input");
  temp.name = submitter.name;
  temp.value = submitter.value;
  form.id && temp.setAttribute("form", form.id);
  submitter.parentNode.insertBefore(temp, submitter);
  form = new FormData(form);
  temp.parentNode.removeChild(temp);
  return form;
}
function extractEvents$1(
  dispatchQueue,
  domEventName,
  maybeTargetInst,
  nativeEvent,
  nativeEventTarget
) {
  if (
    "submit" === domEventName &&
    maybeTargetInst &&
    maybeTargetInst.stateNode === nativeEventTarget
  ) {
    var action = coerceFormActionProp(
        (nativeEventTarget[internalPropsKey] || null).action
      ),
      submitter = nativeEvent.submitter;
    submitter &&
      ((domEventName = (domEventName = submitter[internalPropsKey] || null)
        ? coerceFormActionProp(domEventName.formAction)
        : submitter.getAttribute("formAction")),
      null !== domEventName && ((action = domEventName), (submitter = null)));
    var event = new SyntheticEvent(
      "action",
      "action",
      null,
      nativeEvent,
      nativeEventTarget
    );
    dispatchQueue.push({
      event: event,
      listeners: [
        {
          instance: null,
          listener: function () {
            if (nativeEvent.defaultPrevented) {
              if (0 !== currentEventTransitionLane) {
                var formData = submitter
                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)
                  : new FormData(nativeEventTarget);
                startHostTransition(
                  maybeTargetInst,
                  {
                    pending: !0,
                    data: formData,
                    method: nativeEventTarget.method,
                    action: action
                  },
                  null,
                  formData
                );
              }
            } else
              "function" === typeof action &&
                (event.preventDefault(),
                (formData = submitter
                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)
                  : new FormData(nativeEventTarget)),
                startHostTransition(
                  maybeTargetInst,
                  {
                    pending: !0,
                    data: formData,
                    method: nativeEventTarget.method,
                    action: action
                  },
                  action,
                  formData
                ));
          },
          currentTarget: nativeEventTarget
        }
      ]
    });
  }
}
for (
  var i$jscomp$inline_1439 = 0;
  i$jscomp$inline_1439 < simpleEventPluginEvents.length;
  i$jscomp$inline_1439++
) {
  var eventName$jscomp$inline_1440 =
      simpleEventPluginEvents[i$jscomp$inline_1439],
    domEventName$jscomp$inline_1441 =
      eventName$jscomp$inline_1440.toLowerCase(),
    capitalizedEvent$jscomp$inline_1442 =
      eventName$jscomp$inline_1440[0].toUpperCase() +
      eventName$jscomp$inline_1440.slice(1);
  registerSimpleEvent(
    domEventName$jscomp$inline_1441,
    "on" + capitalizedEvent$jscomp$inline_1442
  );
}
registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
registerSimpleEvent(ANIMATION_START, "onAnimationStart");
registerSimpleEvent("dblclick", "onDoubleClick");
registerSimpleEvent("focusin", "onFocus");
registerSimpleEvent("focusout", "onBlur");
registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
registerSimpleEvent(TRANSITION_START, "onTransitionStart");
registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
registerTwoPhaseEvent(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
registerTwoPhaseEvent(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
registerTwoPhaseEvent("onBeforeInput", [
  "compositionend",
  "keypress",
  "textInput",
  "paste"
]);
registerTwoPhaseEvent(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
registerTwoPhaseEvent(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
registerTwoPhaseEvent(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var mediaEventTypes =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  nonDelegatedEvents = new Set(
    "beforetoggle cancel close invalid load scroll scrollend toggle"
      .split(" ")
      .concat(mediaEventTypes)
  );
function processDispatchQueue(dispatchQueue, eventSystemFlags) {
  eventSystemFlags = 0 !== (eventSystemFlags & 4);
  for (var i = 0; i < dispatchQueue.length; i++) {
    var _dispatchQueue$i = dispatchQueue[i],
      event = _dispatchQueue$i.event;
    _dispatchQueue$i = _dispatchQueue$i.listeners;
    a: {
      var previousInstance = void 0;
      if (eventSystemFlags)
        for (
          var i$jscomp$0 = _dispatchQueue$i.length - 1;
          0 <= i$jscomp$0;
          i$jscomp$0--
        ) {
          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],
            instance = _dispatchListeners$i.instance,
            currentTarget = _dispatchListeners$i.currentTarget;
          _dispatchListeners$i = _dispatchListeners$i.listener;
          if (instance !== previousInstance && event.isPropagationStopped())
            break a;
          previousInstance = _dispatchListeners$i;
          event.currentTarget = currentTarget;
          try {
            previousInstance(event);
          } catch (error) {
            reportGlobalError(error);
          }
          event.currentTarget = null;
          previousInstance = instance;
        }
      else
        for (
          i$jscomp$0 = 0;
          i$jscomp$0 < _dispatchQueue$i.length;
          i$jscomp$0++
        ) {
          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
          instance = _dispatchListeners$i.instance;
          currentTarget = _dispatchListeners$i.currentTarget;
          _dispatchListeners$i = _dispatchListeners$i.listener;
          if (instance !== previousInstance && event.isPropagationStopped())
            break a;
          previousInstance = _dispatchListeners$i;
          event.currentTarget = currentTarget;
          try {
            previousInstance(event);
          } catch (error) {
            reportGlobalError(error);
          }
          event.currentTarget = null;
          previousInstance = instance;
        }
    }
  }
}
function listenToNonDelegatedEvent(domEventName, targetElement) {
  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];
  void 0 === JSCompiler_inline_result &&
    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =
      new Set());
  var listenerSetKey = domEventName + "__bubble";
  JSCompiler_inline_result.has(listenerSetKey) ||
    (addTrappedEventListener(targetElement, domEventName, 2, !1),
    JSCompiler_inline_result.add(listenerSetKey));
}
function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
  var eventSystemFlags = 0;
  isCapturePhaseListener && (eventSystemFlags |= 4);
  addTrappedEventListener(
    target,
    domEventName,
    eventSystemFlags,
    isCapturePhaseListener
  );
}
var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
function listenToAllSupportedEvents(rootContainerElement) {
  if (!rootContainerElement[listeningMarker]) {
    rootContainerElement[listeningMarker] = !0;
    allNativeEvents.forEach(function (domEventName) {
      "selectionchange" !== domEventName &&
        (nonDelegatedEvents.has(domEventName) ||
          listenToNativeEvent(domEventName, !1, rootContainerElement),
        listenToNativeEvent(domEventName, !0, rootContainerElement));
    });
    var ownerDocument =
      9 === rootContainerElement.nodeType
        ? rootContainerElement
        : rootContainerElement.ownerDocument;
    null === ownerDocument ||
      ownerDocument[listeningMarker] ||
      ((ownerDocument[listeningMarker] = !0),
      listenToNativeEvent("selectionchange", !1, ownerDocument));
  }
}
function addTrappedEventListener(
  targetContainer,
  domEventName,
  eventSystemFlags,
  isCapturePhaseListener
) {
  switch (getEventPriority(domEventName)) {
    case 2:
      var listenerWrapper = dispatchDiscreteEvent;
      break;
    case 8:
      listenerWrapper = dispatchContinuousEvent;
      break;
    default:
      listenerWrapper = dispatchEvent;
  }
  eventSystemFlags = listenerWrapper.bind(
    null,
    domEventName,
    eventSystemFlags,
    targetContainer
  );
  listenerWrapper = void 0;
  !passiveBrowserEventsSupported ||
    ("touchstart" !== domEventName &&
      "touchmove" !== domEventName &&
      "wheel" !== domEventName) ||
    (listenerWrapper = !0);
  isCapturePhaseListener
    ? void 0 !== listenerWrapper
      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
          capture: !0,
          passive: listenerWrapper
        })
      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)
    : void 0 !== listenerWrapper
      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
          passive: listenerWrapper
        })
      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);
}
function dispatchEventForPluginEventSystem(
  domEventName,
  eventSystemFlags,
  nativeEvent,
  targetInst$jscomp$0,
  targetContainer
) {
  var ancestorInst = targetInst$jscomp$0;
  if (
    0 === (eventSystemFlags & 1) &&
    0 === (eventSystemFlags & 2) &&
    null !== targetInst$jscomp$0
  )
    a: for (;;) {
      if (null === targetInst$jscomp$0) return;
      var nodeTag = targetInst$jscomp$0.tag;
      if (3 === nodeTag || 4 === nodeTag) {
        var container = targetInst$jscomp$0.stateNode.containerInfo;
        if (
          container === targetContainer ||
          (8 === container.nodeType && container.parentNode === targetContainer)
        )
          break;
        if (4 === nodeTag)
          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
            var grandTag = nodeTag.tag;
            if (3 === grandTag || 4 === grandTag)
              if (
                ((grandTag = nodeTag.stateNode.containerInfo),
                grandTag === targetContainer ||
                  (8 === grandTag.nodeType &&
                    grandTag.parentNode === targetContainer))
              )
                return;
            nodeTag = nodeTag.return;
          }
        for (; null !== container; ) {
          nodeTag = getClosestInstanceFromNode(container);
          if (null === nodeTag) return;
          grandTag = nodeTag.tag;
          if (
            5 === grandTag ||
            6 === grandTag ||
            26 === grandTag ||
            27 === grandTag
          ) {
            targetInst$jscomp$0 = ancestorInst = nodeTag;
            continue a;
          }
          container = container.parentNode;
        }
      }
      targetInst$jscomp$0 = targetInst$jscomp$0.return;
    }
  batchedUpdates$1(function () {
    var targetInst = ancestorInst,
      nativeEventTarget = getEventTarget(nativeEvent),
      dispatchQueue = [];
    a: {
      var reactName = topLevelEventsToReactNames.get(domEventName);
      if (void 0 !== reactName) {
        var SyntheticEventCtor = SyntheticEvent,
          reactEventType = domEventName;
        switch (domEventName) {
          case "keypress":
            if (0 === getEventCharCode(nativeEvent)) break a;
          case "keydown":
          case "keyup":
            SyntheticEventCtor = SyntheticKeyboardEvent;
            break;
          case "focusin":
            reactEventType = "focus";
            SyntheticEventCtor = SyntheticFocusEvent;
            break;
          case "focusout":
            reactEventType = "blur";
            SyntheticEventCtor = SyntheticFocusEvent;
            break;
          case "beforeblur":
          case "afterblur":
            SyntheticEventCtor = SyntheticFocusEvent;
            break;
          case "click":
            if (2 === nativeEvent.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            SyntheticEventCtor = SyntheticMouseEvent;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            SyntheticEventCtor = SyntheticDragEvent;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            SyntheticEventCtor = SyntheticTouchEvent;
            break;
          case ANIMATION_END:
          case ANIMATION_ITERATION:
          case ANIMATION_START:
            SyntheticEventCtor = SyntheticAnimationEvent;
            break;
          case TRANSITION_END:
            SyntheticEventCtor = SyntheticTransitionEvent;
            break;
          case "scroll":
          case "scrollend":
            SyntheticEventCtor = SyntheticUIEvent;
            break;
          case "wheel":
            SyntheticEventCtor = SyntheticWheelEvent;
            break;
          case "copy":
          case "cut":
          case "paste":
            SyntheticEventCtor = SyntheticClipboardEvent;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            SyntheticEventCtor = SyntheticPointerEvent;
            break;
          case "toggle":
          case "beforetoggle":
            SyntheticEventCtor = SyntheticToggleEvent;
        }
        var inCapturePhase = 0 !== (eventSystemFlags & 4),
          accumulateTargetOnly =
            !inCapturePhase &&
            ("scroll" === domEventName || "scrollend" === domEventName),
          reactEventName = inCapturePhase
            ? null !== reactName
              ? reactName + "Capture"
              : null
            : reactName;
        inCapturePhase = [];
        for (
          var instance = targetInst, lastHostComponent;
          null !== instance;

        ) {
          var _instance = instance;
          lastHostComponent = _instance.stateNode;
          _instance = _instance.tag;
          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
            null === lastHostComponent ||
            null === reactEventName ||
            ((_instance = getListener(instance, reactEventName)),
            null != _instance &&
              inCapturePhase.push(
                createDispatchListener(instance, _instance, lastHostComponent)
              ));
          if (accumulateTargetOnly) break;
          instance = instance.return;
        }
        0 < inCapturePhase.length &&
          ((reactName = new SyntheticEventCtor(
            reactName,
            reactEventType,
            null,
            nativeEvent,
            nativeEventTarget
          )),
          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));
      }
    }
    if (0 === (eventSystemFlags & 7)) {
      a: {
        reactName =
          "mouseover" === domEventName || "pointerover" === domEventName;
        SyntheticEventCtor =
          "mouseout" === domEventName || "pointerout" === domEventName;
        if (
          reactName &&
          nativeEvent !== currentReplayingEvent &&
          (reactEventType =
            nativeEvent.relatedTarget || nativeEvent.fromElement) &&
          (getClosestInstanceFromNode(reactEventType) ||
            reactEventType[internalContainerInstanceKey])
        )
          break a;
        if (SyntheticEventCtor || reactName) {
          reactName =
            nativeEventTarget.window === nativeEventTarget
              ? nativeEventTarget
              : (reactName = nativeEventTarget.ownerDocument)
                ? reactName.defaultView || reactName.parentWindow
                : window;
          if (SyntheticEventCtor) {
            if (
              ((reactEventType =
                nativeEvent.relatedTarget || nativeEvent.toElement),
              (SyntheticEventCtor = targetInst),
              (reactEventType = reactEventType
                ? getClosestInstanceFromNode(reactEventType)
                : null),
              null !== reactEventType &&
                ((accumulateTargetOnly =
                  getNearestMountedFiber(reactEventType)),
                (inCapturePhase = reactEventType.tag),
                reactEventType !== accumulateTargetOnly ||
                  (5 !== inCapturePhase &&
                    27 !== inCapturePhase &&
                    6 !== inCapturePhase)))
            )
              reactEventType = null;
          } else (SyntheticEventCtor = null), (reactEventType = targetInst);
          if (SyntheticEventCtor !== reactEventType) {
            inCapturePhase = SyntheticMouseEvent;
            _instance = "onMouseLeave";
            reactEventName = "onMouseEnter";
            instance = "mouse";
            if ("pointerout" === domEventName || "pointerover" === domEventName)
              (inCapturePhase = SyntheticPointerEvent),
                (_instance = "onPointerLeave"),
                (reactEventName = "onPointerEnter"),
                (instance = "pointer");
            accumulateTargetOnly =
              null == SyntheticEventCtor
                ? reactName
                : getNodeFromInstance(SyntheticEventCtor);
            lastHostComponent =
              null == reactEventType
                ? reactName
                : getNodeFromInstance(reactEventType);
            reactName = new inCapturePhase(
              _instance,
              instance + "leave",
              SyntheticEventCtor,
              nativeEvent,
              nativeEventTarget
            );
            reactName.target = accumulateTargetOnly;
            reactName.relatedTarget = lastHostComponent;
            _instance = null;
            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
              ((inCapturePhase = new inCapturePhase(
                reactEventName,
                instance + "enter",
                reactEventType,
                nativeEvent,
                nativeEventTarget
              )),
              (inCapturePhase.target = lastHostComponent),
              (inCapturePhase.relatedTarget = accumulateTargetOnly),
              (_instance = inCapturePhase));
            accumulateTargetOnly = _instance;
            if (SyntheticEventCtor && reactEventType)
              b: {
                inCapturePhase = SyntheticEventCtor;
                reactEventName = reactEventType;
                instance = 0;
                for (
                  lastHostComponent = inCapturePhase;
                  lastHostComponent;
                  lastHostComponent = getParent(lastHostComponent)
                )
                  instance++;
                lastHostComponent = 0;
                for (
                  _instance = reactEventName;
                  _instance;
                  _instance = getParent(_instance)
                )
                  lastHostComponent++;
                for (; 0 < instance - lastHostComponent; )
                  (inCapturePhase = getParent(inCapturePhase)), instance--;
                for (; 0 < lastHostComponent - instance; )
                  (reactEventName = getParent(reactEventName)),
                    lastHostComponent--;
                for (; instance--; ) {
                  if (
                    inCapturePhase === reactEventName ||
                    (null !== reactEventName &&
                      inCapturePhase === reactEventName.alternate)
                  )
                    break b;
                  inCapturePhase = getParent(inCapturePhase);
                  reactEventName = getParent(reactEventName);
                }
                inCapturePhase = null;
              }
            else inCapturePhase = null;
            null !== SyntheticEventCtor &&
              accumulateEnterLeaveListenersForEvent(
                dispatchQueue,
                reactName,
                SyntheticEventCtor,
                inCapturePhase,
                !1
              );
            null !== reactEventType &&
              null !== accumulateTargetOnly &&
              accumulateEnterLeaveListenersForEvent(
                dispatchQueue,
                accumulateTargetOnly,
                reactEventType,
                inCapturePhase,
                !0
              );
          }
        }
      }
      a: {
        reactName = targetInst ? getNodeFromInstance(targetInst) : window;
        SyntheticEventCtor =
          reactName.nodeName && reactName.nodeName.toLowerCase();
        if (
          "select" === SyntheticEventCtor ||
          ("input" === SyntheticEventCtor && "file" === reactName.type)
        )
          var getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(reactName))
          if (isInputEventSupported)
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            var handleEventFunc = handleEventsForInputEventPolyfill;
          }
        else
          (SyntheticEventCtor = reactName.nodeName),
            !SyntheticEventCtor ||
            "input" !== SyntheticEventCtor.toLowerCase() ||
            ("checkbox" !== reactName.type && "radio" !== reactName.type)
              ? targetInst &&
                isCustomElement(targetInst.elementType) &&
                (getTargetInstFunc = getTargetInstForChangeEvent)
              : (getTargetInstFunc = getTargetInstForClickEvent);
        if (
          getTargetInstFunc &&
          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))
        ) {
          createAndAccumulateChangeEvent(
            dispatchQueue,
            getTargetInstFunc,
            nativeEvent,
            nativeEventTarget
          );
          break a;
        }
        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);
        "focusout" === domEventName &&
          targetInst &&
          "number" === reactName.type &&
          null != targetInst.memoizedProps.value &&
          setDefaultValue(reactName, "number", reactName.value);
      }
      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;
      switch (domEventName) {
        case "focusin":
          if (
            isTextInputElement(handleEventFunc) ||
            "true" === handleEventFunc.contentEditable
          )
            (activeElement = handleEventFunc),
              (activeElementInst = targetInst),
              (lastSelection = null);
          break;
        case "focusout":
          lastSelection = activeElementInst = activeElement = null;
          break;
        case "mousedown":
          mouseDown = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          mouseDown = !1;
          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          break;
        case "selectionchange":
          if (skipSelectionChangeEvent) break;
        case "keydown":
        case "keyup":
          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      }
      var fallbackData;
      if (canUseCompositionEvent)
        b: {
          switch (domEventName) {
            case "compositionstart":
              var eventType = "onCompositionStart";
              break b;
            case "compositionend":
              eventType = "onCompositionEnd";
              break b;
            case "compositionupdate":
              eventType = "onCompositionUpdate";
              break b;
          }
          eventType = void 0;
        }
      else
        isComposing
          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&
            (eventType = "onCompositionEnd")
          : "keydown" === domEventName &&
            229 === nativeEvent.keyCode &&
            (eventType = "onCompositionStart");
      eventType &&
        (useFallbackCompositionData &&
          "ko" !== nativeEvent.locale &&
          (isComposing || "onCompositionStart" !== eventType
            ? "onCompositionEnd" === eventType &&
              isComposing &&
              (fallbackData = getData())
            : ((root = nativeEventTarget),
              (startText = "value" in root ? root.value : root.textContent),
              (isComposing = !0))),
        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),
        0 < handleEventFunc.length &&
          ((eventType = new SyntheticCompositionEvent(
            eventType,
            domEventName,
            null,
            nativeEvent,
            nativeEventTarget
          )),
          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),
          fallbackData
            ? (eventType.data = fallbackData)
            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),
              null !== fallbackData && (eventType.data = fallbackData))));
      if (
        (fallbackData = canUseTextInputEvent
          ? getNativeBeforeInputChars(domEventName, nativeEvent)
          : getFallbackBeforeInputChars(domEventName, nativeEvent))
      )
        (eventType = accumulateTwoPhaseListeners(targetInst, "onBeforeInput")),
          0 < eventType.length &&
            ((handleEventFunc = new SyntheticCompositionEvent(
              "onBeforeInput",
              "beforeinput",
              null,
              nativeEvent,
              nativeEventTarget
            )),
            dispatchQueue.push({
              event: handleEventFunc,
              listeners: eventType
            }),
            (handleEventFunc.data = fallbackData));
      extractEvents$1(
        dispatchQueue,
        domEventName,
        targetInst,
        nativeEvent,
        nativeEventTarget
      );
    }
    processDispatchQueue(dispatchQueue, eventSystemFlags);
  });
}
function createDispatchListener(instance, listener, currentTarget) {
  return {
    instance: instance,
    listener: listener,
    currentTarget: currentTarget
  };
}
function accumulateTwoPhaseListeners(targetFiber, reactName) {
  for (
    var captureName = reactName + "Capture", listeners = [];
    null !== targetFiber;

  ) {
    var _instance2 = targetFiber,
      stateNode = _instance2.stateNode;
    _instance2 = _instance2.tag;
    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
      null === stateNode ||
      ((_instance2 = getListener(targetFiber, captureName)),
      null != _instance2 &&
        listeners.unshift(
          createDispatchListener(targetFiber, _instance2, stateNode)
        ),
      (_instance2 = getListener(targetFiber, reactName)),
      null != _instance2 &&
        listeners.push(
          createDispatchListener(targetFiber, _instance2, stateNode)
        ));
    targetFiber = targetFiber.return;
  }
  return listeners;
}
function getParent(inst) {
  if (null === inst) return null;
  do inst = inst.return;
  while (inst && 5 !== inst.tag && 27 !== inst.tag);
  return inst ? inst : null;
}
function accumulateEnterLeaveListenersForEvent(
  dispatchQueue,
  event,
  target,
  common,
  inCapturePhase
) {
  for (
    var registrationName = event._reactName, listeners = [];
    null !== target && target !== common;

  ) {
    var _instance3 = target,
      alternate = _instance3.alternate,
      stateNode = _instance3.stateNode;
    _instance3 = _instance3.tag;
    if (null !== alternate && alternate === common) break;
    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||
      null === stateNode ||
      ((alternate = stateNode),
      inCapturePhase
        ? ((stateNode = getListener(target, registrationName)),
          null != stateNode &&
            listeners.unshift(
              createDispatchListener(target, stateNode, alternate)
            ))
        : inCapturePhase ||
          ((stateNode = getListener(target, registrationName)),
          null != stateNode &&
            listeners.push(
              createDispatchListener(target, stateNode, alternate)
            )));
    target = target.return;
  }
  0 !== listeners.length &&
    dispatchQueue.push({ event: event, listeners: listeners });
}
var NORMALIZE_NEWLINES_REGEX = /\r\n?/g,
  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
function normalizeMarkupForTextOrAttribute(markup) {
  return ("string" === typeof markup ? markup : "" + markup)
    .replace(NORMALIZE_NEWLINES_REGEX, "\n")
    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
}
function checkForUnmatchedText(serverText, clientText) {
  clientText = normalizeMarkupForTextOrAttribute(clientText);
  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;
}
function noop$1() {}
function setProp(domElement, tag, key, value, props, prevValue) {
  switch (key) {
    case "children":
      "string" === typeof value
        ? "body" === tag ||
          ("textarea" === tag && "" === value) ||
          setTextContent(domElement, value)
        : ("number" === typeof value || "bigint" === typeof value) &&
          "body" !== tag &&
          setTextContent(domElement, "" + value);
      break;
    case "className":
      setValueForKnownAttribute(domElement, "class", value);
      break;
    case "tabIndex":
      setValueForKnownAttribute(domElement, "tabindex", value);
      break;
    case "dir":
    case "role":
    case "viewBox":
    case "width":
    case "height":
      setValueForKnownAttribute(domElement, key, value);
      break;
    case "style":
      setValueForStyles(domElement, value, prevValue);
      break;
    case "data":
      if ("object" !== tag) {
        setValueForKnownAttribute(domElement, "data", value);
        break;
      }
    case "src":
    case "href":
      if ("" === value && ("a" !== tag || "href" !== key)) {
        domElement.removeAttribute(key);
        break;
      }
      if (
        null == value ||
        "function" === typeof value ||
        "symbol" === typeof value ||
        "boolean" === typeof value
      ) {
        domElement.removeAttribute(key);
        break;
      }
      value = sanitizeURL("" + value);
      domElement.setAttribute(key, value);
      break;
    case "action":
    case "formAction":
      if ("function" === typeof value) {
        domElement.setAttribute(
          key,
          "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')"
        );
        break;
      } else
        "function" === typeof prevValue &&
          ("formAction" === key
            ? ("input" !== tag &&
                setProp(domElement, tag, "name", props.name, props, null),
              setProp(
                domElement,
                tag,
                "formEncType",
                props.formEncType,
                props,
                null
              ),
              setProp(
                domElement,
                tag,
                "formMethod",
                props.formMethod,
                props,
                null
              ),
              setProp(
                domElement,
                tag,
                "formTarget",
                props.formTarget,
                props,
                null
              ))
            : (setProp(domElement, tag, "encType", props.encType, props, null),
              setProp(domElement, tag, "method", props.method, props, null),
              setProp(domElement, tag, "target", props.target, props, null)));
      if (
        null == value ||
        "symbol" === typeof value ||
        "boolean" === typeof value
      ) {
        domElement.removeAttribute(key);
        break;
      }
      value = sanitizeURL("" + value);
      domElement.setAttribute(key, value);
      break;
    case "onClick":
      null != value && (domElement.onclick = noop$1);
      break;
    case "onScroll":
      null != value && listenToNonDelegatedEvent("scroll", domElement);
      break;
    case "onScrollEnd":
      null != value && listenToNonDelegatedEvent("scrollend", domElement);
      break;
    case "dangerouslySetInnerHTML":
      if (null != value) {
        if ("object" !== typeof value || !("__html" in value))
          throw Error(formatProdErrorMessage(61));
        key = value.__html;
        if (null != key) {
          if (null != props.children) throw Error(formatProdErrorMessage(60));
          domElement.innerHTML = key;
        }
      }
      break;
    case "multiple":
      domElement.multiple =
        value && "function" !== typeof value && "symbol" !== typeof value;
      break;
    case "muted":
      domElement.muted =
        value && "function" !== typeof value && "symbol" !== typeof value;
      break;
    case "suppressContentEditableWarning":
    case "suppressHydrationWarning":
    case "defaultValue":
    case "defaultChecked":
    case "innerHTML":
    case "ref":
      break;
    case "autoFocus":
      break;
    case "xlinkHref":
      if (
        null == value ||
        "function" === typeof value ||
        "boolean" === typeof value ||
        "symbol" === typeof value
      ) {
        domElement.removeAttribute("xlink:href");
        break;
      }
      key = sanitizeURL("" + value);
      domElement.setAttributeNS(
        "http://www.w3.org/1999/xlink",
        "xlink:href",
        key
      );
      break;
    case "contentEditable":
    case "spellCheck":
    case "draggable":
    case "value":
    case "autoReverse":
    case "externalResourcesRequired":
    case "focusable":
    case "preserveAlpha":
      null != value && "function" !== typeof value && "symbol" !== typeof value
        ? domElement.setAttribute(key, "" + value)
        : domElement.removeAttribute(key);
      break;
    case "inert":
    case "allowFullScreen":
    case "async":
    case "autoPlay":
    case "controls":
    case "default":
    case "defer":
    case "disabled":
    case "disablePictureInPicture":
    case "disableRemotePlayback":
    case "formNoValidate":
    case "hidden":
    case "loop":
    case "noModule":
    case "noValidate":
    case "open":
    case "playsInline":
    case "readOnly":
    case "required":
    case "reversed":
    case "scoped":
    case "seamless":
    case "itemScope":
      value && "function" !== typeof value && "symbol" !== typeof value
        ? domElement.setAttribute(key, "")
        : domElement.removeAttribute(key);
      break;
    case "capture":
    case "download":
      !0 === value
        ? domElement.setAttribute(key, "")
        : !1 !== value &&
            null != value &&
            "function" !== typeof value &&
            "symbol" !== typeof value
          ? domElement.setAttribute(key, value)
          : domElement.removeAttribute(key);
      break;
    case "cols":
    case "rows":
    case "size":
    case "span":
      null != value &&
      "function" !== typeof value &&
      "symbol" !== typeof value &&
      !isNaN(value) &&
      1 <= value
        ? domElement.setAttribute(key, value)
        : domElement.removeAttribute(key);
      break;
    case "rowSpan":
    case "start":
      null == value ||
      "function" === typeof value ||
      "symbol" === typeof value ||
      isNaN(value)
        ? domElement.removeAttribute(key)
        : domElement.setAttribute(key, value);
      break;
    case "popover":
      listenToNonDelegatedEvent("beforetoggle", domElement);
      listenToNonDelegatedEvent("toggle", domElement);
      setValueForAttribute(domElement, "popover", value);
      break;
    case "xlinkActuate":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:actuate",
        value
      );
      break;
    case "xlinkArcrole":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:arcrole",
        value
      );
      break;
    case "xlinkRole":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:role",
        value
      );
      break;
    case "xlinkShow":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:show",
        value
      );
      break;
    case "xlinkTitle":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:title",
        value
      );
      break;
    case "xlinkType":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/1999/xlink",
        "xlink:type",
        value
      );
      break;
    case "xmlBase":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/XML/1998/namespace",
        "xml:base",
        value
      );
      break;
    case "xmlLang":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/XML/1998/namespace",
        "xml:lang",
        value
      );
      break;
    case "xmlSpace":
      setValueForNamespacedAttribute(
        domElement,
        "http://www.w3.org/XML/1998/namespace",
        "xml:space",
        value
      );
      break;
    case "is":
      setValueForAttribute(domElement, "is", value);
      break;
    case "innerText":
    case "textContent":
      break;
    default:
      if (
        !(2 < key.length) ||
        ("o" !== key[0] && "O" !== key[0]) ||
        ("n" !== key[1] && "N" !== key[1])
      )
        (key = aliases.get(key) || key),
          setValueForAttribute(domElement, key, value);
  }
}
function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
  switch (key) {
    case "style":
      setValueForStyles(domElement, value, prevValue);
      break;
    case "dangerouslySetInnerHTML":
      if (null != value) {
        if ("object" !== typeof value || !("__html" in value))
          throw Error(formatProdErrorMessage(61));
        key = value.__html;
        if (null != key) {
          if (null != props.children) throw Error(formatProdErrorMessage(60));
          domElement.innerHTML = key;
        }
      }
      break;
    case "children":
      "string" === typeof value
        ? setTextContent(domElement, value)
        : ("number" === typeof value || "bigint" === typeof value) &&
          setTextContent(domElement, "" + value);
      break;
    case "onScroll":
      null != value && listenToNonDelegatedEvent("scroll", domElement);
      break;
    case "onScrollEnd":
      null != value && listenToNonDelegatedEvent("scrollend", domElement);
      break;
    case "onClick":
      null != value && (domElement.onclick = noop$1);
      break;
    case "suppressContentEditableWarning":
    case "suppressHydrationWarning":
    case "innerHTML":
    case "ref":
      break;
    case "innerText":
    case "textContent":
      break;
    default:
      if (!registrationNameDependencies.hasOwnProperty(key))
        a: {
          if (
            "o" === key[0] &&
            "n" === key[1] &&
            ((props = key.endsWith("Capture")),
            (tag = key.slice(2, props ? key.length - 7 : void 0)),
            (prevValue = domElement[internalPropsKey] || null),
            (prevValue = null != prevValue ? prevValue[key] : null),
            "function" === typeof prevValue &&
              domElement.removeEventListener(tag, prevValue, props),
            "function" === typeof value)
          ) {
            "function" !== typeof prevValue &&
              null !== prevValue &&
              (key in domElement
                ? (domElement[key] = null)
                : domElement.hasAttribute(key) &&
                  domElement.removeAttribute(key));
            domElement.addEventListener(tag, value, props);
            break a;
          }
          key in domElement
            ? (domElement[key] = value)
            : !0 === value
              ? domElement.setAttribute(key, "")
              : setValueForAttribute(domElement, key, value);
        }
  }
}
function setInitialProperties(domElement, tag, props) {
  switch (tag) {
    case "div":
    case "span":
    case "svg":
    case "path":
    case "a":
    case "g":
    case "p":
    case "li":
      break;
    case "img":
      listenToNonDelegatedEvent("error", domElement);
      listenToNonDelegatedEvent("load", domElement);
      var hasSrc = !1,
        hasSrcSet = !1,
        propKey;
      for (propKey in props)
        if (props.hasOwnProperty(propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "src":
                hasSrc = !0;
                break;
              case "srcSet":
                hasSrcSet = !0;
                break;
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(formatProdErrorMessage(137, tag));
              default:
                setProp(domElement, tag, propKey, propValue, props, null);
            }
        }
      hasSrcSet &&
        setProp(domElement, tag, "srcSet", props.srcSet, props, null);
      hasSrc && setProp(domElement, tag, "src", props.src, props, null);
      return;
    case "input":
      listenToNonDelegatedEvent("invalid", domElement);
      var defaultValue = (propKey = propValue = hasSrcSet = null),
        checked = null,
        defaultChecked = null;
      for (hasSrc in props)
        if (props.hasOwnProperty(hasSrc)) {
          var propValue$186 = props[hasSrc];
          if (null != propValue$186)
            switch (hasSrc) {
              case "name":
                hasSrcSet = propValue$186;
                break;
              case "type":
                propValue = propValue$186;
                break;
              case "checked":
                checked = propValue$186;
                break;
              case "defaultChecked":
                defaultChecked = propValue$186;
                break;
              case "value":
                propKey = propValue$186;
                break;
              case "defaultValue":
                defaultValue = propValue$186;
                break;
              case "children":
              case "dangerouslySetInnerHTML":
                if (null != propValue$186)
                  throw Error(formatProdErrorMessage(137, tag));
                break;
              default:
                setProp(domElement, tag, hasSrc, propValue$186, props, null);
            }
        }
      initInput(
        domElement,
        propKey,
        defaultValue,
        checked,
        defaultChecked,
        propValue,
        hasSrcSet,
        !1
      );
      track(domElement);
      return;
    case "select":
      listenToNonDelegatedEvent("invalid", domElement);
      hasSrc = propValue = propKey = null;
      for (hasSrcSet in props)
        if (
          props.hasOwnProperty(hasSrcSet) &&
          ((defaultValue = props[hasSrcSet]), null != defaultValue)
        )
          switch (hasSrcSet) {
            case "value":
              propKey = defaultValue;
              break;
            case "defaultValue":
              propValue = defaultValue;
              break;
            case "multiple":
              hasSrc = defaultValue;
            default:
              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);
          }
      tag = propKey;
      props = propValue;
      domElement.multiple = !!hasSrc;
      null != tag
        ? updateOptions(domElement, !!hasSrc, tag, !1)
        : null != props && updateOptions(domElement, !!hasSrc, props, !0);
      return;
    case "textarea":
      listenToNonDelegatedEvent("invalid", domElement);
      propKey = hasSrcSet = hasSrc = null;
      for (propValue in props)
        if (
          props.hasOwnProperty(propValue) &&
          ((defaultValue = props[propValue]), null != defaultValue)
        )
          switch (propValue) {
            case "value":
              hasSrc = defaultValue;
              break;
            case "defaultValue":
              hasSrcSet = defaultValue;
              break;
            case "children":
              propKey = defaultValue;
              break;
            case "dangerouslySetInnerHTML":
              if (null != defaultValue) throw Error(formatProdErrorMessage(91));
              break;
            default:
              setProp(domElement, tag, propValue, defaultValue, props, null);
          }
      initTextarea(domElement, hasSrc, hasSrcSet, propKey);
      track(domElement);
      return;
    case "option":
      for (checked in props)
        if (
          props.hasOwnProperty(checked) &&
          ((hasSrc = props[checked]), null != hasSrc)
        )
          switch (checked) {
            case "selected":
              domElement.selected =
                hasSrc &&
                "function" !== typeof hasSrc &&
                "symbol" !== typeof hasSrc;
              break;
            default:
              setProp(domElement, tag, checked, hasSrc, props, null);
          }
      return;
    case "dialog":
      listenToNonDelegatedEvent("cancel", domElement);
      listenToNonDelegatedEvent("close", domElement);
      break;
    case "iframe":
    case "object":
      listenToNonDelegatedEvent("load", domElement);
      break;
    case "video":
    case "audio":
      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)
        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
      break;
    case "image":
      listenToNonDelegatedEvent("error", domElement);
      listenToNonDelegatedEvent("load", domElement);
      break;
    case "details":
      listenToNonDelegatedEvent("toggle", domElement);
      break;
    case "embed":
    case "source":
    case "link":
      listenToNonDelegatedEvent("error", domElement),
        listenToNonDelegatedEvent("load", domElement);
    case "area":
    case "base":
    case "br":
    case "col":
    case "hr":
    case "keygen":
    case "meta":
    case "param":
    case "track":
    case "wbr":
    case "menuitem":
      for (defaultChecked in props)
        if (
          props.hasOwnProperty(defaultChecked) &&
          ((hasSrc = props[defaultChecked]), null != hasSrc)
        )
          switch (defaultChecked) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(formatProdErrorMessage(137, tag));
            default:
              setProp(domElement, tag, defaultChecked, hasSrc, props, null);
          }
      return;
    default:
      if (isCustomElement(tag)) {
        for (propValue$186 in props)
          props.hasOwnProperty(propValue$186) &&
            ((hasSrc = props[propValue$186]),
            void 0 !== hasSrc &&
              setPropOnCustomElement(
                domElement,
                tag,
                propValue$186,
                hasSrc,
                props,
                void 0
              ));
        return;
      }
  }
  for (defaultValue in props)
    props.hasOwnProperty(defaultValue) &&
      ((hasSrc = props[defaultValue]),
      null != hasSrc &&
        setProp(domElement, tag, defaultValue, hasSrc, props, null));
}
function updateProperties(domElement, tag, lastProps, nextProps) {
  switch (tag) {
    case "div":
    case "span":
    case "svg":
    case "path":
    case "a":
    case "g":
    case "p":
    case "li":
      break;
    case "input":
      var name = null,
        type = null,
        value = null,
        defaultValue = null,
        lastDefaultValue = null,
        checked = null,
        defaultChecked = null;
      for (propKey in lastProps) {
        var lastProp = lastProps[propKey];
        if (lastProps.hasOwnProperty(propKey) && null != lastProp)
          switch (propKey) {
            case "checked":
              break;
            case "value":
              break;
            case "defaultValue":
              lastDefaultValue = lastProp;
            default:
              nextProps.hasOwnProperty(propKey) ||
                setProp(domElement, tag, propKey, null, nextProps, lastProp);
          }
      }
      for (var propKey$203 in nextProps) {
        var propKey = nextProps[propKey$203];
        lastProp = lastProps[propKey$203];
        if (
          nextProps.hasOwnProperty(propKey$203) &&
          (null != propKey || null != lastProp)
        )
          switch (propKey$203) {
            case "type":
              type = propKey;
              break;
            case "name":
              name = propKey;
              break;
            case "checked":
              checked = propKey;
              break;
            case "defaultChecked":
              defaultChecked = propKey;
              break;
            case "value":
              value = propKey;
              break;
            case "defaultValue":
              defaultValue = propKey;
              break;
            case "children":
            case "dangerouslySetInnerHTML":
              if (null != propKey)
                throw Error(formatProdErrorMessage(137, tag));
              break;
            default:
              propKey !== lastProp &&
                setProp(
                  domElement,
                  tag,
                  propKey$203,
                  propKey,
                  nextProps,
                  lastProp
                );
          }
      }
      updateInput(
        domElement,
        value,
        defaultValue,
        lastDefaultValue,
        checked,
        defaultChecked,
        type,
        name
      );
      return;
    case "select":
      propKey = value = defaultValue = propKey$203 = null;
      for (type in lastProps)
        if (
          ((lastDefaultValue = lastProps[type]),
          lastProps.hasOwnProperty(type) && null != lastDefaultValue)
        )
          switch (type) {
            case "value":
              break;
            case "multiple":
              propKey = lastDefaultValue;
            default:
              nextProps.hasOwnProperty(type) ||
                setProp(
                  domElement,
                  tag,
                  type,
                  null,
                  nextProps,
                  lastDefaultValue
                );
          }
      for (name in nextProps)
        if (
          ((type = nextProps[name]),
          (lastDefaultValue = lastProps[name]),
          nextProps.hasOwnProperty(name) &&
            (null != type || null != lastDefaultValue))
        )
          switch (name) {
            case "value":
              propKey$203 = type;
              break;
            case "defaultValue":
              defaultValue = type;
              break;
            case "multiple":
              value = type;
            default:
              type !== lastDefaultValue &&
                setProp(
                  domElement,
                  tag,
                  name,
                  type,
                  nextProps,
                  lastDefaultValue
                );
          }
      tag = defaultValue;
      lastProps = value;
      nextProps = propKey;
      null != propKey$203
        ? updateOptions(domElement, !!lastProps, propKey$203, !1)
        : !!nextProps !== !!lastProps &&
          (null != tag
            ? updateOptions(domElement, !!lastProps, tag, !0)
            : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
      return;
    case "textarea":
      propKey = propKey$203 = null;
      for (defaultValue in lastProps)
        if (
          ((name = lastProps[defaultValue]),
          lastProps.hasOwnProperty(defaultValue) &&
            null != name &&
            !nextProps.hasOwnProperty(defaultValue))
        )
          switch (defaultValue) {
            case "value":
              break;
            case "children":
              break;
            default:
              setProp(domElement, tag, defaultValue, null, nextProps, name);
          }
      for (value in nextProps)
        if (
          ((name = nextProps[value]),
          (type = lastProps[value]),
          nextProps.hasOwnProperty(value) && (null != name || null != type))
        )
          switch (value) {
            case "value":
              propKey$203 = name;
              break;
            case "defaultValue":
              propKey = name;
              break;
            case "children":
              break;
            case "dangerouslySetInnerHTML":
              if (null != name) throw Error(formatProdErrorMessage(91));
              break;
            default:
              name !== type &&
                setProp(domElement, tag, value, name, nextProps, type);
          }
      updateTextarea(domElement, propKey$203, propKey);
      return;
    case "option":
      for (var propKey$219 in lastProps)
        if (
          ((propKey$203 = lastProps[propKey$219]),
          lastProps.hasOwnProperty(propKey$219) &&
            null != propKey$203 &&
            !nextProps.hasOwnProperty(propKey$219))
        )
          switch (propKey$219) {
            case "selected":
              domElement.selected = !1;
              break;
            default:
              setProp(
                domElement,
                tag,
                propKey$219,
                null,
                nextProps,
                propKey$203
              );
          }
      for (lastDefaultValue in nextProps)
        if (
          ((propKey$203 = nextProps[lastDefaultValue]),
          (propKey = lastProps[lastDefaultValue]),
          nextProps.hasOwnProperty(lastDefaultValue) &&
            propKey$203 !== propKey &&
            (null != propKey$203 || null != propKey))
        )
          switch (lastDefaultValue) {
            case "selected":
              domElement.selected =
                propKey$203 &&
                "function" !== typeof propKey$203 &&
                "symbol" !== typeof propKey$203;
              break;
            default:
              setProp(
                domElement,
                tag,
                lastDefaultValue,
                propKey$203,
                nextProps,
                propKey
              );
          }
      return;
    case "img":
    case "link":
    case "area":
    case "base":
    case "br":
    case "col":
    case "embed":
    case "hr":
    case "keygen":
    case "meta":
    case "param":
    case "source":
    case "track":
    case "wbr":
    case "menuitem":
      for (var propKey$224 in lastProps)
        (propKey$203 = lastProps[propKey$224]),
          lastProps.hasOwnProperty(propKey$224) &&
            null != propKey$203 &&
            !nextProps.hasOwnProperty(propKey$224) &&
            setProp(domElement, tag, propKey$224, null, nextProps, propKey$203);
      for (checked in nextProps)
        if (
          ((propKey$203 = nextProps[checked]),
          (propKey = lastProps[checked]),
          nextProps.hasOwnProperty(checked) &&
            propKey$203 !== propKey &&
            (null != propKey$203 || null != propKey))
        )
          switch (checked) {
            case "children":
            case "dangerouslySetInnerHTML":
              if (null != propKey$203)
                throw Error(formatProdErrorMessage(137, tag));
              break;
            default:
              setProp(
                domElement,
                tag,
                checked,
                propKey$203,
                nextProps,
                propKey
              );
          }
      return;
    default:
      if (isCustomElement(tag)) {
        for (var propKey$229 in lastProps)
          (propKey$203 = lastProps[propKey$229]),
            lastProps.hasOwnProperty(propKey$229) &&
              void 0 !== propKey$203 &&
              !nextProps.hasOwnProperty(propKey$229) &&
              setPropOnCustomElement(
                domElement,
                tag,
                propKey$229,
                void 0,
                nextProps,
                propKey$203
              );
        for (defaultChecked in nextProps)
          (propKey$203 = nextProps[defaultChecked]),
            (propKey = lastProps[defaultChecked]),
            !nextProps.hasOwnProperty(defaultChecked) ||
              propKey$203 === propKey ||
              (void 0 === propKey$203 && void 0 === propKey) ||
              setPropOnCustomElement(
                domElement,
                tag,
                defaultChecked,
                propKey$203,
                nextProps,
                propKey
              );
        return;
      }
  }
  for (var propKey$234 in lastProps)
    (propKey$203 = lastProps[propKey$234]),
      lastProps.hasOwnProperty(propKey$234) &&
        null != propKey$203 &&
        !nextProps.hasOwnProperty(propKey$234) &&
        setProp(domElement, tag, propKey$234, null, nextProps, propKey$203);
  for (lastProp in nextProps)
    (propKey$203 = nextProps[lastProp]),
      (propKey = lastProps[lastProp]),
      !nextProps.hasOwnProperty(lastProp) ||
        propKey$203 === propKey ||
        (null == propKey$203 && null == propKey) ||
        setProp(domElement, tag, lastProp, propKey$203, nextProps, propKey);
}
var eventsEnabled = null,
  selectionInformation = null;
function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return 9 === rootContainerElement.nodeType
    ? rootContainerElement
    : rootContainerElement.ownerDocument;
}
function getOwnHostContext(namespaceURI) {
  switch (namespaceURI) {
    case "http://www.w3.org/2000/svg":
      return 1;
    case "http://www.w3.org/1998/Math/MathML":
      return 2;
    default:
      return 0;
  }
}
function getChildHostContextProd(parentNamespace, type) {
  if (0 === parentNamespace)
    switch (type) {
      case "svg":
        return 1;
      case "math":
        return 2;
      default:
        return 0;
    }
  return 1 === parentNamespace && "foreignObject" === type
    ? 0
    : parentNamespace;
}
function shouldSetTextContent(type, props) {
  return (
    "textarea" === type ||
    "noscript" === type ||
    "string" === typeof props.children ||
    "number" === typeof props.children ||
    "bigint" === typeof props.children ||
    ("object" === typeof props.dangerouslySetInnerHTML &&
      null !== props.dangerouslySetInnerHTML &&
      null != props.dangerouslySetInnerHTML.__html)
  );
}
var currentPopstateTransitionEvent = null;
function shouldAttemptEagerTransition() {
  var event = window.event;
  if (event && "popstate" === event.type) {
    if (event === currentPopstateTransitionEvent) return !1;
    currentPopstateTransitionEvent = event;
    return !0;
  }
  currentPopstateTransitionEvent = null;
  return !1;
}
var scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0,
  cancelTimeout = "function" === typeof clearTimeout ? clearTimeout : void 0,
  localPromise = "function" === typeof Promise ? Promise : void 0,
  scheduleMicrotask =
    "function" === typeof queueMicrotask
      ? queueMicrotask
      : "undefined" !== typeof localPromise
        ? function (callback) {
            return localPromise
              .resolve(null)
              .then(callback)
              .catch(handleErrorInNextTick);
          }
        : scheduleTimeout;
function handleErrorInNextTick(error) {
  setTimeout(function () {
    throw error;
  });
}
function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance,
    depth = 0;
  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);
    if (nextNode && 8 === nextNode.nodeType)
      if (((node = nextNode.data), "/$" === node)) {
        if (0 === depth) {
          parentInstance.removeChild(nextNode);
          retryIfBlockedOn(suspenseInstance);
          return;
        }
        depth--;
      } else ("$" !== node && "$?" !== node && "$!" !== node) || depth++;
    node = nextNode;
  } while (node);
  retryIfBlockedOn(suspenseInstance);
}
function clearContainerSparingly(container) {
  var nextNode = container.firstChild;
  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
  for (; nextNode; ) {
    var node = nextNode;
    nextNode = nextNode.nextSibling;
    switch (node.nodeName) {
      case "HTML":
      case "HEAD":
      case "BODY":
        clearContainerSparingly(node);
        detachDeletedInstance(node);
        continue;
      case "SCRIPT":
      case "STYLE":
        continue;
      case "LINK":
        if ("stylesheet" === node.rel.toLowerCase()) continue;
    }
    container.removeChild(node);
  }
}
function canHydrateInstance(instance, type, props, inRootOrSingleton) {
  for (; 1 === instance.nodeType; ) {
    var anyProps = props;
    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
      if (
        !inRootOrSingleton &&
        ("INPUT" !== instance.nodeName || "hidden" !== instance.type)
      )
        break;
    } else if (!inRootOrSingleton)
      if ("input" === type && "hidden" === instance.type) {
        var name = null == anyProps.name ? null : "" + anyProps.name;
        if (
          "hidden" === anyProps.type &&
          instance.getAttribute("name") === name
        )
          return instance;
      } else return instance;
    else if (!instance[internalHoistableMarker])
      switch (type) {
        case "meta":
          if (!instance.hasAttribute("itemprop")) break;
          return instance;
        case "link":
          name = instance.getAttribute("rel");
          if ("stylesheet" === name && instance.hasAttribute("data-precedence"))
            break;
          else if (
            name !== anyProps.rel ||
            instance.getAttribute("href") !==
              (null == anyProps.href ? null : anyProps.href) ||
            instance.getAttribute("crossorigin") !==
              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||
            instance.getAttribute("title") !==
              (null == anyProps.title ? null : anyProps.title)
          )
            break;
          return instance;
        case "style":
          if (instance.hasAttribute("data-precedence")) break;
          return instance;
        case "script":
          name = instance.getAttribute("src");
          if (
            (name !== (null == anyProps.src ? null : anyProps.src) ||
              instance.getAttribute("type") !==
                (null == anyProps.type ? null : anyProps.type) ||
              instance.getAttribute("crossorigin") !==
                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&
            name &&
            instance.hasAttribute("async") &&
            !instance.hasAttribute("itemprop")
          )
            break;
          return instance;
        default:
          return instance;
      }
    instance = getNextHydratable(instance.nextSibling);
    if (null === instance) break;
  }
  return null;
}
function canHydrateTextInstance(instance, text, inRootOrSingleton) {
  if ("" === text) return null;
  for (; 3 !== instance.nodeType; ) {
    if (
      (1 !== instance.nodeType ||
        "INPUT" !== instance.nodeName ||
        "hidden" !== instance.type) &&
      !inRootOrSingleton
    )
      return null;
    instance = getNextHydratable(instance.nextSibling);
    if (null === instance) return null;
  }
  return instance;
}
function getNextHydratable(node) {
  for (; null != node; node = node.nextSibling) {
    var nodeType = node.nodeType;
    if (1 === nodeType || 3 === nodeType) break;
    if (8 === nodeType) {
      nodeType = node.data;
      if (
        "$" === nodeType ||
        "$!" === nodeType ||
        "$?" === nodeType ||
        "F!" === nodeType ||
        "F" === nodeType
      )
        break;
      if ("/$" === nodeType) return null;
    }
  }
  return node;
}
function getParentSuspenseInstance(targetInstance) {
  targetInstance = targetInstance.previousSibling;
  for (var depth = 0; targetInstance; ) {
    if (8 === targetInstance.nodeType) {
      var data = targetInstance.data;
      if ("$" === data || "$!" === data || "$?" === data) {
        if (0 === depth) return targetInstance;
        depth--;
      } else "/$" === data && depth++;
    }
    targetInstance = targetInstance.previousSibling;
  }
  return null;
}
function resolveSingletonInstance(type, props, rootContainerInstance) {
  props = getOwnerDocumentFromRootContainer(rootContainerInstance);
  switch (type) {
    case "html":
      type = props.documentElement;
      if (!type) throw Error(formatProdErrorMessage(452));
      return type;
    case "head":
      type = props.head;
      if (!type) throw Error(formatProdErrorMessage(453));
      return type;
    case "body":
      type = props.body;
      if (!type) throw Error(formatProdErrorMessage(454));
      return type;
    default:
      throw Error(formatProdErrorMessage(451));
  }
}
var preloadPropsMap = new Map(),
  preconnectsSet = new Set();
function getHoistableRoot(container) {
  return "function" === typeof container.getRootNode
    ? container.getRootNode()
    : container.ownerDocument;
}
var previousDispatcher = ReactDOMSharedInternals.d;
ReactDOMSharedInternals.d = {
  f: flushSyncWork,
  r: requestFormReset,
  D: prefetchDNS,
  C: preconnect,
  L: preload,
  m: preloadModule,
  X: preinitScript,
  S: preinitStyle,
  M: preinitModuleScript
};
function flushSyncWork() {
  var previousWasRendering = previousDispatcher.f(),
    wasRendering = flushSyncWork$1();
  return previousWasRendering || wasRendering;
}
function requestFormReset(form) {
  var formInst = getInstanceFromNode(form);
  null !== formInst && 5 === formInst.tag && "form" === formInst.type
    ? requestFormReset$1(formInst)
    : previousDispatcher.r(form);
}
var globalDocument = "undefined" === typeof document ? null : document;
function preconnectAs(rel, href, crossOrigin) {
  var ownerDocument = globalDocument;
  if (ownerDocument && "string" === typeof href && href) {
    var limitedEscapedHref =
      escapeSelectorAttributeValueInsideDoubleQuotes(href);
    limitedEscapedHref =
      'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
    "string" === typeof crossOrigin &&
      (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
    preconnectsSet.has(limitedEscapedHref) ||
      (preconnectsSet.add(limitedEscapedHref),
      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),
      null === ownerDocument.querySelector(limitedEscapedHref) &&
        ((href = ownerDocument.createElement("link")),
        setInitialProperties(href, "link", rel),
        markNodeAsHoistable(href),
        ownerDocument.head.appendChild(href)));
  }
}
function prefetchDNS(href) {
  previousDispatcher.D(href);
  preconnectAs("dns-prefetch", href, null);
}
function preconnect(href, crossOrigin) {
  previousDispatcher.C(href, crossOrigin);
  preconnectAs("preconnect", href, crossOrigin);
}
function preload(href, as, options) {
  previousDispatcher.L(href, as, options);
  var ownerDocument = globalDocument;
  if (ownerDocument && href && as) {
    var preloadSelector =
      'link[rel="preload"][as="' +
      escapeSelectorAttributeValueInsideDoubleQuotes(as) +
      '"]';
    "image" === as
      ? options && options.imageSrcSet
        ? ((preloadSelector +=
            '[imagesrcset="' +
            escapeSelectorAttributeValueInsideDoubleQuotes(
              options.imageSrcSet
            ) +
            '"]'),
          "string" === typeof options.imageSizes &&
            (preloadSelector +=
              '[imagesizes="' +
              escapeSelectorAttributeValueInsideDoubleQuotes(
                options.imageSizes
              ) +
              '"]'))
        : (preloadSelector +=
            '[href="' +
            escapeSelectorAttributeValueInsideDoubleQuotes(href) +
            '"]')
      : (preloadSelector +=
          '[href="' +
          escapeSelectorAttributeValueInsideDoubleQuotes(href) +
          '"]');
    var key = preloadSelector;
    switch (as) {
      case "style":
        key = getStyleKey(href);
        break;
      case "script":
        key = getScriptKey(href);
    }
    preloadPropsMap.has(key) ||
      ((href = assign(
        {
          rel: "preload",
          href:
            "image" === as && options && options.imageSrcSet ? void 0 : href,
          as: as
        },
        options
      )),
      preloadPropsMap.set(key, href),
      null !== ownerDocument.querySelector(preloadSelector) ||
        ("style" === as &&
          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||
        ("script" === as &&
          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||
        ((as = ownerDocument.createElement("link")),
        setInitialProperties(as, "link", href),
        markNodeAsHoistable(as),
        ownerDocument.head.appendChild(as)));
  }
}
function preloadModule(href, options) {
  previousDispatcher.m(href, options);
  var ownerDocument = globalDocument;
  if (ownerDocument && href) {
    var as = options && "string" === typeof options.as ? options.as : "script",
      preloadSelector =
        'link[rel="modulepreload"][as="' +
        escapeSelectorAttributeValueInsideDoubleQuotes(as) +
        '"][href="' +
        escapeSelectorAttributeValueInsideDoubleQuotes(href) +
        '"]',
      key = preloadSelector;
    switch (as) {
      case "audioworklet":
      case "paintworklet":
      case "serviceworker":
      case "sharedworker":
      case "worker":
      case "script":
        key = getScriptKey(href);
    }
    if (
      !preloadPropsMap.has(key) &&
      ((href = assign({ rel: "modulepreload", href: href }, options)),
      preloadPropsMap.set(key, href),
      null === ownerDocument.querySelector(preloadSelector))
    ) {
      switch (as) {
        case "audioworklet":
        case "paintworklet":
        case "serviceworker":
        case "sharedworker":
        case "worker":
        case "script":
          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))
            return;
      }
      as = ownerDocument.createElement("link");
      setInitialProperties(as, "link", href);
      markNodeAsHoistable(as);
      ownerDocument.head.appendChild(as);
    }
  }
}
function preinitStyle(href, precedence, options) {
  previousDispatcher.S(href, precedence, options);
  var ownerDocument = globalDocument;
  if (ownerDocument && href) {
    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,
      key = getStyleKey(href);
    precedence = precedence || "default";
    var resource = styles.get(key);
    if (!resource) {
      var state = { loading: 0, preload: null };
      if (
        (resource = ownerDocument.querySelector(
          getStylesheetSelectorFromKey(key)
        ))
      )
        state.loading = 5;
      else {
        href = assign(
          { rel: "stylesheet", href: href, "data-precedence": precedence },
          options
        );
        (options = preloadPropsMap.get(key)) &&
          adoptPreloadPropsForStylesheet(href, options);
        var link = (resource = ownerDocument.createElement("link"));
        markNodeAsHoistable(link);
        setInitialProperties(link, "link", href);
        link._p = new Promise(function (resolve, reject) {
          link.onload = resolve;
          link.onerror = reject;
        });
        link.addEventListener("load", function () {
          state.loading |= 1;
        });
        link.addEventListener("error", function () {
          state.loading |= 2;
        });
        state.loading |= 4;
        insertStylesheet(resource, precedence, ownerDocument);
      }
      resource = {
        type: "stylesheet",
        instance: resource,
        count: 1,
        state: state
      };
      styles.set(key, resource);
    }
  }
}
function preinitScript(src, options) {
  previousDispatcher.X(src, options);
  var ownerDocument = globalDocument;
  if (ownerDocument && src) {
    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,
      key = getScriptKey(src),
      resource = scripts.get(key);
    resource ||
      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),
      resource ||
        ((src = assign({ src: src, async: !0 }, options)),
        (options = preloadPropsMap.get(key)) &&
          adoptPreloadPropsForScript(src, options),
        (resource = ownerDocument.createElement("script")),
        markNodeAsHoistable(resource),
        setInitialProperties(resource, "link", src),
        ownerDocument.head.appendChild(resource)),
      (resource = {
        type: "script",
        instance: resource,
        count: 1,
        state: null
      }),
      scripts.set(key, resource));
  }
}
function preinitModuleScript(src, options) {
  previousDispatcher.M(src, options);
  var ownerDocument = globalDocument;
  if (ownerDocument && src) {
    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,
      key = getScriptKey(src),
      resource = scripts.get(key);
    resource ||
      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),
      resource ||
        ((src = assign({ src: src, async: !0, type: "module" }, options)),
        (options = preloadPropsMap.get(key)) &&
          adoptPreloadPropsForScript(src, options),
        (resource = ownerDocument.createElement("script")),
        markNodeAsHoistable(resource),
        setInitialProperties(resource, "link", src),
        ownerDocument.head.appendChild(resource)),
      (resource = {
        type: "script",
        instance: resource,
        count: 1,
        state: null
      }),
      scripts.set(key, resource));
  }
}
function getResource(type, currentProps, pendingProps, currentResource) {
  var JSCompiler_inline_result = (JSCompiler_inline_result =
    rootInstanceStackCursor.current)
    ? getHoistableRoot(JSCompiler_inline_result)
    : null;
  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));
  switch (type) {
    case "meta":
    case "title":
      return null;
    case "style":
      return "string" === typeof pendingProps.precedence &&
        "string" === typeof pendingProps.href
        ? ((currentProps = getStyleKey(pendingProps.href)),
          (pendingProps = getResourcesFromRoot(
            JSCompiler_inline_result
          ).hoistableStyles),
          (currentResource = pendingProps.get(currentProps)),
          currentResource ||
            ((currentResource = {
              type: "style",
              instance: null,
              count: 0,
              state: null
            }),
            pendingProps.set(currentProps, currentResource)),
          currentResource)
        : { type: "void", instance: null, count: 0, state: null };
    case "link":
      if (
        "stylesheet" === pendingProps.rel &&
        "string" === typeof pendingProps.href &&
        "string" === typeof pendingProps.precedence
      ) {
        type = getStyleKey(pendingProps.href);
        var styles$242 = getResourcesFromRoot(
            JSCompiler_inline_result
          ).hoistableStyles,
          resource$243 = styles$242.get(type);
        resource$243 ||
          ((JSCompiler_inline_result =
            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
          (resource$243 = {
            type: "stylesheet",
            instance: null,
            count: 0,
            state: { loading: 0, preload: null }
          }),
          styles$242.set(type, resource$243),
          (styles$242 = JSCompiler_inline_result.querySelector(
            getStylesheetSelectorFromKey(type)
          )) &&
            !styles$242._p &&
            ((resource$243.instance = styles$242),
            (resource$243.state.loading = 5)),
          preloadPropsMap.has(type) ||
            ((pendingProps = {
              rel: "preload",
              as: "style",
              href: pendingProps.href,
              crossOrigin: pendingProps.crossOrigin,
              integrity: pendingProps.integrity,
              media: pendingProps.media,
              hrefLang: pendingProps.hrefLang,
              referrerPolicy: pendingProps.referrerPolicy
            }),
            preloadPropsMap.set(type, pendingProps),
            styles$242 ||
              preloadStylesheet(
                JSCompiler_inline_result,
                type,
                pendingProps,
                resource$243.state
              )));
        if (currentProps && null === currentResource)
          throw Error(formatProdErrorMessage(528, ""));
        return resource$243;
      }
      if (currentProps && null !== currentResource)
        throw Error(formatProdErrorMessage(529, ""));
      return null;
    case "script":
      return (
        (currentProps = pendingProps.async),
        (pendingProps = pendingProps.src),
        "string" === typeof pendingProps &&
        currentProps &&
        "function" !== typeof currentProps &&
        "symbol" !== typeof currentProps
          ? ((currentProps = getScriptKey(pendingProps)),
            (pendingProps = getResourcesFromRoot(
              JSCompiler_inline_result
            ).hoistableScripts),
            (currentResource = pendingProps.get(currentProps)),
            currentResource ||
              ((currentResource = {
                type: "script",
                instance: null,
                count: 0,
                state: null
              }),
              pendingProps.set(currentProps, currentResource)),
            currentResource)
          : { type: "void", instance: null, count: 0, state: null }
      );
    default:
      throw Error(formatProdErrorMessage(444, type));
  }
}
function getStyleKey(href) {
  return 'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"';
}
function getStylesheetSelectorFromKey(key) {
  return 'link[rel="stylesheet"][' + key + "]";
}
function stylesheetPropsFromRawProps(rawProps) {
  return assign({}, rawProps, {
    "data-precedence": rawProps.precedence,
    precedence: null
  });
}
function preloadStylesheet(ownerDocument, key, preloadProps, state) {
  ownerDocument.querySelector('link[rel="preload"][as="style"][' + key + "]")
    ? (state.loading = 1)
    : ((key = ownerDocument.createElement("link")),
      (state.preload = key),
      key.addEventListener("load", function () {
        return (state.loading |= 1);
      }),
      key.addEventListener("error", function () {
        return (state.loading |= 2);
      }),
      setInitialProperties(key, "link", preloadProps),
      markNodeAsHoistable(key),
      ownerDocument.head.appendChild(key));
}
function getScriptKey(src) {
  return '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]';
}
function getScriptSelectorFromKey(key) {
  return "script[async]" + key;
}
function acquireResource(hoistableRoot, resource, props) {
  resource.count++;
  if (null === resource.instance)
    switch (resource.type) {
      case "style":
        var instance = hoistableRoot.querySelector(
          'style[data-href~="' +
            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +
            '"]'
        );
        if (instance)
          return (
            (resource.instance = instance),
            markNodeAsHoistable(instance),
            instance
          );
        var styleProps = assign({}, props, {
          "data-href": props.href,
          "data-precedence": props.precedence,
          href: null,
          precedence: null
        });
        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(
          "style"
        );
        markNodeAsHoistable(instance);
        setInitialProperties(instance, "style", styleProps);
        insertStylesheet(instance, props.precedence, hoistableRoot);
        return (resource.instance = instance);
      case "stylesheet":
        styleProps = getStyleKey(props.href);
        var instance$248 = hoistableRoot.querySelector(
          getStylesheetSelectorFromKey(styleProps)
        );
        if (instance$248)
          return (
            (resource.state.loading |= 4),
            (resource.instance = instance$248),
            markNodeAsHoistable(instance$248),
            instance$248
          );
        instance = stylesheetPropsFromRawProps(props);
        (styleProps = preloadPropsMap.get(styleProps)) &&
          adoptPreloadPropsForStylesheet(instance, styleProps);
        instance$248 = (
          hoistableRoot.ownerDocument || hoistableRoot
        ).createElement("link");
        markNodeAsHoistable(instance$248);
        var linkInstance = instance$248;
        linkInstance._p = new Promise(function (resolve, reject) {
          linkInstance.onload = resolve;
          linkInstance.onerror = reject;
        });
        setInitialProperties(instance$248, "link", instance);
        resource.state.loading |= 4;
        insertStylesheet(instance$248, props.precedence, hoistableRoot);
        return (resource.instance = instance$248);
      case "script":
        instance$248 = getScriptKey(props.src);
        if (
          (styleProps = hoistableRoot.querySelector(
            getScriptSelectorFromKey(instance$248)
          ))
        )
          return (
            (resource.instance = styleProps),
            markNodeAsHoistable(styleProps),
            styleProps
          );
        instance = props;
        if ((styleProps = preloadPropsMap.get(instance$248)))
          (instance = assign({}, props)),
            adoptPreloadPropsForScript(instance, styleProps);
        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
        styleProps = hoistableRoot.createElement("script");
        markNodeAsHoistable(styleProps);
        setInitialProperties(styleProps, "link", instance);
        hoistableRoot.head.appendChild(styleProps);
        return (resource.instance = styleProps);
      case "void":
        return null;
      default:
        throw Error(formatProdErrorMessage(443, resource.type));
    }
  else
    "stylesheet" === resource.type &&
      0 === (resource.state.loading & 4) &&
      ((instance = resource.instance),
      (resource.state.loading |= 4),
      insertStylesheet(instance, props.precedence, hoistableRoot));
  return resource.instance;
}
function insertStylesheet(instance, precedence, root) {
  for (
    var nodes = root.querySelectorAll(
        'link[rel="stylesheet"][data-precedence],style[data-precedence]'
      ),
      last = nodes.length ? nodes[nodes.length - 1] : null,
      prior = last,
      i = 0;
    i < nodes.length;
    i++
  ) {
    var node = nodes[i];
    if (node.dataset.precedence === precedence) prior = node;
    else if (prior !== last) break;
  }
  prior
    ? prior.parentNode.insertBefore(instance, prior.nextSibling)
    : ((precedence = 9 === root.nodeType ? root.head : root),
      precedence.insertBefore(instance, precedence.firstChild));
}
function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
  null == stylesheetProps.crossOrigin &&
    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
  null == stylesheetProps.referrerPolicy &&
    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);
}
function adoptPreloadPropsForScript(scriptProps, preloadProps) {
  null == scriptProps.crossOrigin &&
    (scriptProps.crossOrigin = preloadProps.crossOrigin);
  null == scriptProps.referrerPolicy &&
    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
  null == scriptProps.integrity &&
    (scriptProps.integrity = preloadProps.integrity);
}
var tagCaches = null;
function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
  if (null === tagCaches) {
    var cache = new Map();
    var caches = (tagCaches = new Map());
    caches.set(ownerDocument, cache);
  } else
    (caches = tagCaches),
      (cache = caches.get(ownerDocument)),
      cache || ((cache = new Map()), caches.set(ownerDocument, cache));
  if (cache.has(type)) return cache;
  cache.set(type, null);
  ownerDocument = ownerDocument.getElementsByTagName(type);
  for (caches = 0; caches < ownerDocument.length; caches++) {
    var node = ownerDocument[caches];
    if (
      !(
        node[internalHoistableMarker] ||
        node[internalInstanceKey] ||
        ("link" === type && "stylesheet" === node.getAttribute("rel"))
      ) &&
      "http://www.w3.org/2000/svg" !== node.namespaceURI
    ) {
      var nodeKey = node.getAttribute(keyAttribute) || "";
      nodeKey = type + nodeKey;
      var existing = cache.get(nodeKey);
      existing ? existing.push(node) : cache.set(nodeKey, [node]);
    }
  }
  return cache;
}
function mountHoistable(hoistableRoot, type, instance) {
  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
  hoistableRoot.head.insertBefore(
    instance,
    "title" === type ? hoistableRoot.querySelector("head > title") : null
  );
}
function isHostHoistableType(type, props, hostContext) {
  if (1 === hostContext || null != props.itemProp) return !1;
  switch (type) {
    case "meta":
    case "title":
      return !0;
    case "style":
      if (
        "string" !== typeof props.precedence ||
        "string" !== typeof props.href ||
        "" === props.href
      )
        break;
      return !0;
    case "link":
      if (
        "string" !== typeof props.rel ||
        "string" !== typeof props.href ||
        "" === props.href ||
        props.onLoad ||
        props.onError
      )
        break;
      switch (props.rel) {
        case "stylesheet":
          return (
            (type = props.disabled),
            "string" === typeof props.precedence && null == type
          );
        default:
          return !0;
      }
    case "script":
      if (
        props.async &&
        "function" !== typeof props.async &&
        "symbol" !== typeof props.async &&
        !props.onLoad &&
        !props.onError &&
        props.src &&
        "string" === typeof props.src
      )
        return !0;
  }
  return !1;
}
function preloadResource(resource) {
  return "stylesheet" === resource.type && 0 === (resource.state.loading & 3)
    ? !1
    : !0;
}
var suspendedState = null;
function noop() {}
function suspendResource(hoistableRoot, resource, props) {
  if (null === suspendedState) throw Error(formatProdErrorMessage(475));
  var state = suspendedState;
  if (
    "stylesheet" === resource.type &&
    ("string" !== typeof props.media ||
      !1 !== matchMedia(props.media).matches) &&
    0 === (resource.state.loading & 4)
  ) {
    if (null === resource.instance) {
      var key = getStyleKey(props.href),
        instance = hoistableRoot.querySelector(
          getStylesheetSelectorFromKey(key)
        );
      if (instance) {
        hoistableRoot = instance._p;
        null !== hoistableRoot &&
          "object" === typeof hoistableRoot &&
          "function" === typeof hoistableRoot.then &&
          (state.count++,
          (state = onUnsuspend.bind(state)),
          hoistableRoot.then(state, state));
        resource.state.loading |= 4;
        resource.instance = instance;
        markNodeAsHoistable(instance);
        return;
      }
      instance = hoistableRoot.ownerDocument || hoistableRoot;
      props = stylesheetPropsFromRawProps(props);
      (key = preloadPropsMap.get(key)) &&
        adoptPreloadPropsForStylesheet(props, key);
      instance = instance.createElement("link");
      markNodeAsHoistable(instance);
      var linkInstance = instance;
      linkInstance._p = new Promise(function (resolve, reject) {
        linkInstance.onload = resolve;
        linkInstance.onerror = reject;
      });
      setInitialProperties(instance, "link", props);
      resource.instance = instance;
    }
    null === state.stylesheets && (state.stylesheets = new Map());
    state.stylesheets.set(resource, hoistableRoot);
    (hoistableRoot = resource.state.preload) &&
      0 === (resource.state.loading & 3) &&
      (state.count++,
      (resource = onUnsuspend.bind(state)),
      hoistableRoot.addEventListener("load", resource),
      hoistableRoot.addEventListener("error", resource));
  }
}
function waitForCommitToBeReady() {
  if (null === suspendedState) throw Error(formatProdErrorMessage(475));
  var state = suspendedState;
  state.stylesheets &&
    0 === state.count &&
    insertSuspendedStylesheets(state, state.stylesheets);
  return 0 < state.count
    ? function (commit) {
        var stylesheetTimer = setTimeout(function () {
          state.stylesheets &&
            insertSuspendedStylesheets(state, state.stylesheets);
          if (state.unsuspend) {
            var unsuspend = state.unsuspend;
            state.unsuspend = null;
            unsuspend();
          }
        }, 6e4);
        state.unsuspend = commit;
        return function () {
          state.unsuspend = null;
          clearTimeout(stylesheetTimer);
        };
      }
    : null;
}
function onUnsuspend() {
  this.count--;
  if (0 === this.count)
    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);
    else if (this.unsuspend) {
      var unsuspend = this.unsuspend;
      this.unsuspend = null;
      unsuspend();
    }
}
var precedencesByRoot = null;
function insertSuspendedStylesheets(state, resources) {
  state.stylesheets = null;
  null !== state.unsuspend &&
    (state.count++,
    (precedencesByRoot = new Map()),
    resources.forEach(insertStylesheetIntoRoot, state),
    (precedencesByRoot = null),
    onUnsuspend.call(state));
}
function insertStylesheetIntoRoot(root, resource) {
  if (!(resource.state.loading & 4)) {
    var precedences = precedencesByRoot.get(root);
    if (precedences) var last = precedences.get(null);
    else {
      precedences = new Map();
      precedencesByRoot.set(root, precedences);
      for (
        var nodes = root.querySelectorAll(
            "link[data-precedence],style[data-precedence]"
          ),
          i = 0;
        i < nodes.length;
        i++
      ) {
        var node = nodes[i];
        if (
          "LINK" === node.nodeName ||
          "not all" !== node.getAttribute("media")
        )
          precedences.set(node.dataset.precedence, node), (last = node);
      }
      last && precedences.set(null, last);
    }
    nodes = resource.instance;
    node = nodes.getAttribute("data-precedence");
    i = precedences.get(node) || last;
    i === last && precedences.set(null, nodes);
    precedences.set(node, nodes);
    this.count++;
    last = onUnsuspend.bind(this);
    nodes.addEventListener("load", last);
    nodes.addEventListener("error", last);
    i
      ? i.parentNode.insertBefore(nodes, i.nextSibling)
      : ((root = 9 === root.nodeType ? root.head : root),
        root.insertBefore(nodes, root.firstChild));
    resource.state.loading |= 4;
  }
}
var HostTransitionContext = {
  $$typeof: REACT_CONTEXT_TYPE,
  Provider: null,
  Consumer: null,
  _currentValue: sharedNotPendingObject,
  _currentValue2: sharedNotPendingObject,
  _threadCount: 0
};
function FiberRootNode(
  containerInfo,
  tag,
  hydrate,
  identifierPrefix,
  onUncaughtError,
  onCaughtError,
  onRecoverableError,
  formState
) {
  this.tag = 1;
  this.containerInfo = containerInfo;
  this.finishedWork =
    this.pingCache =
    this.current =
    this.pendingChildren =
      null;
  this.timeoutHandle = -1;
  this.callbackNode =
    this.next =
    this.pendingContext =
    this.context =
    this.cancelPendingCommit =
      null;
  this.callbackPriority = 0;
  this.expirationTimes = createLaneMap(-1);
  this.entangledLanes =
    this.shellSuspendCounter =
    this.errorRecoveryDisabledLanes =
    this.finishedLanes =
    this.expiredLanes =
    this.warmLanes =
    this.pingedLanes =
    this.suspendedLanes =
    this.pendingLanes =
      0;
  this.entanglements = createLaneMap(0);
  this.hiddenUpdates = createLaneMap(null);
  this.identifierPrefix = identifierPrefix;
  this.onUncaughtError = onUncaughtError;
  this.onCaughtError = onCaughtError;
  this.onRecoverableError = onRecoverableError;
  this.pooledCache = null;
  this.pooledCacheLanes = 0;
  this.formState = formState;
  this.incompleteTransitions = new Map();
}
function createFiberRoot(
  containerInfo,
  tag,
  hydrate,
  initialChildren,
  hydrationCallbacks,
  isStrictMode,
  identifierPrefix,
  onUncaughtError,
  onCaughtError,
  onRecoverableError,
  transitionCallbacks,
  formState
) {
  containerInfo = new FiberRootNode(
    containerInfo,
    tag,
    hydrate,
    identifierPrefix,
    onUncaughtError,
    onCaughtError,
    onRecoverableError,
    formState
  );
  tag = 1;
  !0 === isStrictMode && (tag |= 24);
  isStrictMode = createFiberImplClass(3, null, null, tag);
  containerInfo.current = isStrictMode;
  isStrictMode.stateNode = containerInfo;
  tag = createCache();
  tag.refCount++;
  containerInfo.pooledCache = tag;
  tag.refCount++;
  isStrictMode.memoizedState = {
    element: initialChildren,
    isDehydrated: hydrate,
    cache: tag
  };
  initializeUpdateQueue(isStrictMode);
  return containerInfo;
}
function getContextForSubtree(parentComponent) {
  if (!parentComponent) return emptyContextObject;
  parentComponent = emptyContextObject;
  return parentComponent;
}
function updateContainerImpl(
  rootFiber,
  lane,
  element,
  container,
  parentComponent,
  callback
) {
  parentComponent = getContextForSubtree(parentComponent);
  null === container.context
    ? (container.context = parentComponent)
    : (container.pendingContext = parentComponent);
  container = createUpdate(lane);
  container.payload = { element: element };
  callback = void 0 === callback ? null : callback;
  null !== callback && (container.callback = callback);
  element = enqueueUpdate(rootFiber, container, lane);
  null !== element &&
    (scheduleUpdateOnFiber(element, rootFiber, lane),
    entangleTransitions(element, rootFiber, lane));
}
function markRetryLaneImpl(fiber, retryLane) {
  fiber = fiber.memoizedState;
  if (null !== fiber && null !== fiber.dehydrated) {
    var a = fiber.retryLane;
    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
  }
}
function markRetryLaneIfNotHydrated(fiber, retryLane) {
  markRetryLaneImpl(fiber, retryLane);
  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
}
function attemptContinuousHydration(fiber) {
  if (13 === fiber.tag) {
    var root = enqueueConcurrentRenderForLane(fiber, 67108864);
    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
    markRetryLaneIfNotHydrated(fiber, 67108864);
  }
}
var _enabled = !0;
function dispatchDiscreteEvent(
  domEventName,
  eventSystemFlags,
  container,
  nativeEvent
) {
  var prevTransition = ReactSharedInternals.T;
  ReactSharedInternals.T = null;
  var previousPriority = ReactDOMSharedInternals.p;
  try {
    (ReactDOMSharedInternals.p = 2),
      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    (ReactDOMSharedInternals.p = previousPriority),
      (ReactSharedInternals.T = prevTransition);
  }
}
function dispatchContinuousEvent(
  domEventName,
  eventSystemFlags,
  container,
  nativeEvent
) {
  var prevTransition = ReactSharedInternals.T;
  ReactSharedInternals.T = null;
  var previousPriority = ReactDOMSharedInternals.p;
  try {
    (ReactDOMSharedInternals.p = 8),
      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    (ReactDOMSharedInternals.p = previousPriority),
      (ReactSharedInternals.T = prevTransition);
  }
}
function dispatchEvent(
  domEventName,
  eventSystemFlags,
  targetContainer,
  nativeEvent
) {
  if (_enabled) {
    var blockedOn = findInstanceBlockingEvent(nativeEvent);
    if (null === blockedOn)
      dispatchEventForPluginEventSystem(
        domEventName,
        eventSystemFlags,
        nativeEvent,
        return_targetInst,
        targetContainer
      ),
        clearIfContinuousEvent(domEventName, nativeEvent);
    else if (
      queueIfContinuousEvent(
        blockedOn,
        domEventName,
        eventSystemFlags,
        targetContainer,
        nativeEvent
      )
    )
      nativeEvent.stopPropagation();
    else if (
      (clearIfContinuousEvent(domEventName, nativeEvent),
      eventSystemFlags & 4 &&
        -1 < discreteReplayableEvents.indexOf(domEventName))
    ) {
      for (; null !== blockedOn; ) {
        var fiber = getInstanceFromNode(blockedOn);
        if (null !== fiber)
          switch (fiber.tag) {
            case 3:
              fiber = fiber.stateNode;
              if (fiber.current.memoizedState.isDehydrated) {
                var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                if (0 !== lanes) {
                  var root = fiber;
                  root.pendingLanes |= 2;
                  for (root.entangledLanes |= 2; lanes; ) {
                    var lane = 1 << (31 - clz32(lanes));
                    root.entanglements[1] |= lane;
                    lanes &= ~lane;
                  }
                  ensureRootIsScheduled(fiber);
                  0 === (executionContext & 6) &&
                    ((workInProgressRootRenderTargetTime = now() + 500),
                    flushSyncWorkAcrossRoots_impl(0, !1));
                }
              }
              break;
            case 13:
              (root = enqueueConcurrentRenderForLane(fiber, 2)),
                null !== root && scheduleUpdateOnFiber(root, fiber, 2),
                flushSyncWork$1(),
                markRetryLaneIfNotHydrated(fiber, 2);
          }
        fiber = findInstanceBlockingEvent(nativeEvent);
        null === fiber &&
          dispatchEventForPluginEventSystem(
            domEventName,
            eventSystemFlags,
            nativeEvent,
            return_targetInst,
            targetContainer
          );
        if (fiber === blockedOn) break;
        blockedOn = fiber;
      }
      null !== blockedOn && nativeEvent.stopPropagation();
    } else
      dispatchEventForPluginEventSystem(
        domEventName,
        eventSystemFlags,
        nativeEvent,
        null,
        targetContainer
      );
  }
}
function findInstanceBlockingEvent(nativeEvent) {
  nativeEvent = getEventTarget(nativeEvent);
  return findInstanceBlockingTarget(nativeEvent);
}
var return_targetInst = null;
function findInstanceBlockingTarget(targetNode) {
  return_targetInst = null;
  targetNode = getClosestInstanceFromNode(targetNode);
  if (null !== targetNode) {
    var nearestMounted = getNearestMountedFiber(targetNode);
    if (null === nearestMounted) targetNode = null;
    else {
      var tag = nearestMounted.tag;
      if (13 === tag) {
        targetNode = getSuspenseInstanceFromFiber(nearestMounted);
        if (null !== targetNode) return targetNode;
        targetNode = null;
      } else if (3 === tag) {
        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)
          return 3 === nearestMounted.tag
            ? nearestMounted.stateNode.containerInfo
            : null;
        targetNode = null;
      } else nearestMounted !== targetNode && (targetNode = null);
    }
  }
  return_targetInst = targetNode;
  return null;
}
function getEventPriority(domEventName) {
  switch (domEventName) {
    case "beforetoggle":
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "toggle":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 2;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 8;
    case "message":
      switch (getCurrentPriorityLevel()) {
        case ImmediatePriority:
          return 2;
        case UserBlockingPriority:
          return 8;
        case NormalPriority$1:
        case LowPriority:
          return 32;
        case IdlePriority:
          return 268435456;
        default:
          return 32;
      }
    default:
      return 32;
  }
}
var hasScheduledReplayAttempt = !1,
  queuedFocus = null,
  queuedDrag = null,
  queuedMouse = null,
  queuedPointers = new Map(),
  queuedPointerCaptures = new Map(),
  queuedExplicitHydrationTargets = [],
  discreteReplayableEvents =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(
      " "
    );
function clearIfContinuousEvent(domEventName, nativeEvent) {
  switch (domEventName) {
    case "focusin":
    case "focusout":
      queuedFocus = null;
      break;
    case "dragenter":
    case "dragleave":
      queuedDrag = null;
      break;
    case "mouseover":
    case "mouseout":
      queuedMouse = null;
      break;
    case "pointerover":
    case "pointerout":
      queuedPointers.delete(nativeEvent.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      queuedPointerCaptures.delete(nativeEvent.pointerId);
  }
}
function accumulateOrCreateContinuousQueuedReplayableEvent(
  existingQueuedEvent,
  blockedOn,
  domEventName,
  eventSystemFlags,
  targetContainer,
  nativeEvent
) {
  if (
    null === existingQueuedEvent ||
    existingQueuedEvent.nativeEvent !== nativeEvent
  )
    return (
      (existingQueuedEvent = {
        blockedOn: blockedOn,
        domEventName: domEventName,
        eventSystemFlags: eventSystemFlags,
        nativeEvent: nativeEvent,
        targetContainers: [targetContainer]
      }),
      null !== blockedOn &&
        ((blockedOn = getInstanceFromNode(blockedOn)),
        null !== blockedOn && attemptContinuousHydration(blockedOn)),
      existingQueuedEvent
    );
  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  blockedOn = existingQueuedEvent.targetContainers;
  null !== targetContainer &&
    -1 === blockedOn.indexOf(targetContainer) &&
    blockedOn.push(targetContainer);
  return existingQueuedEvent;
}
function queueIfContinuousEvent(
  blockedOn,
  domEventName,
  eventSystemFlags,
  targetContainer,
  nativeEvent
) {
  switch (domEventName) {
    case "focusin":
      return (
        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(
          queuedFocus,
          blockedOn,
          domEventName,
          eventSystemFlags,
          targetContainer,
          nativeEvent
        )),
        !0
      );
    case "dragenter":
      return (
        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(
          queuedDrag,
          blockedOn,
          domEventName,
          eventSystemFlags,
          targetContainer,
          nativeEvent
        )),
        !0
      );
    case "mouseover":
      return (
        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(
          queuedMouse,
          blockedOn,
          domEventName,
          eventSystemFlags,
          targetContainer,
          nativeEvent
        )),
        !0
      );
    case "pointerover":
      var pointerId = nativeEvent.pointerId;
      queuedPointers.set(
        pointerId,
        accumulateOrCreateContinuousQueuedReplayableEvent(
          queuedPointers.get(pointerId) || null,
          blockedOn,
          domEventName,
          eventSystemFlags,
          targetContainer,
          nativeEvent
        )
      );
      return !0;
    case "gotpointercapture":
      return (
        (pointerId = nativeEvent.pointerId),
        queuedPointerCaptures.set(
          pointerId,
          accumulateOrCreateContinuousQueuedReplayableEvent(
            queuedPointerCaptures.get(pointerId) || null,
            blockedOn,
            domEventName,
            eventSystemFlags,
            targetContainer,
            nativeEvent
          )
        ),
        !0
      );
  }
  return !1;
}
function attemptExplicitHydrationTarget(queuedTarget) {
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);
  if (null !== targetInst) {
    var nearestMounted = getNearestMountedFiber(targetInst);
    if (null !== nearestMounted)
      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {
        if (
          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),
          null !== targetInst)
        ) {
          queuedTarget.blockedOn = targetInst;
          runWithPriority(queuedTarget.priority, function () {
            if (13 === nearestMounted.tag) {
              var lane = requestUpdateLane(),
                root = enqueueConcurrentRenderForLane(nearestMounted, lane);
              null !== root &&
                scheduleUpdateOnFiber(root, nearestMounted, lane);
              markRetryLaneIfNotHydrated(nearestMounted, lane);
            }
          });
          return;
        }
      } else if (
        3 === targetInst &&
        nearestMounted.stateNode.current.memoizedState.isDehydrated
      ) {
        queuedTarget.blockedOn =
          3 === nearestMounted.tag
            ? nearestMounted.stateNode.containerInfo
            : null;
        return;
      }
  }
  queuedTarget.blockedOn = null;
}
function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (null !== queuedEvent.blockedOn) return !1;
  for (
    var targetContainers = queuedEvent.targetContainers;
    0 < targetContainers.length;

  ) {
    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
    if (null === nextBlockedOn) {
      nextBlockedOn = queuedEvent.nativeEvent;
      var nativeEventClone = new nextBlockedOn.constructor(
        nextBlockedOn.type,
        nextBlockedOn
      );
      currentReplayingEvent = nativeEventClone;
      nextBlockedOn.target.dispatchEvent(nativeEventClone);
      currentReplayingEvent = null;
    } else
      return (
        (targetContainers = getInstanceFromNode(nextBlockedOn)),
        null !== targetContainers &&
          attemptContinuousHydration(targetContainers),
        (queuedEvent.blockedOn = nextBlockedOn),
        !1
      );
    targetContainers.shift();
  }
  return !0;
}
function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
}
function replayUnblockedEvents() {
  hasScheduledReplayAttempt = !1;
  null !== queuedFocus &&
    attemptReplayContinuousQueuedEvent(queuedFocus) &&
    (queuedFocus = null);
  null !== queuedDrag &&
    attemptReplayContinuousQueuedEvent(queuedDrag) &&
    (queuedDrag = null);
  null !== queuedMouse &&
    attemptReplayContinuousQueuedEvent(queuedMouse) &&
    (queuedMouse = null);
  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}
function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  queuedEvent.blockedOn === unblocked &&
    ((queuedEvent.blockedOn = null),
    hasScheduledReplayAttempt ||
      ((hasScheduledReplayAttempt = !0),
      Scheduler.unstable_scheduleCallback(
        Scheduler.unstable_NormalPriority,
        replayUnblockedEvents
      )));
}
var lastScheduledReplayQueue = null;
function scheduleReplayQueueIfNeeded(formReplayingQueue) {
  lastScheduledReplayQueue !== formReplayingQueue &&
    ((lastScheduledReplayQueue = formReplayingQueue),
    Scheduler.unstable_scheduleCallback(
      Scheduler.unstable_NormalPriority,
      function () {
        lastScheduledReplayQueue === formReplayingQueue &&
          (lastScheduledReplayQueue = null);
        for (var i = 0; i < formReplayingQueue.length; i += 3) {
          var form = formReplayingQueue[i],
            submitterOrAction = formReplayingQueue[i + 1],
            formData = formReplayingQueue[i + 2];
          if ("function" !== typeof submitterOrAction)
            if (null === findInstanceBlockingTarget(submitterOrAction || form))
              continue;
            else break;
          var formInst = getInstanceFromNode(form);
          null !== formInst &&
            (formReplayingQueue.splice(i, 3),
            (i -= 3),
            startHostTransition(
              formInst,
              {
                pending: !0,
                data: formData,
                method: form.method,
                action: submitterOrAction
              },
              submitterOrAction,
              formData
            ));
        }
      }
    ));
}
function retryIfBlockedOn(unblocked) {
  function unblock(queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  }
  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);
  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {
    var queuedTarget = queuedExplicitHydrationTargets[i];
    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
  }
  for (
    ;
    0 < queuedExplicitHydrationTargets.length &&
    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);

  )
    attemptExplicitHydrationTarget(i),
      null === i.blockedOn && queuedExplicitHydrationTargets.shift();
  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
  if (null != i)
    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {
      var form = i[queuedTarget],
        submitterOrAction = i[queuedTarget + 1],
        formProps = form[internalPropsKey] || null;
      if ("function" === typeof submitterOrAction)
        formProps || scheduleReplayQueueIfNeeded(i);
      else if (formProps) {
        var action = null;
        if (submitterOrAction && submitterOrAction.hasAttribute("formAction"))
          if (
            ((form = submitterOrAction),
            (formProps = submitterOrAction[internalPropsKey] || null))
          )
            action = formProps.formAction;
          else {
            if (null !== findInstanceBlockingTarget(form)) continue;
          }
        else action = formProps.action;
        "function" === typeof action
          ? (i[queuedTarget + 1] = action)
          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));
        scheduleReplayQueueIfNeeded(i);
      }
    }
}
function ReactDOMRoot(internalRoot) {
  this._internalRoot = internalRoot;
}
ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =
  function (children) {
    var root = this._internalRoot;
    if (null === root) throw Error(formatProdErrorMessage(409));
    var current = root.current,
      lane = requestUpdateLane();
    updateContainerImpl(current, lane, children, root, null, null);
  };
ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =
  function () {
    var root = this._internalRoot;
    if (null !== root) {
      this._internalRoot = null;
      var container = root.containerInfo;
      0 === root.tag && flushPassiveEffects();
      updateContainerImpl(root.current, 2, null, root, null, null);
      flushSyncWork$1();
      container[internalContainerInstanceKey] = null;
    }
  };
function ReactDOMHydrationRoot(internalRoot) {
  this._internalRoot = internalRoot;
}
ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
  if (target) {
    var updatePriority = resolveUpdatePriority();
    target = { blockedOn: null, target: target, priority: updatePriority };
    for (
      var i = 0;
      i < queuedExplicitHydrationTargets.length &&
      0 !== updatePriority &&
      updatePriority < queuedExplicitHydrationTargets[i].priority;
      i++
    );
    queuedExplicitHydrationTargets.splice(i, 0, target);
    0 === i && attemptExplicitHydrationTarget(target);
  }
};
var isomorphicReactPackageVersion$jscomp$inline_1686 = React.version;
if (
  "19.0.0" !==
  isomorphicReactPackageVersion$jscomp$inline_1686
)
  throw Error(
    formatProdErrorMessage(
      527,
      isomorphicReactPackageVersion$jscomp$inline_1686,
      "19.0.0"
    )
  );
ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
  var fiber = componentOrElement._reactInternals;
  if (void 0 === fiber) {
    if ("function" === typeof componentOrElement.render)
      throw Error(formatProdErrorMessage(188));
    componentOrElement = Object.keys(componentOrElement).join(",");
    throw Error(formatProdErrorMessage(268, componentOrElement));
  }
  componentOrElement = findCurrentFiberUsingSlowPath(fiber);
  componentOrElement =
    null !== componentOrElement
      ? findCurrentHostFiberImpl(componentOrElement)
      : null;
  componentOrElement =
    null === componentOrElement ? null : componentOrElement.stateNode;
  return componentOrElement;
};
var internals$jscomp$inline_2165 = {
  bundleType: 0,
  version: "19.0.0",
  rendererPackageName: "react-dom",
  currentDispatcherRef: ReactSharedInternals,
  findFiberByHostInstance: getClosestInstanceFromNode,
  reconcilerVersion: "19.0.0"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var hook$jscomp$inline_2166 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (
    !hook$jscomp$inline_2166.isDisabled &&
    hook$jscomp$inline_2166.supportsFiber
  )
    try {
      (rendererID = hook$jscomp$inline_2166.inject(
        internals$jscomp$inline_2165
      )),
        (injectedHook = hook$jscomp$inline_2166);
    } catch (err) {}
}
exports.createRoot = function (container, options) {
  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));
  var isStrictMode = !1,
    identifierPrefix = "",
    onUncaughtError = defaultOnUncaughtError,
    onCaughtError = defaultOnCaughtError,
    onRecoverableError = defaultOnRecoverableError,
    transitionCallbacks = null;
  null !== options &&
    void 0 !== options &&
    (!0 === options.unstable_strictMode && (isStrictMode = !0),
    void 0 !== options.identifierPrefix &&
      (identifierPrefix = options.identifierPrefix),
    void 0 !== options.onUncaughtError &&
      (onUncaughtError = options.onUncaughtError),
    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),
    void 0 !== options.onRecoverableError &&
      (onRecoverableError = options.onRecoverableError),
    void 0 !== options.unstable_transitionCallbacks &&
      (transitionCallbacks = options.unstable_transitionCallbacks));
  options = createFiberRoot(
    container,
    1,
    !1,
    null,
    null,
    isStrictMode,
    identifierPrefix,
    onUncaughtError,
    onCaughtError,
    onRecoverableError,
    transitionCallbacks,
    null
  );
  container[internalContainerInstanceKey] = options.current;
  listenToAllSupportedEvents(
    8 === container.nodeType ? container.parentNode : container
  );
  return new ReactDOMRoot(options);
};
__webpack_unused_export__ = function (container, initialChildren, options) {
  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));
  var isStrictMode = !1,
    identifierPrefix = "",
    onUncaughtError = defaultOnUncaughtError,
    onCaughtError = defaultOnCaughtError,
    onRecoverableError = defaultOnRecoverableError,
    transitionCallbacks = null,
    formState = null;
  null !== options &&
    void 0 !== options &&
    (!0 === options.unstable_strictMode && (isStrictMode = !0),
    void 0 !== options.identifierPrefix &&
      (identifierPrefix = options.identifierPrefix),
    void 0 !== options.onUncaughtError &&
      (onUncaughtError = options.onUncaughtError),
    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),
    void 0 !== options.onRecoverableError &&
      (onRecoverableError = options.onRecoverableError),
    void 0 !== options.unstable_transitionCallbacks &&
      (transitionCallbacks = options.unstable_transitionCallbacks),
    void 0 !== options.formState && (formState = options.formState));
  initialChildren = createFiberRoot(
    container,
    1,
    !0,
    initialChildren,
    null != options ? options : null,
    isStrictMode,
    identifierPrefix,
    onUncaughtError,
    onCaughtError,
    onRecoverableError,
    transitionCallbacks,
    formState
  );
  initialChildren.context = getContextForSubtree(null);
  options = initialChildren.current;
  isStrictMode = requestUpdateLane();
  identifierPrefix = createUpdate(isStrictMode);
  identifierPrefix.callback = null;
  enqueueUpdate(options, identifierPrefix, isStrictMode);
  initialChildren.current.lanes = isStrictMode;
  markRootUpdated$1(initialChildren, isStrictMode);
  ensureRootIsScheduled(initialChildren);
  container[internalContainerInstanceKey] = initialChildren.current;
  listenToAllSupportedEvents(container);
  return new ReactDOMHydrationRoot(initialChildren);
};
__webpack_unused_export__ = "19.0.0";


/***/ }),

/***/ 6221:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var React = __webpack_require__(6540);
function formatProdErrorMessage(code) {
  var url = "https://react.dev/errors/" + code;
  if (1 < arguments.length) {
    url += "?args[]=" + encodeURIComponent(arguments[1]);
    for (var i = 2; i < arguments.length; i++)
      url += "&args[]=" + encodeURIComponent(arguments[i]);
  }
  return (
    "Minified React error #" +
    code +
    "; visit " +
    url +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
function noop() {}
var Internals = {
    d: {
      f: noop,
      r: function () {
        throw Error(formatProdErrorMessage(522));
      },
      D: noop,
      C: noop,
      L: noop,
      m: noop,
      X: noop,
      S: noop,
      M: noop
    },
    p: 0,
    findDOMNode: null
  },
  REACT_PORTAL_TYPE = Symbol.for("react.portal");
function createPortal$1(children, containerInfo, implementation) {
  var key =
    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: REACT_PORTAL_TYPE,
    key: null == key ? null : "" + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}
var ReactSharedInternals =
  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
function getCrossOriginStringAs(as, input) {
  if ("font" === as) return "";
  if ("string" === typeof input)
    return "use-credentials" === input ? input : "";
}
exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
  Internals;
exports.createPortal = function (children, container) {
  var key =
    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (
    !container ||
    (1 !== container.nodeType &&
      9 !== container.nodeType &&
      11 !== container.nodeType)
  )
    throw Error(formatProdErrorMessage(299));
  return createPortal$1(children, container, null, key);
};
exports.flushSync = function (fn) {
  var previousTransition = ReactSharedInternals.T,
    previousUpdatePriority = Internals.p;
  try {
    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();
  } finally {
    (ReactSharedInternals.T = previousTransition),
      (Internals.p = previousUpdatePriority),
      Internals.d.f();
  }
};
exports.preconnect = function (href, options) {
  "string" === typeof href &&
    (options
      ? ((options = options.crossOrigin),
        (options =
          "string" === typeof options
            ? "use-credentials" === options
              ? options
              : ""
            : void 0))
      : (options = null),
    Internals.d.C(href, options));
};
exports.prefetchDNS = function (href) {
  "string" === typeof href && Internals.d.D(href);
};
exports.preinit = function (href, options) {
  if ("string" === typeof href && options && "string" === typeof options.as) {
    var as = options.as,
      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),
      integrity =
        "string" === typeof options.integrity ? options.integrity : void 0,
      fetchPriority =
        "string" === typeof options.fetchPriority
          ? options.fetchPriority
          : void 0;
    "style" === as
      ? Internals.d.S(
          href,
          "string" === typeof options.precedence ? options.precedence : void 0,
          {
            crossOrigin: crossOrigin,
            integrity: integrity,
            fetchPriority: fetchPriority
          }
        )
      : "script" === as &&
        Internals.d.X(href, {
          crossOrigin: crossOrigin,
          integrity: integrity,
          fetchPriority: fetchPriority,
          nonce: "string" === typeof options.nonce ? options.nonce : void 0
        });
  }
};
exports.preinitModule = function (href, options) {
  if ("string" === typeof href)
    if ("object" === typeof options && null !== options) {
      if (null == options.as || "script" === options.as) {
        var crossOrigin = getCrossOriginStringAs(
          options.as,
          options.crossOrigin
        );
        Internals.d.M(href, {
          crossOrigin: crossOrigin,
          integrity:
            "string" === typeof options.integrity ? options.integrity : void 0,
          nonce: "string" === typeof options.nonce ? options.nonce : void 0
        });
      }
    } else null == options && Internals.d.M(href);
};
exports.preload = function (href, options) {
  if (
    "string" === typeof href &&
    "object" === typeof options &&
    null !== options &&
    "string" === typeof options.as
  ) {
    var as = options.as,
      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);
    Internals.d.L(href, as, {
      crossOrigin: crossOrigin,
      integrity:
        "string" === typeof options.integrity ? options.integrity : void 0,
      nonce: "string" === typeof options.nonce ? options.nonce : void 0,
      type: "string" === typeof options.type ? options.type : void 0,
      fetchPriority:
        "string" === typeof options.fetchPriority
          ? options.fetchPriority
          : void 0,
      referrerPolicy:
        "string" === typeof options.referrerPolicy
          ? options.referrerPolicy
          : void 0,
      imageSrcSet:
        "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
      imageSizes:
        "string" === typeof options.imageSizes ? options.imageSizes : void 0,
      media: "string" === typeof options.media ? options.media : void 0
    });
  }
};
exports.preloadModule = function (href, options) {
  if ("string" === typeof href)
    if (options) {
      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);
      Internals.d.m(href, {
        as:
          "string" === typeof options.as && "script" !== options.as
            ? options.as
            : void 0,
        crossOrigin: crossOrigin,
        integrity:
          "string" === typeof options.integrity ? options.integrity : void 0
      });
    } else Internals.d.m(href);
};
exports.requestFormReset = function (form) {
  Internals.d.r(form);
};
exports.unstable_batchedUpdates = function (fn, a) {
  return fn(a);
};
exports.useFormState = function (action, initialState, permalink) {
  return ReactSharedInternals.H.useFormState(action, initialState, permalink);
};
exports.useFormStatus = function () {
  return ReactSharedInternals.H.useHostTransitionStatus();
};
exports.version = "19.0.0";


/***/ }),

/***/ 5338:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(1247);
} else {}


/***/ }),

/***/ 961:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(6221);
} else {}


/***/ }),

/***/ 769:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ esm_ClipLoader)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
;// ./node_modules/react-spinners/esm/helpers/unitConverter.js
var cssUnit = {
    cm: true,
    mm: true,
    in: true,
    px: true,
    pt: true,
    pc: true,
    em: true,
    ex: true,
    ch: true,
    rem: true,
    vw: true,
    vh: true,
    vmin: true,
    vmax: true,
    "%": true,
};
/**
 * If size is a number, append px to the value as default unit.
 * If size is a string, validate against list of valid units.
 * If unit is valid, return size as is.
 * If unit is invalid, console warn issue, replace with px as the unit.
 *
 * @param {(number | string)} size
 * @return {LengthObject} LengthObject
 */
function parseLengthAndUnit(size) {
    if (typeof size === "number") {
        return {
            value: size,
            unit: "px",
        };
    }
    var value;
    var valueString = (size.match(/^[0-9.]*/) || "").toString();
    if (valueString.includes(".")) {
        value = parseFloat(valueString);
    }
    else {
        value = parseInt(valueString, 10);
    }
    var unit = (size.match(/[^0-9]*$/) || "").toString();
    if (cssUnit[unit]) {
        return {
            value: value,
            unit: unit,
        };
    }
    console.warn("React Spinners: ".concat(size, " is not a valid css value. Defaulting to ").concat(value, "px."));
    return {
        value: value,
        unit: "px",
    };
}
/**
 * Take value as an input and return valid css value
 *
 * @param {(number | string)} value
 * @return {string} valid css value
 */
function cssValue(value) {
    var lengthWithunit = parseLengthAndUnit(value);
    return "".concat(lengthWithunit.value).concat(lengthWithunit.unit);
}

;// ./node_modules/react-spinners/esm/helpers/animation.js
var createAnimation = function (loaderName, frames, suffix) {
    var animationName = "react-spinners-".concat(loaderName, "-").concat(suffix);
    if (typeof window == "undefined" || !window.document) {
        return animationName;
    }
    var styleEl = document.createElement("style");
    document.head.appendChild(styleEl);
    var styleSheet = styleEl.sheet;
    var keyFrames = "\n    @keyframes ".concat(animationName, " {\n      ").concat(frames, "\n    }\n  ");
    if (styleSheet) {
        styleSheet.insertRule(keyFrames, 0);
    }
    return animationName;
};

;// ./node_modules/react-spinners/esm/ClipLoader.js
"use client";
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



var clip = createAnimation("ClipLoader", "0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}", "clip");
function ClipLoader(_a) {
    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? "#000000" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, ["loading", "color", "speedMultiplier", "cssOverride", "size"]);
    var style = __assign({ background: "transparent !important", width: cssValue(size), height: cssValue(size), borderRadius: "100%", border: "2px solid", borderTopColor: color, borderBottomColor: "transparent", borderLeftColor: color, borderRightColor: color, display: "inline-block", animation: "".concat(clip, " ").concat(0.75 / speedMultiplier, "s 0s infinite linear"), animationFillMode: "both" }, cssOverride);
    if (!loading) {
        return null;
    }
    return react.createElement("span", __assign({ style: style }, additionalprops));
}
/* harmony default export */ const esm_ClipLoader = (ClipLoader);


/***/ }),

/***/ 3681:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: () => (/* binding */ useScrollDirection)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6540);


function getScrollTop(target) {
  if (target) return target.scrollTop;
  return window.scrollY || window.pageYOffset || document.body.scrollTop || document.documentElement && document.documentElement.scrollTop || 0;
}
function getScrollLeft(target) {
  if (target) return target.scrollLeft;
  return window.scrollX || window.pageXOffset || document.body.scrollLeft || document.documentElement && document.documentElement.scrollLeft || 0;
}
function isBrowser() {
  return typeof window === 'object';
}
function addScrollListener(listener, target) {
  if (target === void 0) {
    target = document;
  }

  return target.addEventListener('scroll', listener);
}
function removeScrollListener(listener, target) {
  if (target === void 0) {
    target = document;
  }

  return target.removeEventListener('scroll', listener);
}

function useScrollDirection(target) {
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),
      targetFromApi = _useState[0],
      setTargetFromApi = _useState[1];

  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),
      targetFromProps = _useState2[0],
      setTargetFromProps = _useState2[1];

  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),
      scrollDirection = _useState3[0],
      setScrollDirection = _useState3[1];

  var targetToUse = targetFromProps || targetFromApi;
  var isScrolling = scrollDirection !== null;
  var isScrollingX = scrollDirection === 'LEFT' || scrollDirection === 'RIGHT';
  var isScrollingY = scrollDirection === 'UP' || scrollDirection === 'DOWN';
  var isScrollingUp = scrollDirection === 'UP';
  var isScrollingDown = scrollDirection === 'DOWN';
  var isScrollingLeft = scrollDirection === 'LEFT';
  var isScrollingRight = scrollDirection === 'RIGHT';
  var scrollTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (node) {
    setTargetFromApi(node);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    setTargetFromProps(target);
  }, [target]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (isBrowser()) {
      var scrollTimeout;
      var lastScrollTop = getScrollTop(targetToUse);
      var lastScrollLeft = getScrollLeft(targetToUse);

      var handleScroll = function handleScroll() {
        // Reset scroll direction when scrolling stops
        window.clearTimeout(scrollTimeout);
        scrollTimeout = window.setTimeout(function () {
          setScrollDirection(null);
        }, 66); // Set vertical direction while scrolling

        var scrollTop = getScrollTop(targetToUse);

        if (scrollTop > lastScrollTop) {
          setScrollDirection('DOWN');
        } else if (scrollTop < lastScrollTop) {
          setScrollDirection('UP');
        }

        lastScrollTop = scrollTop; // Set horizontal scroll direction

        var scrollLeft = getScrollLeft(targetToUse);

        if (scrollLeft > lastScrollLeft) {
          setScrollDirection('RIGHT');
        } else if (scrollLeft < lastScrollLeft) {
          setScrollDirection('LEFT');
        }

        lastScrollLeft = scrollLeft;
      };

      addScrollListener(handleScroll, targetToUse);
      return function () {
        return removeScrollListener(handleScroll, targetToUse);
      };
    }
  }, [targetToUse]);
  return {
    isScrolling: isScrolling,
    isScrollingX: isScrollingX,
    isScrollingY: isScrollingY,
    isScrollingUp: isScrollingUp,
    isScrollingDown: isScrollingDown,
    isScrollingLeft: isScrollingLeft,
    isScrollingRight: isScrollingRight,
    scrollDirection: scrollDirection,
    scrollTargetRef: scrollTargetRef
  };
}


//# sourceMappingURL=react-use-scroll-direction.esm.js.map


/***/ }),

/***/ 9869:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
  REACT_PORTAL_TYPE = Symbol.for("react.portal"),
  REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
  REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
  REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
  REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
  REACT_CONTEXT_TYPE = Symbol.for("react.context"),
  REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
  REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
  REACT_MEMO_TYPE = Symbol.for("react.memo"),
  REACT_LAZY_TYPE = Symbol.for("react.lazy"),
  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
function getIteratorFn(maybeIterable) {
  if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
  maybeIterable =
    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
    maybeIterable["@@iterator"];
  return "function" === typeof maybeIterable ? maybeIterable : null;
}
var ReactNoopUpdateQueue = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {}
  },
  assign = Object.assign,
  emptyObject = {};
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}
Component.prototype.isReactComponent = {};
Component.prototype.setState = function (partialState, callback) {
  if (
    "object" !== typeof partialState &&
    "function" !== typeof partialState &&
    null != partialState
  )
    throw Error(
      "takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, partialState, callback, "setState");
};
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
};
function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}
var pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());
pureComponentPrototype.constructor = PureComponent;
assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = !0;
var isArrayImpl = Array.isArray,
  ReactSharedInternals = { H: null, A: null, T: null, S: null },
  hasOwnProperty = Object.prototype.hasOwnProperty;
function ReactElement(type, key, self, source, owner, props) {
  self = props.ref;
  return {
    $$typeof: REACT_ELEMENT_TYPE,
    type: type,
    key: key,
    ref: void 0 !== self ? self : null,
    props: props
  };
}
function cloneAndReplaceKey(oldElement, newKey) {
  return ReactElement(
    oldElement.type,
    newKey,
    void 0,
    void 0,
    void 0,
    oldElement.props
  );
}
function isValidElement(object) {
  return (
    "object" === typeof object &&
    null !== object &&
    object.$$typeof === REACT_ELEMENT_TYPE
  );
}
function escape(key) {
  var escaperLookup = { "=": "=0", ":": "=2" };
  return (
    "$" +
    key.replace(/[=:]/g, function (match) {
      return escaperLookup[match];
    })
  );
}
var userProvidedKeyEscapeRegex = /\/+/g;
function getElementKey(element, index) {
  return "object" === typeof element && null !== element && null != element.key
    ? escape("" + element.key)
    : index.toString(36);
}
function noop$1() {}
function resolveThenable(thenable) {
  switch (thenable.status) {
    case "fulfilled":
      return thenable.value;
    case "rejected":
      throw thenable.reason;
    default:
      switch (
        ("string" === typeof thenable.status
          ? thenable.then(noop$1, noop$1)
          : ((thenable.status = "pending"),
            thenable.then(
              function (fulfilledValue) {
                "pending" === thenable.status &&
                  ((thenable.status = "fulfilled"),
                  (thenable.value = fulfilledValue));
              },
              function (error) {
                "pending" === thenable.status &&
                  ((thenable.status = "rejected"), (thenable.reason = error));
              }
            )),
        thenable.status)
      ) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
      }
  }
  throw thenable;
}
function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;
  if ("undefined" === type || "boolean" === type) children = null;
  var invokeCallback = !1;
  if (null === children) invokeCallback = !0;
  else
    switch (type) {
      case "bigint":
      case "string":
      case "number":
        invokeCallback = !0;
        break;
      case "object":
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = !0;
            break;
          case REACT_LAZY_TYPE:
            return (
              (invokeCallback = children._init),
              mapIntoArray(
                invokeCallback(children._payload),
                array,
                escapedPrefix,
                nameSoFar,
                callback
              )
            );
        }
    }
  if (invokeCallback)
    return (
      (callback = callback(children)),
      (invokeCallback =
        "" === nameSoFar ? "." + getElementKey(children, 0) : nameSoFar),
      isArrayImpl(callback)
        ? ((escapedPrefix = ""),
          null != invokeCallback &&
            (escapedPrefix =
              invokeCallback.replace(userProvidedKeyEscapeRegex, "$&/") + "/"),
          mapIntoArray(callback, array, escapedPrefix, "", function (c) {
            return c;
          }))
        : null != callback &&
          (isValidElement(callback) &&
            (callback = cloneAndReplaceKey(
              callback,
              escapedPrefix +
                (null == callback.key ||
                (children && children.key === callback.key)
                  ? ""
                  : ("" + callback.key).replace(
                      userProvidedKeyEscapeRegex,
                      "$&/"
                    ) + "/") +
                invokeCallback
            )),
          array.push(callback)),
      1
    );
  invokeCallback = 0;
  var nextNamePrefix = "" === nameSoFar ? "." : nameSoFar + ":";
  if (isArrayImpl(children))
    for (var i = 0; i < children.length; i++)
      (nameSoFar = children[i]),
        (type = nextNamePrefix + getElementKey(nameSoFar, i)),
        (invokeCallback += mapIntoArray(
          nameSoFar,
          array,
          escapedPrefix,
          type,
          callback
        ));
  else if (((i = getIteratorFn(children)), "function" === typeof i))
    for (
      children = i.call(children), i = 0;
      !(nameSoFar = children.next()).done;

    )
      (nameSoFar = nameSoFar.value),
        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),
        (invokeCallback += mapIntoArray(
          nameSoFar,
          array,
          escapedPrefix,
          type,
          callback
        ));
  else if ("object" === type) {
    if ("function" === typeof children.then)
      return mapIntoArray(
        resolveThenable(children),
        array,
        escapedPrefix,
        nameSoFar,
        callback
      );
    array = String(children);
    throw Error(
      "Objects are not valid as a React child (found: " +
        ("[object Object]" === array
          ? "object with keys {" + Object.keys(children).join(", ") + "}"
          : array) +
        "). If you meant to render a collection of children, use an array instead."
    );
  }
  return invokeCallback;
}
function mapChildren(children, func, context) {
  if (null == children) return children;
  var result = [],
    count = 0;
  mapIntoArray(children, result, "", "", function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
function lazyInitializer(payload) {
  if (-1 === payload._status) {
    var ctor = payload._result;
    ctor = ctor();
    ctor.then(
      function (moduleObject) {
        if (0 === payload._status || -1 === payload._status)
          (payload._status = 1), (payload._result = moduleObject);
      },
      function (error) {
        if (0 === payload._status || -1 === payload._status)
          (payload._status = 2), (payload._result = error);
      }
    );
    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));
  }
  if (1 === payload._status) return payload._result.default;
  throw payload._result;
}
var reportGlobalError =
  "function" === typeof reportError
    ? reportError
    : function (error) {
        if (
          "object" === typeof window &&
          "function" === typeof window.ErrorEvent
        ) {
          var event = new window.ErrorEvent("error", {
            bubbles: !0,
            cancelable: !0,
            message:
              "object" === typeof error &&
              null !== error &&
              "string" === typeof error.message
                ? String(error.message)
                : String(error),
            error: error
          });
          if (!window.dispatchEvent(event)) return;
        } else if (
          "object" === typeof process &&
          "function" === typeof process.emit
        ) {
          process.emit("uncaughtException", error);
          return;
        }
        console.error(error);
      };
function noop() {}
exports.Children = {
  map: mapChildren,
  forEach: function (children, forEachFunc, forEachContext) {
    mapChildren(
      children,
      function () {
        forEachFunc.apply(this, arguments);
      },
      forEachContext
    );
  },
  count: function (children) {
    var n = 0;
    mapChildren(children, function () {
      n++;
    });
    return n;
  },
  toArray: function (children) {
    return (
      mapChildren(children, function (child) {
        return child;
      }) || []
    );
  },
  only: function (children) {
    if (!isValidElement(children))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return children;
  }
};
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
  ReactSharedInternals;
exports.act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
exports.cache = function (fn) {
  return function () {
    return fn.apply(null, arguments);
  };
};
exports.cloneElement = function (element, config, children) {
  if (null === element || void 0 === element)
    throw Error(
      "The argument must be a React element, but you passed " + element + "."
    );
  var props = assign({}, element.props),
    key = element.key,
    owner = void 0;
  if (null != config)
    for (propName in (void 0 !== config.ref && (owner = void 0),
    void 0 !== config.key && (key = "" + config.key),
    config))
      !hasOwnProperty.call(config, propName) ||
        "key" === propName ||
        "__self" === propName ||
        "__source" === propName ||
        ("ref" === propName && void 0 === config.ref) ||
        (props[propName] = config[propName]);
  var propName = arguments.length - 2;
  if (1 === propName) props.children = children;
  else if (1 < propName) {
    for (var childArray = Array(propName), i = 0; i < propName; i++)
      childArray[i] = arguments[i + 2];
    props.children = childArray;
  }
  return ReactElement(element.type, key, void 0, void 0, owner, props);
};
exports.createContext = function (defaultValue) {
  defaultValue = {
    $$typeof: REACT_CONTEXT_TYPE,
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  defaultValue.Provider = defaultValue;
  defaultValue.Consumer = {
    $$typeof: REACT_CONSUMER_TYPE,
    _context: defaultValue
  };
  return defaultValue;
};
exports.createElement = function (type, config, children) {
  var propName,
    props = {},
    key = null;
  if (null != config)
    for (propName in (void 0 !== config.key && (key = "" + config.key), config))
      hasOwnProperty.call(config, propName) &&
        "key" !== propName &&
        "__self" !== propName &&
        "__source" !== propName &&
        (props[propName] = config[propName]);
  var childrenLength = arguments.length - 2;
  if (1 === childrenLength) props.children = children;
  else if (1 < childrenLength) {
    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)
      childArray[i] = arguments[i + 2];
    props.children = childArray;
  }
  if (type && type.defaultProps)
    for (propName in ((childrenLength = type.defaultProps), childrenLength))
      void 0 === props[propName] &&
        (props[propName] = childrenLength[propName]);
  return ReactElement(type, key, void 0, void 0, null, props);
};
exports.createRef = function () {
  return { current: null };
};
exports.forwardRef = function (render) {
  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };
};
exports.isValidElement = isValidElement;
exports.lazy = function (ctor) {
  return {
    $$typeof: REACT_LAZY_TYPE,
    _payload: { _status: -1, _result: ctor },
    _init: lazyInitializer
  };
};
exports.memo = function (type, compare) {
  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: void 0 === compare ? null : compare
  };
};
exports.startTransition = function (scope) {
  var prevTransition = ReactSharedInternals.T,
    currentTransition = {};
  ReactSharedInternals.T = currentTransition;
  try {
    var returnValue = scope(),
      onStartTransitionFinish = ReactSharedInternals.S;
    null !== onStartTransitionFinish &&
      onStartTransitionFinish(currentTransition, returnValue);
    "object" === typeof returnValue &&
      null !== returnValue &&
      "function" === typeof returnValue.then &&
      returnValue.then(noop, reportGlobalError);
  } catch (error) {
    reportGlobalError(error);
  } finally {
    ReactSharedInternals.T = prevTransition;
  }
};
exports.unstable_useCacheRefresh = function () {
  return ReactSharedInternals.H.useCacheRefresh();
};
exports.use = function (usable) {
  return ReactSharedInternals.H.use(usable);
};
exports.useActionState = function (action, initialState, permalink) {
  return ReactSharedInternals.H.useActionState(action, initialState, permalink);
};
exports.useCallback = function (callback, deps) {
  return ReactSharedInternals.H.useCallback(callback, deps);
};
exports.useContext = function (Context) {
  return ReactSharedInternals.H.useContext(Context);
};
exports.useDebugValue = function () {};
exports.useDeferredValue = function (value, initialValue) {
  return ReactSharedInternals.H.useDeferredValue(value, initialValue);
};
exports.useEffect = function (create, deps) {
  return ReactSharedInternals.H.useEffect(create, deps);
};
exports.useId = function () {
  return ReactSharedInternals.H.useId();
};
exports.useImperativeHandle = function (ref, create, deps) {
  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);
};
exports.useInsertionEffect = function (create, deps) {
  return ReactSharedInternals.H.useInsertionEffect(create, deps);
};
exports.useLayoutEffect = function (create, deps) {
  return ReactSharedInternals.H.useLayoutEffect(create, deps);
};
exports.useMemo = function (create, deps) {
  return ReactSharedInternals.H.useMemo(create, deps);
};
exports.useOptimistic = function (passthrough, reducer) {
  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);
};
exports.useReducer = function (reducer, initialArg, init) {
  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);
};
exports.useRef = function (initialValue) {
  return ReactSharedInternals.H.useRef(initialValue);
};
exports.useState = function (initialState) {
  return ReactSharedInternals.H.useState(initialState);
};
exports.useSyncExternalStore = function (
  subscribe,
  getSnapshot,
  getServerSnapshot
) {
  return ReactSharedInternals.H.useSyncExternalStore(
    subscribe,
    getSnapshot,
    getServerSnapshot
  );
};
exports.useTransition = function () {
  return ReactSharedInternals.H.useTransition();
};
exports.version = "19.0.0";


/***/ }),

/***/ 6540:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(9869);
} else {}


/***/ }),

/***/ 4477:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  a: for (; 0 < index; ) {
    var parentIndex = (index - 1) >>> 1,
      parent = heap[parentIndex];
    if (0 < compare(parent, node))
      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);
    else break a;
  }
}
function peek(heap) {
  return 0 === heap.length ? null : heap[0];
}
function pop(heap) {
  if (0 === heap.length) return null;
  var first = heap[0],
    last = heap.pop();
  if (last !== first) {
    heap[0] = last;
    a: for (
      var index = 0, length = heap.length, halfLength = length >>> 1;
      index < halfLength;

    ) {
      var leftIndex = 2 * (index + 1) - 1,
        left = heap[leftIndex],
        rightIndex = leftIndex + 1,
        right = heap[rightIndex];
      if (0 > compare(left, last))
        rightIndex < length && 0 > compare(right, left)
          ? ((heap[index] = right),
            (heap[rightIndex] = last),
            (index = rightIndex))
          : ((heap[index] = left),
            (heap[leftIndex] = last),
            (index = leftIndex));
      else if (rightIndex < length && 0 > compare(right, last))
        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);
      else break a;
    }
  }
  return first;
}
function compare(a, b) {
  var diff = a.sortIndex - b.sortIndex;
  return 0 !== diff ? diff : a.id - b.id;
}
exports.unstable_now = void 0;
if ("object" === typeof performance && "function" === typeof performance.now) {
  var localPerformance = performance;
  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date,
    initialTime = localDate.now();
  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
}
var taskQueue = [],
  timerQueue = [],
  taskIdCounter = 1,
  currentTask = null,
  currentPriorityLevel = 3,
  isPerformingWork = !1,
  isHostCallbackScheduled = !1,
  isHostTimeoutScheduled = !1,
  localSetTimeout = "function" === typeof setTimeout ? setTimeout : null,
  localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null,
  localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null;
function advanceTimers(currentTime) {
  for (var timer = peek(timerQueue); null !== timer; ) {
    if (null === timer.callback) pop(timerQueue);
    else if (timer.startTime <= currentTime)
      pop(timerQueue),
        (timer.sortIndex = timer.expirationTime),
        push(taskQueue, timer);
    else break;
    timer = peek(timerQueue);
  }
}
function handleTimeout(currentTime) {
  isHostTimeoutScheduled = !1;
  advanceTimers(currentTime);
  if (!isHostCallbackScheduled)
    if (null !== peek(taskQueue))
      (isHostCallbackScheduled = !0), requestHostCallback();
    else {
      var firstTimer = peek(timerQueue);
      null !== firstTimer &&
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }
}
var isMessageLoopRunning = !1,
  taskTimeoutID = -1,
  frameInterval = 5,
  startTime = -1;
function shouldYieldToHost() {
  return exports.unstable_now() - startTime < frameInterval ? !1 : !0;
}
function performWorkUntilDeadline() {
  if (isMessageLoopRunning) {
    var currentTime = exports.unstable_now();
    startTime = currentTime;
    var hasMoreWork = !0;
    try {
      a: {
        isHostCallbackScheduled = !1;
        isHostTimeoutScheduled &&
          ((isHostTimeoutScheduled = !1),
          localClearTimeout(taskTimeoutID),
          (taskTimeoutID = -1));
        isPerformingWork = !0;
        var previousPriorityLevel = currentPriorityLevel;
        try {
          b: {
            advanceTimers(currentTime);
            for (
              currentTask = peek(taskQueue);
              null !== currentTask &&
              !(
                currentTask.expirationTime > currentTime && shouldYieldToHost()
              );

            ) {
              var callback = currentTask.callback;
              if ("function" === typeof callback) {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var continuationCallback = callback(
                  currentTask.expirationTime <= currentTime
                );
                currentTime = exports.unstable_now();
                if ("function" === typeof continuationCallback) {
                  currentTask.callback = continuationCallback;
                  advanceTimers(currentTime);
                  hasMoreWork = !0;
                  break b;
                }
                currentTask === peek(taskQueue) && pop(taskQueue);
                advanceTimers(currentTime);
              } else pop(taskQueue);
              currentTask = peek(taskQueue);
            }
            if (null !== currentTask) hasMoreWork = !0;
            else {
              var firstTimer = peek(timerQueue);
              null !== firstTimer &&
                requestHostTimeout(
                  handleTimeout,
                  firstTimer.startTime - currentTime
                );
              hasMoreWork = !1;
            }
          }
          break a;
        } finally {
          (currentTask = null),
            (currentPriorityLevel = previousPriorityLevel),
            (isPerformingWork = !1);
        }
        hasMoreWork = void 0;
      }
    } finally {
      hasMoreWork
        ? schedulePerformWorkUntilDeadline()
        : (isMessageLoopRunning = !1);
    }
  }
}
var schedulePerformWorkUntilDeadline;
if ("function" === typeof localSetImmediate)
  schedulePerformWorkUntilDeadline = function () {
    localSetImmediate(performWorkUntilDeadline);
  };
else if ("undefined" !== typeof MessageChannel) {
  var channel = new MessageChannel(),
    port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;
  schedulePerformWorkUntilDeadline = function () {
    port.postMessage(null);
  };
} else
  schedulePerformWorkUntilDeadline = function () {
    localSetTimeout(performWorkUntilDeadline, 0);
  };
function requestHostCallback() {
  isMessageLoopRunning ||
    ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());
}
function requestHostTimeout(callback, ms) {
  taskTimeoutID = localSetTimeout(function () {
    callback(exports.unstable_now());
  }, ms);
}
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;
exports.unstable_cancelCallback = function (task) {
  task.callback = null;
};
exports.unstable_continueExecution = function () {
  isHostCallbackScheduled ||
    isPerformingWork ||
    ((isHostCallbackScheduled = !0), requestHostCallback());
};
exports.unstable_forceFrameRate = function (fps) {
  0 > fps || 125 < fps
    ? console.error(
        "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
      )
    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);
};
exports.unstable_getCurrentPriorityLevel = function () {
  return currentPriorityLevel;
};
exports.unstable_getFirstCallbackNode = function () {
  return peek(taskQueue);
};
exports.unstable_next = function (eventHandler) {
  switch (currentPriorityLevel) {
    case 1:
    case 2:
    case 3:
      var priorityLevel = 3;
      break;
    default:
      priorityLevel = currentPriorityLevel;
  }
  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;
  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
};
exports.unstable_pauseExecution = function () {};
exports.unstable_requestPaint = function () {};
exports.unstable_runWithPriority = function (priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;
    default:
      priorityLevel = 3;
  }
  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;
  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
};
exports.unstable_scheduleCallback = function (
  priorityLevel,
  callback,
  options
) {
  var currentTime = exports.unstable_now();
  "object" === typeof options && null !== options
    ? ((options = options.delay),
      (options =
        "number" === typeof options && 0 < options
          ? currentTime + options
          : currentTime))
    : (options = currentTime);
  switch (priorityLevel) {
    case 1:
      var timeout = -1;
      break;
    case 2:
      timeout = 250;
      break;
    case 5:
      timeout = 1073741823;
      break;
    case 4:
      timeout = 1e4;
      break;
    default:
      timeout = 5e3;
  }
  timeout = options + timeout;
  priorityLevel = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: options,
    expirationTime: timeout,
    sortIndex: -1
  };
  options > currentTime
    ? ((priorityLevel.sortIndex = options),
      push(timerQueue, priorityLevel),
      null === peek(taskQueue) &&
        priorityLevel === peek(timerQueue) &&
        (isHostTimeoutScheduled
          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))
          : (isHostTimeoutScheduled = !0),
        requestHostTimeout(handleTimeout, options - currentTime)))
    : ((priorityLevel.sortIndex = timeout),
      push(taskQueue, priorityLevel),
      isHostCallbackScheduled ||
        isPerformingWork ||
        ((isHostCallbackScheduled = !0), requestHostCallback()));
  return priorityLevel;
};
exports.unstable_shouldYield = shouldYieldToHost;
exports.unstable_wrapCallback = function (callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;
    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
};


/***/ }),

/***/ 9982:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(4477);
} else {}


/***/ }),

/***/ 4218:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate1.b5902ed1aa623016fffd.jpg";

/***/ }),

/***/ 4728:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate10.6887a23233c5c98e2419.jpg";

/***/ }),

/***/ 8693:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate11.f06e5409e4a0d376d130.jpg";

/***/ }),

/***/ 5114:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate12.ce1c30428b69351abb1e.jpg";

/***/ }),

/***/ 3399:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate13.aac82f5ffaf931e81f7d.jpg";

/***/ }),

/***/ 4709:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate2.e1f721c01198d27911cd.jpg";

/***/ }),

/***/ 3528:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate3.8ee76b383b94f0235f06.jpg";

/***/ }),

/***/ 7131:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate4.8ac31d95585af69b8c4c.jpg";

/***/ }),

/***/ 1294:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate5.e24ec5a6657be9d8b94f.jpg";

/***/ }),

/***/ 9961:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate6.a8f684ac96c3f38af6f8.jpg";

/***/ }),

/***/ 5612:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate7.452496e02930c00fe1e7.jpg";

/***/ }),

/***/ 9711:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate8.bf3c89bd051b3a2572f3.jpg";

/***/ }),

/***/ 7042:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/certificate9.c8d490c3ef1101e0c1bd.jpg";

/***/ }),

/***/ 1615:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "icons/telegram-review.6da6e13eb6a7f16469f3.svg";

/***/ }),

/***/ 7914:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "icons/whatsapp-review.f19e68f07310ca3b0116.svg";

/***/ }),

/***/ 6942:
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (arg) {
				classes = appendClass(classes, parseValue(arg));
			}
		}

		return classes;
	}

	function parseValue (arg) {
		if (typeof arg === 'string' || typeof arg === 'number') {
			return arg;
		}

		if (typeof arg !== 'object') {
			return '';
		}

		if (Array.isArray(arg)) {
			return classNames.apply(null, arg);
		}

		if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
			return arg.toString();
		}

		var classes = '';

		for (var key in arg) {
			if (hasOwn.call(arg, key) && arg[key]) {
				classes = appendClass(classes, key);
			}
		}

		return classes;
	}

	function appendClass (value, newClass) {
		if (!newClass) {
			return value;
		}
	
		if (value) {
			return value + ' ' + newClass;
		}
	
		return value + newClass;
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ 498:
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[{"id":"popup-close-0","className":"popup__link popup__link-close popup-close"},{"id":"popup-close-icon-0","className":"popup__icon popup__icon-close","alt":""}]');

/***/ }),

/***/ 1282:
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[{"code":"+7","number":"0000000000"}]');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "index." + {"47":"924f16adb3ba20bb31f6","624":"97a7c7814e54e52956eb"}[chunkId] + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + "a1ffec608b415117684c" + ".css";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "snv-site-react:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/css loading */
/******/ 	(() => {
/******/ 		if (typeof document === "undefined") return;
/******/ 		var createStylesheet = (chunkId, fullhref, oldTag, resolve, reject) => {
/******/ 			var linkTag = document.createElement("link");
/******/ 		
/******/ 			linkTag.rel = "stylesheet";
/******/ 			linkTag.type = "text/css";
/******/ 			if (__webpack_require__.nc) {
/******/ 				linkTag.nonce = __webpack_require__.nc;
/******/ 			}
/******/ 			var onLinkComplete = (event) => {
/******/ 				// avoid mem leaks.
/******/ 				linkTag.onerror = linkTag.onload = null;
/******/ 				if (event.type === 'load') {
/******/ 					resolve();
/******/ 				} else {
/******/ 					var errorType = event && event.type;
/******/ 					var realHref = event && event.target && event.target.href || fullhref;
/******/ 					var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + errorType + ": " + realHref + ")");
/******/ 					err.name = "ChunkLoadError";
/******/ 					err.code = "CSS_CHUNK_LOAD_FAILED";
/******/ 					err.type = errorType;
/******/ 					err.request = realHref;
/******/ 					if (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)
/******/ 					reject(err);
/******/ 				}
/******/ 			}
/******/ 			linkTag.onerror = linkTag.onload = onLinkComplete;
/******/ 			linkTag.href = fullhref;
/******/ 		
/******/ 		
/******/ 			if (oldTag) {
/******/ 				oldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);
/******/ 			} else {
/******/ 				document.head.appendChild(linkTag);
/******/ 			}
/******/ 			return linkTag;
/******/ 		};
/******/ 		var findStylesheet = (href, fullhref) => {
/******/ 			var existingLinkTags = document.getElementsByTagName("link");
/******/ 			for(var i = 0; i < existingLinkTags.length; i++) {
/******/ 				var tag = existingLinkTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
/******/ 				if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;
/******/ 			}
/******/ 			var existingStyleTags = document.getElementsByTagName("style");
/******/ 			for(var i = 0; i < existingStyleTags.length; i++) {
/******/ 				var tag = existingStyleTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href");
/******/ 				if(dataHref === href || dataHref === fullhref) return tag;
/******/ 			}
/******/ 		};
/******/ 		var loadStylesheet = (chunkId) => {
/******/ 			return new Promise((resolve, reject) => {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				if(findStylesheet(href, fullhref)) return resolve();
/******/ 				createStylesheet(chunkId, fullhref, null, resolve, reject);
/******/ 			});
/******/ 		}
/******/ 		// object to store loaded CSS chunks
/******/ 		var installedCssChunks = {
/******/ 			792: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.miniCss = (chunkId, promises) => {
/******/ 			var cssChunks = {"624":1};
/******/ 			if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);
/******/ 			else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {
/******/ 				promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {
/******/ 					installedCssChunks[chunkId] = 0;
/******/ 				}, (e) => {
/******/ 					delete installedCssChunks[chunkId];
/******/ 					throw e;
/******/ 				}));
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		// no hmr
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			792: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunksnv_site_react"] = self["webpackChunksnv_site_react"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(6540);
// EXTERNAL MODULE: ./node_modules/react-dom/client.js
var client = __webpack_require__(5338);
;// ./node_modules/react-use/esm/misc/util.js
var noop = function () { };
function on(obj) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (obj && obj.addEventListener) {
        obj.addEventListener.apply(obj, args);
    }
}
function off(obj) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (obj && obj.removeEventListener) {
        obj.removeEventListener.apply(obj, args);
    }
}
var isBrowser = typeof window !== 'undefined';
var isNavigator = typeof navigator !== 'undefined';

;// ./node_modules/react-use/esm/useOrientation.js


var defaultState = {
    angle: 0,
    type: 'landscape-primary',
};
var useOrientation = function (initialState) {
    if (initialState === void 0) { initialState = defaultState; }
    var _a = (0,react.useState)(initialState), state = _a[0], setState = _a[1];
    (0,react.useEffect)(function () {
        var screen = window.screen;
        var mounted = true;
        var onChange = function () {
            if (mounted) {
                var orientation_1 = screen.orientation;
                if (orientation_1) {
                    var angle = orientation_1.angle, type = orientation_1.type;
                    setState({ angle: angle, type: type });
                }
                else if (window.orientation !== undefined) {
                    setState({
                        angle: typeof window.orientation === 'number' ? window.orientation : 0,
                        type: '',
                    });
                }
                else {
                    setState(initialState);
                }
            }
        };
        on(window, 'orientationchange', onChange);
        onChange();
        return function () {
            mounted = false;
            off(window, 'orientationchange', onChange);
        };
    }, []);
    return state;
};
/* harmony default export */ const esm_useOrientation = (useOrientation);

// EXTERNAL MODULE: ./node_modules/react-use-scroll-direction/dist/react-use-scroll-direction.esm.js
var react_use_scroll_direction_esm = __webpack_require__(3681);
// EXTERNAL MODULE: ./src/hooks/index.js + 11 modules
var hooks = __webpack_require__(7597);
;// ./node_modules/react-error-boundary/dist/react-error-boundary.js
'use client';


const ErrorBoundaryContext = (0,react.createContext)(null);

const initialState = {
  didCatch: false,
  error: null
};
class ErrorBoundary extends react.Component {
  constructor(props) {
    super(props);
    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);
    this.state = initialState;
  }
  static getDerivedStateFromError(error) {
    return {
      didCatch: true,
      error
    };
  }
  resetErrorBoundary() {
    const {
      error
    } = this.state;
    if (error !== null) {
      var _this$props$onReset, _this$props;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {
        args,
        reason: "imperative-api"
      });
      this.setState(initialState);
    }
  }
  componentDidCatch(error, info) {
    var _this$props$onError, _this$props2;
    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);
  }
  componentDidUpdate(prevProps, prevState) {
    const {
      didCatch
    } = this.state;
    const {
      resetKeys
    } = this.props;

    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,
    // we'd end up resetting the error boundary immediately.
    // This would likely trigger a second error to be thrown.
    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.

    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {
      var _this$props$onReset2, _this$props3;
      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {
        next: resetKeys,
        prev: prevProps.resetKeys,
        reason: "keys"
      });
      this.setState(initialState);
    }
  }
  render() {
    const {
      children,
      fallbackRender,
      FallbackComponent,
      fallback
    } = this.props;
    const {
      didCatch,
      error
    } = this.state;
    let childToRender = children;
    if (didCatch) {
      const props = {
        error,
        resetErrorBoundary: this.resetErrorBoundary
      };
      if (typeof fallbackRender === "function") {
        childToRender = fallbackRender(props);
      } else if (FallbackComponent) {
        childToRender = (0,react.createElement)(FallbackComponent, props);
      } else if (fallback !== undefined) {
        childToRender = fallback;
      } else {
        throw error;
      }
    }
    return (0,react.createElement)(ErrorBoundaryContext.Provider, {
      value: {
        didCatch,
        error,
        resetErrorBoundary: this.resetErrorBoundary
      }
    }, childToRender);
  }
}
function hasArrayChanged() {
  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));
}

function assertErrorBoundaryContext(value) {
  if (value == null || typeof value.didCatch !== "boolean" || typeof value.resetErrorBoundary !== "function") {
    throw new Error("ErrorBoundaryContext not found");
  }
}

function useErrorBoundary() {
  const context = useContext(ErrorBoundaryContext);
  assertErrorBoundaryContext(context);
  const [state, setState] = useState({
    error: null,
    hasError: false
  });
  const memoized = useMemo(() => ({
    resetBoundary: () => {
      context.resetErrorBoundary();
      setState({
        error: null,
        hasError: false
      });
    },
    showBoundary: error => setState({
      error,
      hasError: true
    })
  }), [context.resetErrorBoundary]);
  if (state.hasError) {
    throw state.error;
  }
  return memoized;
}

function withErrorBoundary(component, errorBoundaryProps) {
  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {
    ...props,
    ref
  })));

  // Format for display in DevTools
  const name = component.displayName || component.name || "Unknown";
  Wrapped.displayName = "withErrorBoundary(".concat(name, ")");
  return Wrapped;
}



// EXTERNAL MODULE: ./node_modules/react-spinners/esm/ClipLoader.js + 2 modules
var ClipLoader = __webpack_require__(769);
// EXTERNAL MODULE: ./node_modules/gsap/index.js
var gsap = __webpack_require__(738);
;// ./node_modules/gsap/ScrollToPlugin.js
/*!
 * ScrollToPlugin 3.12.7
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/

/* eslint-disable */
var ScrollToPlugin_gsap,
    _coreInitted,
    _window,
    _docEl,
    _body,
    _toArray,
    _config,
    ScrollTrigger,
    _windowExists = function _windowExists() {
  return typeof window !== "undefined";
},
    _getGSAP = function _getGSAP() {
  return ScrollToPlugin_gsap || _windowExists() && (ScrollToPlugin_gsap = window.gsap) && ScrollToPlugin_gsap.registerPlugin && ScrollToPlugin_gsap;
},
    _isString = function _isString(value) {
  return typeof value === "string";
},
    _isFunction = function _isFunction(value) {
  return typeof value === "function";
},
    _max = function _max(element, axis) {
  var dim = axis === "x" ? "Width" : "Height",
      scroll = "scroll" + dim,
      client = "client" + dim;
  return element === _window || element === _docEl || element === _body ? Math.max(_docEl[scroll], _body[scroll]) - (_window["inner" + dim] || _docEl[client] || _body[client]) : element[scroll] - element["offset" + dim];
},
    _buildGetter = function _buildGetter(e, axis) {
  //pass in an element and an axis ("x" or "y") and it'll return a getter function for the scroll position of that element (like scrollTop or scrollLeft, although if the element is the window, it'll use the pageXOffset/pageYOffset or the documentElement's scrollTop/scrollLeft or document.body's. Basically this streamlines things and makes a very fast getter across browsers.
  var p = "scroll" + (axis === "x" ? "Left" : "Top");

  if (e === _window) {
    if (e.pageXOffset != null) {
      p = "page" + axis.toUpperCase() + "Offset";
    } else {
      e = _docEl[p] != null ? _docEl : _body;
    }
  }

  return function () {
    return e[p];
  };
},
    _clean = function _clean(value, index, target, targets) {
  _isFunction(value) && (value = value(index, target, targets));

  if (typeof value !== "object") {
    return _isString(value) && value !== "max" && value.charAt(1) !== "=" ? {
      x: value,
      y: value
    } : {
      y: value
    }; //if we don't receive an object as the parameter, assume the user intends "y".
  } else if (value.nodeType) {
    return {
      y: value,
      x: value
    };
  } else {
    var result = {},
        p;

    for (p in value) {
      result[p] = p !== "onAutoKill" && _isFunction(value[p]) ? value[p](index, target, targets) : value[p];
    }

    return result;
  }
},
    _getOffset = function _getOffset(element, container) {
  element = _toArray(element)[0];

  if (!element || !element.getBoundingClientRect) {
    return console.warn("scrollTo target doesn't exist. Using 0") || {
      x: 0,
      y: 0
    };
  }

  var rect = element.getBoundingClientRect(),
      isRoot = !container || container === _window || container === _body,
      cRect = isRoot ? {
    top: _docEl.clientTop - (_window.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),
    left: _docEl.clientLeft - (_window.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0)
  } : container.getBoundingClientRect(),
      offsets = {
    x: rect.left - cRect.left,
    y: rect.top - cRect.top
  };

  if (!isRoot && container) {
    //only add the current scroll position if it's not the window/body.
    offsets.x += _buildGetter(container, "x")();
    offsets.y += _buildGetter(container, "y")();
  }

  return offsets;
},
    _parseVal = function _parseVal(value, target, axis, currentVal, offset) {
  return !isNaN(value) && typeof value !== "object" ? parseFloat(value) - offset : _isString(value) && value.charAt(1) === "=" ? parseFloat(value.substr(2)) * (value.charAt(0) === "-" ? -1 : 1) + currentVal - offset : value === "max" ? _max(target, axis) - offset : Math.min(_max(target, axis), _getOffset(value, target)[axis] - offset);
},
    _initCore = function _initCore() {
  ScrollToPlugin_gsap = _getGSAP();

  if (_windowExists() && ScrollToPlugin_gsap && typeof document !== "undefined" && document.body) {
    _window = window;
    _body = document.body;
    _docEl = document.documentElement;
    _toArray = ScrollToPlugin_gsap.utils.toArray;
    ScrollToPlugin_gsap.config({
      autoKillThreshold: 7
    });
    _config = ScrollToPlugin_gsap.config();
    _coreInitted = 1;
  }
};

var ScrollToPlugin = {
  version: "3.12.7",
  name: "scrollTo",
  rawVars: 1,
  register: function register(core) {
    ScrollToPlugin_gsap = core;

    _initCore();
  },
  init: function init(target, value, tween, index, targets) {
    _coreInitted || _initCore();
    var data = this,
        snapType = ScrollToPlugin_gsap.getProperty(target, "scrollSnapType");
    data.isWin = target === _window;
    data.target = target;
    data.tween = tween;
    value = _clean(value, index, target, targets);
    data.vars = value;
    data.autoKill = !!("autoKill" in value ? value : _config).autoKill;
    data.getX = _buildGetter(target, "x");
    data.getY = _buildGetter(target, "y");
    data.x = data.xPrev = data.getX();
    data.y = data.yPrev = data.getY();
    ScrollTrigger || (ScrollTrigger = ScrollToPlugin_gsap.core.globals().ScrollTrigger);
    ScrollToPlugin_gsap.getProperty(target, "scrollBehavior") === "smooth" && ScrollToPlugin_gsap.set(target, {
      scrollBehavior: "auto"
    });

    if (snapType && snapType !== "none") {
      // disable scroll snapping to avoid strange behavior
      data.snap = 1;
      data.snapInline = target.style.scrollSnapType;
      target.style.scrollSnapType = "none";
    }

    if (value.x != null) {
      data.add(data, "x", data.x, _parseVal(value.x, target, "x", data.x, value.offsetX || 0), index, targets);

      data._props.push("scrollTo_x");
    } else {
      data.skipX = 1;
    }

    if (value.y != null) {
      data.add(data, "y", data.y, _parseVal(value.y, target, "y", data.y, value.offsetY || 0), index, targets);

      data._props.push("scrollTo_y");
    } else {
      data.skipY = 1;
    }
  },
  render: function render(ratio, data) {
    var pt = data._pt,
        target = data.target,
        tween = data.tween,
        autoKill = data.autoKill,
        xPrev = data.xPrev,
        yPrev = data.yPrev,
        isWin = data.isWin,
        snap = data.snap,
        snapInline = data.snapInline,
        x,
        y,
        yDif,
        xDif,
        threshold;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }

    x = isWin || !data.skipX ? data.getX() : xPrev;
    y = isWin || !data.skipY ? data.getY() : yPrev;
    yDif = y - yPrev;
    xDif = x - xPrev;
    threshold = _config.autoKillThreshold;

    if (data.x < 0) {
      //can't scroll to a position less than 0! Might happen if someone uses a Back.easeOut or Elastic.easeOut when scrolling back to the top of the page (for example)
      data.x = 0;
    }

    if (data.y < 0) {
      data.y = 0;
    }

    if (autoKill) {
      //note: iOS has a bug that throws off the scroll by several pixels, so we need to check if it's within 7 pixels of the previous one that we set instead of just looking for an exact match.
      if (!data.skipX && (xDif > threshold || xDif < -threshold) && x < _max(target, "x")) {
        data.skipX = 1; //if the user scrolls separately, we should stop tweening!
      }

      if (!data.skipY && (yDif > threshold || yDif < -threshold) && y < _max(target, "y")) {
        data.skipY = 1; //if the user scrolls separately, we should stop tweening!
      }

      if (data.skipX && data.skipY) {
        tween.kill();
        data.vars.onAutoKill && data.vars.onAutoKill.apply(tween, data.vars.onAutoKillParams || []);
      }
    }

    if (isWin) {
      _window.scrollTo(!data.skipX ? data.x : x, !data.skipY ? data.y : y);
    } else {
      data.skipY || (target.scrollTop = data.y);
      data.skipX || (target.scrollLeft = data.x);
    }

    if (snap && (ratio === 1 || ratio === 0)) {
      y = target.scrollTop;
      x = target.scrollLeft;
      snapInline ? target.style.scrollSnapType = snapInline : target.style.removeProperty("scroll-snap-type");
      target.scrollTop = y + 1; // bug in Safari causes the element to totally reset its scroll position when scroll-snap-type changes, so we need to set it to a slightly different value and then back again to work around this bug.

      target.scrollLeft = x + 1;
      target.scrollTop = y;
      target.scrollLeft = x;
    }

    data.xPrev = data.x;
    data.yPrev = data.y;
    ScrollTrigger && ScrollTrigger.update();
  },
  kill: function kill(property) {
    var both = property === "scrollTo",
        i = this._props.indexOf(property);

    if (both || property === "scrollTo_x") {
      this.skipX = 1;
    }

    if (both || property === "scrollTo_y") {
      this.skipY = 1;
    }

    i > -1 && this._props.splice(i, 1);
    return !this._props.length;
  }
};
ScrollToPlugin.max = _max;
ScrollToPlugin.getOffset = _getOffset;
ScrollToPlugin.buildGetter = _buildGetter;

ScrollToPlugin.config = function (vars) {
  _config || _initCore() || (_config = ScrollToPlugin_gsap.config()); // in case the window hasn't been defined yet.

  for (var p in vars) {
    _config[p] = vars[p];
  }
};

_getGSAP() && ScrollToPlugin_gsap.registerPlugin(ScrollToPlugin);

// EXTERNAL MODULE: ./node_modules/gsap/CSSPlugin.js
var CSSPlugin = __webpack_require__(2650);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(6942);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/func/func_query_number/funcQueryNumber.js
var funcQueryNumber = __webpack_require__(9868);
// EXTERNAL MODULE: ./src/func/func_query_media/funcQueryMedia.js
var funcQueryMedia = __webpack_require__(2622);
// EXTERNAL MODULE: ./src/contexts/ModalContext/index.js + 5 modules
var ModalContext = __webpack_require__(9309);
// EXTERNAL MODULE: ./src/components/modals/modal/modal_content/index.js + 42 modules
var modal_content = __webpack_require__(2613);
// EXTERNAL MODULE: ./src/images/certificate1.jpg
var certificate1 = __webpack_require__(4218);
// EXTERNAL MODULE: ./src/images/certificate2.jpg
var certificate2 = __webpack_require__(4709);
// EXTERNAL MODULE: ./src/images/certificate3.jpg
var certificate3 = __webpack_require__(3528);
// EXTERNAL MODULE: ./src/images/certificate4.jpg
var certificate4 = __webpack_require__(7131);
// EXTERNAL MODULE: ./src/images/certificate5.jpg
var certificate5 = __webpack_require__(1294);
// EXTERNAL MODULE: ./src/images/certificate6.jpg
var certificate6 = __webpack_require__(9961);
// EXTERNAL MODULE: ./src/images/certificate7.jpg
var certificate7 = __webpack_require__(5612);
// EXTERNAL MODULE: ./src/images/certificate8.jpg
var certificate8 = __webpack_require__(9711);
// EXTERNAL MODULE: ./src/images/certificate9.jpg
var certificate9 = __webpack_require__(7042);
// EXTERNAL MODULE: ./src/images/certificate10.jpg
var certificate10 = __webpack_require__(4728);
// EXTERNAL MODULE: ./src/images/certificate11.jpg
var certificate11 = __webpack_require__(8693);
// EXTERNAL MODULE: ./src/images/certificate12.jpg
var certificate12 = __webpack_require__(5114);
// EXTERNAL MODULE: ./src/images/certificate13.jpg
var certificate13 = __webpack_require__(3399);
// EXTERNAL MODULE: ./src/components/ui/index.js + 16 modules
var ui = __webpack_require__(8690);
;// ./src/components/sliders/slider_cert/SliderCert.jsx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function SliderCert_toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }























var SliderCert = function SliderCert(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderCertificatesClass = classnames_default()("slider-certificates".concat(queryNumber));
  var sliderSlideClass = classnames_default()("slider".concat(queryNumber, "__slide"));
  var sliderSlideCertificatesClass = classnames_default()("slider".concat(queryNumber, "__slide-certificates"));
  var sliderSlideCertificatesMobileClass = classnames_default()("slider".concat(queryNumber, "__slide-certificates-mobile"));
  var sliderSlideCertificatesActiveClass = classnames_default()("slider".concat(queryNumber, "__slide-certificates-active"));
  var sliderLinkClass = classnames_default()("slider".concat(queryNumber, "__link"));
  var sliderLinkCertificatesClass = classnames_default()("slider".concat(queryNumber, "__link-certificates"));
  var sliderCardClass = classnames_default()("slider".concat(queryNumber, "__card"));
  var sliderCardCertificatesClass = classnames_default()("slider".concat(queryNumber, "__card-certificates"));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var images = [certificate1, certificate2, certificate3, certificate4, certificate5, certificate6, certificate7, certificate8, certificate9, certificate10, certificate11, certificate12, certificate13];
  var _useState = (0,react.useState)([]),
    _useState2 = _slicedToArray(_useState, 2),
    items = _useState2[0],
    setItems = _useState2[1];
  var _useState3 = (0,react.useState)(0),
    _useState4 = _slicedToArray(_useState3, 2),
    slide = _useState4[0],
    setSlide = _useState4[1];
  var _useState5 = (0,react.useState)(0),
    _useState6 = _slicedToArray(_useState5, 2),
    sliderWidth = _useState6[0],
    setSliderWidth = _useState6[1];
  var _useState7 = (0,react.useState)(0),
    _useState8 = _slicedToArray(_useState7, 2),
    sliderHeight = _useState8[0],
    setSliderHeight = _useState8[1];
  var _useState9 = (0,react.useState)(true),
    _useState10 = _slicedToArray(_useState9, 2),
    autoPlay = _useState10[0],
    setAutoPlay = _useState10[1];
  var _useState11 = (0,react.useState)(null),
    _useState12 = _slicedToArray(_useState11, 2),
    touchPosition = _useState12[0],
    setTouchPosition = _useState12[1];
  var _useState13 = (0,react.useState)(0),
    _useState14 = _slicedToArray(_useState13, 2),
    sliderDirection = _useState14[0],
    setSliderDirection = _useState14[1];
  var _useState15 = (0,react.useState)(0),
    _useState16 = _slicedToArray(_useState15, 2),
    sliderPosition = _useState16[0],
    setSliderPosition = _useState16[1];
  var _useState17 = (0,react.useState)(false),
    _useState18 = _slicedToArray(_useState17, 2),
    sliderLockRight = _useState18[0],
    setSliderLockRight = _useState18[1];
  var slidesRef = (0,react.useRef)(images.map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var sliderRef = (0,react.useRef)(null);
  var _useContext = (0,react.useContext)(ModalContext/* ModalContext */.V),
    openModal = _useContext.openModal,
    stopSliderProcCert = _useContext.stopSliderProcCert,
    autoPlaySliderProcCert = _useContext.autoPlaySliderProcCert;
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var propsData = function propsData(props) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [],
      _ref2 = SliderCert_toArray(_ref),
      arg = _ref2.slice(0);
    var propsAll = props;
    var arrImages = _toConsumableArray(arg);
    var data = [[], []];
    arrImages.length !== -1 ? arrImages.map(function () {
      data[0].push(JSON.parse(JSON.stringify(propsAll.data[0])));
      data[1].push(JSON.parse(JSON.stringify(propsAll.data[1])));
    }) : null;
    data[0].length == arrImages.length ? data[0].map(function (value, i) {
      return data[0][i].id = "".concat(propsAll.data[0].id).concat(i);
    }) : null;
    data[1].length == arrImages.length ? data[1].map(function (value, i) {
      return data[1][i].id = "".concat(propsAll.data[1].id).concat(i);
    }) : null;
    data[1].length == arrImages.length ? data[1].map(function (value, i) {
      return data[1][i].alt = "".concat(propsAll.data[1].alt).concat(i);
    }) : null;
    data[1].length == arrImages.length ? arrImages.map(function (value, i) {
      return data[1][i].src = value;
    }) : null;
    return data;
  };
  var animationSliderTouchMove = function animationSliderTouchMove(x) {
    gsap/* default */.Ay.timeline().to(sliderRef.current, {
      x: x,
      duration: 0.3
    });
  };
  var handleTouchStart = function handleTouchStart(e) {
    var touchDown = e.touches[0].clientX;
    // console.log(touchDown);
    setTouchPosition(touchDown);
  };
  var handleTouchMove = function handleTouchMove(e) {
    if (touchPosition === null) return;
    var currentPosition = e.touches[0].clientX;
    var direction = touchPosition - currentPosition;
    // console.log(direction);

    setSliderDirection(direction);
    // console.log(sliderDirection);

    setTouchPosition(null);
  };
  (0,react.useLayoutEffect)(function () {
    if (media1728 === true || media1300 === true || media1133 === true) return;
    var widthSlider = 0;
    var heightSlider = 0;
    var widthSlide = 281;
    var heightSlide = 202;
    for (var i = 0; i < items.length; i++) {
      // widthSlide = slidesRef.current[i].current.offsetWidth;
      var width = widthSlide + 30;
      widthSlider += width;
    }
    heightSlider = sliderRef.current.offsetHeight;
    setSliderWidth(widthSlider - 30);
    setSliderHeight(heightSlide);
  }, [items]);
  (0,react.useEffect)(function () {
    if (media1728 === true || media1300 === true || media1133 === true) return;
    var containerWidth = props.containerWidth;
    var k = 281 - (containerWidth - Math.floor(containerWidth / 311) * 311);
    if (sliderDirection > 5) {
      if (sliderLockRight === false) {
        if (Math.abs(sliderPosition) < sliderWidth - containerWidth - 311) {
          animationSliderTouchMove(sliderPosition - 311);
          setSliderPosition(sliderPosition - 311);
        } else {
          animationSliderTouchMove(sliderPosition - k);
          setSliderPosition(sliderPosition - k);
          setSliderLockRight(true);
        }
      }
    }
    if (sliderDirection < -5 && sliderLockRight === true) {
      animationSliderTouchMove(sliderPosition + k);
      setSliderPosition(sliderPosition + k);
      setSliderLockRight(false);
    }
    if (sliderDirection < -5 && sliderLockRight === false) {
      if (sliderPosition !== 0) {
        animationSliderTouchMove(sliderPosition + 311);
        setSliderPosition(sliderPosition + 311);
      }
    }
  }, [sliderDirection]);
  var sliderSlide = function sliderSlide(number) {
    var current = document.querySelector("#uiDivCertificates".concat(number));
    return current;
  };
  var slidesDefault = function slidesDefault() {
    var slides = document.querySelectorAll(".".concat(sliderSlideCertificatesClass));
    for (var i = 0; i < slides.length; i++) {
      if (media1728 === true || media1133 === true) {
        slides[i].classList.remove(sliderSlideCertificatesMobileClass);
        slides[i].classList.remove(sliderSlideCertificatesActiveClass);
      }
      if (media900 === true || media744 === true || media744l === true || media375 === true || media275 === true) {
        slides[i].classList.remove(sliderSlideCertificatesMobileClass);
        slides[i].classList.remove(sliderSlideCertificatesActiveClass);
        slides[i].classList.add(sliderSlideCertificatesMobileClass);
      }
    }
  };
  (0,react.useEffect)(function () {
    var loadData = function loadData() {
      setItems(images);
    };
    loadData();
    slidesDefault();
    if (!autoPlay || !autoPlaySliderProcCert || media900 === true || media744 === true || media744l === true || media600 === true || media600l === true || media375 === true || media275 === true) return;
    var currentSlide = sliderSlide(0);
    currentSlide.classList.add(sliderSlideCertificatesActiveClass);
  }, []);
  var changeSlide = function changeSlide() {
    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    if (!autoPlay || !autoPlaySliderProcCert || media900 === true || media744 === true || media744l === true || media600 === true || media600l === true || media375 === true || media275 === true) return;
    slidesDefault();
    var slideNumber = 0;
    if (slide + direction < 0) {
      slideNumber = items.length - 1;
    } else {
      slideNumber = (slide + direction) % items.length;
    }
    setSlide(slideNumber);
    var currentSlide = sliderSlide(slideNumber);
    currentSlide.classList.add(sliderSlideCertificatesActiveClass);
  };
  (0,react.useEffect)(function () {
    if (!autoPlay || !autoPlaySliderProcCert || media900 === true || media744 === true || media744l === true || media600 === 600 || media600l === true || media375 === true || media275 === true) return;
    var interval = setInterval(function () {
      changeSlide(1);
    }, 4000);
    return function () {
      clearInterval(interval);
    };
  }, [items.length, slide, autoPlay, autoPlaySliderProcCert]);
  var handleSlideMouseEnter = function handleSlideMouseEnter() {
    setAutoPlay(false);
  };
  var handleSlideMouseLeave = function handleSlideMouseLeave() {
    setAutoPlay(true);
  };
  var handleClickModalE = function handleClickModalE(number) {
    stopSliderProcCert();
    openModal({
      id: "".concat(modalId, "e").concat(number + Number(1)),
      className: "".concat(modalBodyClassName, "e"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentE */.ah, {
        number: number + Number(1)
      })
    });
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: sliderCertificatesClass,
    ref: sliderRef,
    style: media900 === true || media744 === true || media744l === true || media600 === true || media600l === true || media375 === true || media275 === true ? {
      width: "".concat(sliderWidth, "px"),
      height: "".concat(sliderHeight, "px")
    } : null,
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove
  }, propsData(props, props.images)[0].map(function (propi, i) {
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
      className: "".concat(sliderSlideClass, " ").concat(sliderSlideCertificatesClass),
      key: "divSliderSlideCertificates".concat(i),
      id: "uiDivCertificates".concat(i),
      ref: slidesRef.current[i],
      onMouseEnter: function onMouseEnter() {
        handleSlideMouseEnter();
      },
      onMouseLeave: function onMouseLeave() {
        handleSlideMouseLeave();
      },
      onClick: function onClick() {
        handleClickModalE(i);
      }
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, _extends({
      key: "uiButtonCertificate".concat(i)
    }, propi, {
      className: "".concat(sliderLinkClass, " ").concat(sliderLinkCertificatesClass)
    }), propsData(props, props.images)[1].map(function (propj, j) {
      return i === j ? /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, _extends({
        key: "uiImgCertificate".concat(j)
      }, propj, {
        className: "".concat(sliderCardClass, " ").concat(sliderCardCertificatesClass)
      })) : null;
    }))));
  })));
};
;// ./src/components/sliders/slider_cert/slider_cert_content/SliderCertContent.js













var SliderCertContent = [certificate1, certificate2, certificate3, certificate4, certificate5, certificate6, certificate7, certificate8, certificate9, certificate10, certificate11, certificate12, certificate13];
;// ./src/components/sliders/slider_cert/slider_cert_content/index.js

;// ./src/data/data_certificates/data_certificates_slider/dataCertificatesSlider.json
const dataCertificatesSlider_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"certificate-link-","href":"#popup-e"},{"id":"certificate-img-","alt":"","src":""}]');
;// ./src/components/sections/certificates/Certificates.jsx
function Certificates_slicedToArray(r, e) { return Certificates_arrayWithHoles(r) || Certificates_iterableToArrayLimit(r, e) || Certificates_unsupportedIterableToArray(r, e) || Certificates_nonIterableRest(); }
function Certificates_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function Certificates_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return Certificates_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Certificates_arrayLikeToArray(r, a) : void 0; } }
function Certificates_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function Certificates_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function Certificates_arrayWithHoles(r) { if (Array.isArray(r)) return r; }











var Certificates = function Certificates() {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var certificatesClass = classnames_default()("certificates".concat(queryNumber));
  var containerCertificatesClass = classnames_default()("container-certificates".concat(queryNumber));
  var certificatesSliderClass = classnames_default()("certificates".concat(queryNumber, "__slider"));
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling;
  var sliderCert = (0,react.useRef)();
  var _useState = (0,react.useState)(true),
    _useState2 = Certificates_slicedToArray(_useState, 2),
    isSliderCert = _useState2[0],
    setIsSliderCert = _useState2[1];
  var animationScaleY = function animationScaleY(current, scaleY, opacity, height, duration) {
    gsap/* default */.Ay.timeline().to(current, {
      scaleY: scaleY,
      opacity: opacity,
      duration: duration
    }).to(current, {
      height: height,
      duration: duration - 1,
      delay: -1
    });
  };
  var imagesCertificates = SliderCertContent;
  var containerRef = (0,react.useRef)(null);
  var _useState3 = (0,react.useState)(0),
    _useState4 = Certificates_slicedToArray(_useState3, 2),
    containerWidth = _useState4[0],
    setContainerWidth = _useState4[1];
  (0,react.useLayoutEffect)(function () {
    var width = containerRef.current.offsetWidth;
    setContainerWidth(width);
  });
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("section", {
    className: certificatesClass
  }, /*#__PURE__*/react.createElement("div", {
    className: containerCertificatesClass,
    ref: containerRef
  }, /*#__PURE__*/react.createElement("div", {
    className: certificatesSliderClass,
    ref: sliderCert
  }, /*#__PURE__*/react.createElement(SliderCert, {
    data: dataCertificatesSlider_namespaceObject,
    images: imagesCertificates,
    containerWidth: containerWidth
  })))));
};
;// ./src/components/sections/certificates/index.js

;// ./src/components/sections/companies/Companies.jsx
function Companies_extends() { return Companies_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Companies_extends.apply(null, arguments); }
function Companies_slicedToArray(r, e) { return Companies_arrayWithHoles(r) || Companies_iterableToArrayLimit(r, e) || Companies_unsupportedIterableToArray(r, e) || Companies_nonIterableRest(); }
function Companies_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function Companies_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return Companies_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Companies_arrayLikeToArray(r, a) : void 0; } }
function Companies_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function Companies_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function Companies_arrayWithHoles(r) { if (Array.isArray(r)) return r; }








var Companies = function Companies(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var companiesClass = classnames_default()("companies".concat(queryNumber));
  var containerClass = classnames_default()("container".concat(queryNumber));
  var containerCompaniesClass = classnames_default()("container-companies".concat(queryNumber));
  var companiesListClass = classnames_default()("companies".concat(queryNumber, "__list"));
  var companiesItemClass = classnames_default()("companies".concat(queryNumber, "__item"));
  var companiesItemMychwayClass = classnames_default()("companies".concat(queryNumber, "__item-mychway"));
  var companiesFrameClass = classnames_default()("companies".concat(queryNumber, "__frame"));
  var companiesFrameMychwayClass = classnames_default()("companies".concat(queryNumber, "__frame-mychway"));
  var companiesGroupClass = classnames_default()("companies".concat(queryNumber, "__group"));
  var companiesGroupMychwayClass = classnames_default()("companies".concat(queryNumber, "__group-mychway"));
  var companiesItemAuroClass = classnames_default()("companies".concat(queryNumber, "__item-auro"));
  var companiesItemSalonartClass = classnames_default()("companies".concat(queryNumber, "__item-salonart"));
  var companiesItemVibroClass = classnames_default()("companies".concat(queryNumber, "__item-vibro"));
  var companiesItemDrceuracleClass = classnames_default()("companies".concat(queryNumber, "__item-drceuracle"));
  var companiesFrameAuroClass = classnames_default()("companies".concat(queryNumber, "__frame-auro"));
  var companiesFrameSalonartClass = classnames_default()("companies".concat(queryNumber, "__frame-salonart"));
  var companiesFrameVibroClass = classnames_default()("companies".concat(queryNumber, "__frame-vibro"));
  var companiesFrameDrceuracleClass = classnames_default()("companies".concat(queryNumber, "__frame-drceuracle"));
  var companiesGroupAuroClass = classnames_default()("companies".concat(queryNumber, "__group-auro"));
  var companiesGroupSalonartClass = classnames_default()("companies".concat(queryNumber, "__group-salonart"));
  var companiesGroupVibroClass = classnames_default()("companies".concat(queryNumber, "__group-vibro"));
  var companiesGroupDrceuracleClass = classnames_default()("companies".concat(queryNumber, "__group-drceuracle"));
  var companiesNameClass = classnames_default()("companies".concat(queryNumber, "__name"));
  var companiesNameMychwayClass = classnames_default()("companies".concat(queryNumber, "__name-mychway"));
  var companiesNameAuroClass = classnames_default()("companies".concat(queryNumber, "__name-auro"));
  var companiesNameSalonartClass = classnames_default()("companies".concat(queryNumber, "__name-salonart"));
  var companiesNameVibroClass = classnames_default()("companies".concat(queryNumber, "__name-vibro"));
  var companiesNameDrceuracleClass = classnames_default()("companies".concat(queryNumber, "__name-drceuracle"));
  var companiesBlurClass = classnames_default()("companies".concat(queryNumber, "__blur"));
  var companiesBlurMychwayClass = classnames_default()("companies".concat(queryNumber, "__blur-mychway"));
  var companiesBlurAuroClass = classnames_default()("companies".concat(queryNumber, "__blur-auro"));
  var companiesBlurSalonartClass = classnames_default()("companies".concat(queryNumber, "__blur-salonart"));
  var companiesBlurVibroClass = classnames_default()("companies".concat(queryNumber, "__blur-vibro"));
  var companiesBlurDrceuracleClass = classnames_default()("companies".concat(queryNumber, "__blur-drceuracle"));
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling;
  var companiesListRef = (0,react.useRef)();
  var _useState = (0,react.useState)(true),
    _useState2 = Companies_slicedToArray(_useState, 2),
    isCompaniesList = _useState2[0],
    setIsCompaniesList = _useState2[1];
  (0,react.useLayoutEffect)(function () {
    if (media744l === true || media600 === true || media600l === true || media375 === true || media275 === true) return;
    var headerHeight = 120;
    var handleScroll = function handleScroll() {
      if (companiesListRef.current.getBoundingClientRect().top < headerHeight - 120) {
        setIsCompaniesList(false);
      } else {
        setIsCompaniesList(true);
      }
    };
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    if (props.bottom === true) {
      setIsCompaniesList(true);
    }
    return function () {
      window.removeEventListener('scroll', handleScroll);
      if (companiesListRef.current.getBoundingClientRect().top > headerHeight) {
        setIsCompaniesList(true);
      }
    };
  }, [isScrolling]);
  var propsData = function propsData(props) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var propsAll = props;
    return propsAll.data[index];
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("section", {
    className: companiesClass,
    style: {
      zIndex: 1
    }
  }, /*#__PURE__*/react.createElement("div", {
    className: containerCompaniesClass
  }, /*#__PURE__*/react.createElement("ul", {
    className: companiesListClass,
    ref: companiesListRef,
    style: isCompaniesList === true || props.bottom === true ? {
      opacity: 1
    } : isCompaniesList === false ? {
      opacity: 0.1
    } : null
  }, /*#__PURE__*/react.createElement("li", {
    className: "".concat(companiesItemClass, " ").concat(companiesItemMychwayClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesFrameClass, " ").concat(companiesFrameMychwayClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesGroupClass, " ").concat(companiesGroupMychwayClass)
  }, propsData(props, 0).map(function (prop, i) {
    return i === 0 ? /*#__PURE__*/react.createElement(ui/* UiH2 */.Ht, Companies_extends({
      key: "uiH2CompanyMychway".concat(i)
    }, prop, {
      className: "".concat(companiesNameClass, " ").concat(companiesNameMychwayClass)
    })) : i === 1 ? /*#__PURE__*/react.createElement(ui/* UiP */.zx, Companies_extends({
      key: "uiPCompanyMychway".concat(i)
    }, prop, {
      className: "".concat(companiesBlurClass, " ").concat(companiesBlurMychwayClass)
    })) : null;
  })))), /*#__PURE__*/react.createElement("li", {
    className: "".concat(companiesItemClass, " ").concat(companiesItemAuroClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesFrameClass, " ").concat(companiesFrameAuroClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesGroupClass, " ").concat(companiesGroupAuroClass)
  }, propsData(props, 1).map(function (prop, i) {
    return i === 0 ? /*#__PURE__*/react.createElement(ui/* UiH2 */.Ht, Companies_extends({
      key: "uiH2CompanyAuro".concat(i)
    }, prop, {
      className: "".concat(companiesNameClass, " ").concat(companiesNameAuroClass)
    })) : i === 1 ? /*#__PURE__*/react.createElement(ui/* UiP */.zx, Companies_extends({
      key: "uiPCompanyAuro".concat(i)
    }, prop, {
      className: "".concat(companiesBlurClass, " ").concat(companiesBlurAuroClass)
    })) : null;
  })))), /*#__PURE__*/react.createElement("li", {
    className: "".concat(companiesItemClass, " ").concat(companiesItemSalonartClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesFrameClass, " ").concat(companiesFrameSalonartClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesGroupClass, " ").concat(companiesGroupSalonartClass)
  }, propsData(props, 2).map(function (prop, i) {
    return i === 0 ? /*#__PURE__*/react.createElement(ui/* UiH2 */.Ht, Companies_extends({
      key: "uiH2CompanySalonart".concat(i)
    }, prop, {
      className: "".concat(companiesNameClass, " ").concat(companiesNameSalonartClass)
    })) : i === 1 ? /*#__PURE__*/react.createElement(ui/* UiP */.zx, Companies_extends({
      key: "uiPCompanySalonart".concat(i)
    }, prop, {
      className: "".concat(companiesBlurClass, " ").concat(companiesBlurSalonartClass)
    })) : null;
  })))), /*#__PURE__*/react.createElement("li", {
    className: "".concat(companiesItemClass, " ").concat(companiesItemVibroClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesFrameClass, " ").concat(companiesFrameVibroClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesGroupClass, " ").concat(companiesGroupVibroClass)
  }, propsData(props, 3).map(function (prop, i) {
    return i === 0 ? /*#__PURE__*/react.createElement(ui/* UiH2 */.Ht, Companies_extends({
      key: "uiH2CompanyVibro".concat(i)
    }, prop, {
      className: "".concat(companiesNameClass, " ").concat(companiesNameVibroClass)
    })) : i === 1 ? /*#__PURE__*/react.createElement(ui/* UiP */.zx, Companies_extends({
      key: "uiPCompanyVibro".concat(i)
    }, prop, {
      className: "".concat(companiesBlurClass, " ").concat(companiesBlurVibroClass)
    })) : null;
  })))), /*#__PURE__*/react.createElement("li", {
    className: "".concat(companiesItemClass, " ").concat(companiesItemDrceuracleClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesFrameClass, " ").concat(companiesFrameDrceuracleClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(companiesGroupClass, " ").concat(companiesGroupDrceuracleClass)
  }, propsData(props, 4).map(function (prop, i) {
    return i === 0 ? /*#__PURE__*/react.createElement(ui/* UiH2 */.Ht, Companies_extends({
      key: "uiH2CompanyDrceuracle".concat(i)
    }, prop, {
      className: "".concat(companiesNameClass, " ").concat(companiesNameDrceuracleClass)
    })) : i === 1 ? /*#__PURE__*/react.createElement(ui/* UiP */.zx, Companies_extends({
      key: "uiPCompanyDrceuracle".concat(i)
    }, prop, {
      className: "".concat(companiesBlurClass, " ").concat(companiesBlurDrceuracleClass)
    })) : null;
  }))))))));
};
;// ./src/components/sections/companies/index.js

// EXTERNAL MODULE: ./src/contexts/index.js
var contexts = __webpack_require__(1469);
;// ./src/data/data_modal/data_modal_content/data_modal_content_b/dataModalContentB.json
const dataModalContentB_namespaceObject = /*#__PURE__*/JSON.parse('{"id":"modal-b-link-phone","href":"","children":""}');
;// ./src/data/data_modal/data_modal_content/data_modal_content_f/dataModalContentF.json
const dataModalContentF_namespaceObject = /*#__PURE__*/JSON.parse('{"id":"modal-f-link-phone","href":"","children":""}');
;// ./src/data/data_modal/data_modal_content/data_modal_content_g/dataModalContentG.json
const dataModalContentG_namespaceObject = /*#__PURE__*/JSON.parse('{"id":"modal-g-link-phone","href":"","children":""}');
// EXTERNAL MODULE: ./src/data/data_phone/dataPhone.json
var dataPhone = __webpack_require__(1282);
// EXTERNAL MODULE: ./src/func/func_props/funcProps.js
var funcProps = __webpack_require__(8427);
;// ./src/components/sections/footer/footer_section-1/FooterSection1.jsx
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }














var delay = function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};
var FooterSection1 = function FooterSection1(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerMenuClass = classnames_default()("footer".concat(queryNumber, "__menu"));
  var footerInnerClass = classnames_default()("footer".concat(queryNumber, "__inner"));
  var footerInnerColumnClass = classnames_default()("footer".concat(queryNumber, "__inner-column"));
  var footerColumnClass = classnames_default()("footer".concat(queryNumber, "__column"));
  var footerColumn1Class = classnames_default()("footer".concat(queryNumber, "__column-1"));
  var footerColumn2Class = classnames_default()("footer".concat(queryNumber, "__column-2"));
  var footerColumn3Class = classnames_default()("footer".concat(queryNumber, "__column-3"));
  var menuFooterClass = classnames_default()("menu-footer".concat(queryNumber));
  var menuItemClass = classnames_default()("menu".concat(queryNumber, "__item"));
  var menuItemSection1Class = classnames_default()("menu".concat(queryNumber, "__item-section1"));
  var menuLinkSection1Class = classnames_default()("menu".concat(queryNumber, "__link-section1"));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal;
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var handleClickModalB = function handleClickModalB() {
    openModal({
      id: "".concat(modalId, "b"),
      className: "".concat(modalBodyClassName, "b"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentB */.Tm, {
        dataPhone: dataPhone,
        data: dataModalContentB_namespaceObject
      })
    });
  };
  var handleClickModalF = function handleClickModalF() {
    openModal({
      id: "".concat(modalId, "f"),
      className: "".concat(modalBodyClassName, "f"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentF */.hV, {
        dataPhone: dataPhone,
        data: dataModalContentF_namespaceObject
      })
    });
  };
  var handleClickModalG = function handleClickModalG() {
    openModal({
      id: "".concat(modalId, "g"),
      className: "".concat(modalBodyClassName, "g"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentG */._U, {
        dataPhone: dataPhone,
        data: dataModalContentG_namespaceObject
      })
    });
  };
  var handleClickModalH = function handleClickModalH() {
    openModal({
      id: "".concat(modalId, "h"),
      className: "".concat(modalBodyClassName, "h"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentH */.TB, null)
    });
  };
  var funcTimeout = function funcTimeout(callback, timeout) {
    var timeoutReference = setTimeout(callback, timeout);
    return function () {
      return clearTimeout(timeoutReference);
    };
  };
  var handleClickBody = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {
      var _props$bodyRef$curren;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            props.scroll();
            _context.next = 3;
            return delay(1500);
          case 3:
            (_props$bodyRef$curren = props.bodyRef.current) === null || _props$bodyRef$curren === void 0 || _props$bodyRef$curren.click();
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function handleClickBody(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  var handleClickFace = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {
      var _props$faceRef$curren;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            props.scroll();
            _context2.next = 3;
            return delay(1500);
          case 3:
            (_props$faceRef$curren = props.faceRef.current) === null || _props$faceRef$curren === void 0 || _props$faceRef$curren.click();
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function handleClickFace(_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: footerMenuClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerInnerClass, " ").concat(footerInnerColumnClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerColumnClass, " ").concat(footerColumn1Class)
  }, /*#__PURE__*/react.createElement("menu", {
    className: menuFooterClass
  }, (0,funcProps/* default */.A)(props)[0].map(function (prop, i) {
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("li", {
      className: "".concat(menuItemClass, " ").concat(menuItemSection1Class)
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
      key: "uiButtonFooterSection1Column1".concat(i),
      id: prop.id,
      className: menuLinkSection1Class,
      onClick: handleClickModalH
    }, prop.children)));
  }))), /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerColumnClass, " ").concat(footerColumn2Class)
  }, /*#__PURE__*/react.createElement("menu", {
    className: menuFooterClass
  }, (0,funcProps/* default */.A)(props)[1].map(function (prop, i) {
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("li", {
      className: "".concat(menuItemClass, " ").concat(menuItemSection1Class)
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
      key: "uiButtonFooterSection1Column2".concat(i),
      id: prop.id,
      className: menuLinkSection1Class,
      onClick: i === 0 ? handleClickBody : i === 1 ? handleClickFace : null
    }, media275 && i === 0 ? "Тело" : media275 && i === 1 ? "Лицо" : prop.children)));
  }))), /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerColumnClass, " ").concat(footerColumn3Class)
  }, /*#__PURE__*/react.createElement("menu", {
    className: menuFooterClass
  }, (0,funcProps/* default */.A)(props)[2].map(function (prop, i) {
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("li", {
      className: "".concat(menuItemClass, " ").concat(menuItemSection1Class),
      key: "liMenuItemSection1".concat(i)
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
      key: "uiButtonFooterSection1Column3".concat(i),
      id: prop.id,
      className: menuLinkSection1Class,
      onClick: i === 0 ? handleClickModalB : i === 1 ? handleClickModalG : i === 2 ? handleClickModalF : null
    }, prop.children)));
  }))))));
};
;// ./src/components/sections/footer/footer_section-1/index.js

;// ./src/images/logo-footer.png
const logo_footer_namespaceObject = __webpack_require__.p + "images/logo-footer.a1323a44ef2d41ce71b3.png";
;// ./src/components/sections/footer/footer_section-2/footer_logo/footer_logo_img/FooterLogoImg.jsx
function FooterLogoImg_extends() { return FooterLogoImg_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FooterLogoImg_extends.apply(null, arguments); }








var FooterLogoImg = function FooterLogoImg(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var logoClass = classnames_default()({
    'logo': media1728 === true,
    'logo--1133': media1133 === true,
    'logo--744': media744 === true,
    'logo--744l': media744l === true,
    'logo--375': media375 === true,
    'logo--275': media275 === true,
    'logo--1300': media1300 === true,
    'logo--900': media900 === true,
    'logo--600': media600 === true,
    'logo--600l': media600l === true
  });
  var logoFooterClass = classnames_default()({
    'logo-footer': media1728 === true,
    'logo-footer--1133': media1133 === true,
    'logo-footer--744': media744 === true,
    'logo-footer--744l': media744l === true,
    'logo-footer--375': media375 === true,
    'logo-footer--275': media275 === true,
    'logo-footer--1300': media1300 === true,
    'logo-footer--900': media900 === true,
    'logo-footer--600': media600 === true,
    'logo-footer--600l': media600l === true
  });
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props, [logo_footer_namespaceObject]).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, FooterLogoImg_extends({
      key: "uiImgFooterLogoImg".concat(i)
    }, prop, {
      className: "".concat(logoClass, " ").concat(logoFooterClass)
    }));
  }));
};
;// ./src/components/sections/footer/footer_section-2/footer_logo/footer_logo_img/index.js

;// ./src/data/data_footer/data_footer_section-2/data_footer_section2_logo/data_footer_section2_logo_img/dataFooterLogoImg.json
const dataFooterLogoImg_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"footer-logo-img-0","alt":"","src":""}]');
;// ./src/components/sections/footer/footer_section-2/footer_logo/FooterLogo.jsx
function FooterLogo_extends() { return FooterLogo_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FooterLogo_extends.apply(null, arguments); }










var FooterLogo = function FooterLogo(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerLinkClass = classnames_default()("footer".concat(queryNumber, "__link"));
  var footerLinkLogoClass = classnames_default()("footer".concat(queryNumber, "__link-logo"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, FooterLogo_extends({
      key: "uiLinkFooterLogo".concat(i)
    }, prop, {
      className: "".concat(footerLinkClass, " ").concat(footerLinkLogoClass)
    }), /*#__PURE__*/react.createElement(FooterLogoImg, {
      data: dataFooterLogoImg_namespaceObject
    }));
  }));
};
;// ./src/components/sections/footer/footer_section-2/footer_logo/index.js

;// ./src/data/data_footer/data_footer_section-2/data_footer_section2_logo/dataFooterLogo.json
const dataFooterLogo_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"footer-logo-link-0","href":"https://ivanays.github.io/"}]');
;// ./src/func/func_date/funcDate.js
function getYearsOnFooter(year) {
  var startYear = year;
  var now = new Date();
  return "".concat(startYear, " - ").concat(now.getFullYear());
}
/* harmony default export */ const funcDate = (getYearsOnFooter);
;// ./src/components/sections/footer/footer_section-2/FooterSection2.jsx









var FooterSection2 = function FooterSection2() {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerInnerClass = classnames_default()("footer".concat(queryNumber, "__inner"));
  var footerInnerSection2Class = classnames_default()("footer".concat(queryNumber, "__inner-section2"));
  var footerInnerLeftClass = classnames_default()("footer".concat(queryNumber, "__inner-left"));
  var footerInnerWarningClass = classnames_default()("footer".concat(queryNumber, "__inner-warning"));
  var footerCopyrightClass = classnames_default()("footer".concat(queryNumber, "__copyright"));
  var footerLogoClass = classnames_default()("footer".concat(queryNumber, "__logo"));
  var footerCopyClass = classnames_default()("footer".concat(queryNumber, "__copy"));
  var footerPClass = classnames_default()("footer".concat(queryNumber, "__p"));
  var footerPCopyClass = classnames_default()("footer".concat(queryNumber, "__p-copy"));
  var footerPWarningClass = classnames_default()("footer".concat(queryNumber, "__p-warning"));
  var footerWarningClass = classnames_default()("footer".concat(queryNumber, "__warning"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerInnerClass, " ").concat(footerInnerSection2Class)
  }, /*#__PURE__*/react.createElement("div", {
    className: footerCopyrightClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerInnerClass, " ").concat(footerInnerLeftClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: footerLogoClass
  }, /*#__PURE__*/react.createElement(FooterLogo, {
    data: dataFooterLogo_namespaceObject
  })), /*#__PURE__*/react.createElement("div", {
    className: footerCopyClass
  }, /*#__PURE__*/react.createElement("p", {
    className: "".concat(footerPClass, " ").concat(footerPCopyClass)
  }, "\xA9 ", /*#__PURE__*/react.createElement("span", {
    id: "year",
    className: "footer__year"
  }, funcDate(2024), " "), " SNV"), /*#__PURE__*/react.createElement("p", {
    className: "".concat(footerPClass, " ").concat(footerPCopyClass)
  }, "\u0412\u0441\u0435 \u043F\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043D\u044B")))), /*#__PURE__*/react.createElement("div", {
    className: footerWarningClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(footerInnerClass, " ").concat(footerInnerWarningClass)
  }, /*#__PURE__*/react.createElement("p", {
    className: "".concat(footerPClass, " ").concat(footerPWarningClass)
  }, media275 ? "Нужна консультация специалиста." : "Необходима консультация специалиста."), /*#__PURE__*/react.createElement("p", {
    className: "".concat(footerPClass, " ").concat(footerPWarningClass)
  }, "\u0418\u043C\u0435\u044E\u0442\u0441\u044F \u043F\u0440\u043E\u0442\u0438\u0432\u043E\u043F\u043E\u043A\u0430\u0437\u0430\u043D\u0438\u044F.")))));
};
;// ./src/components/sections/footer/footer_section-2/index.js

;// ./src/components/sections/footer/footer_section-3/FooterSection3.jsx
function FooterSection3_extends() { return FooterSection3_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FooterSection3_extends.apply(null, arguments); }











var FooterSection3 = function FooterSection3(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerIconsClass = classnames_default()("footer".concat(queryNumber, "__icons"));
  var iconsClass = classnames_default()("icons".concat(queryNumber));
  var iconsFooterClass = classnames_default()("icons-footer".concat(queryNumber));
  var iconsItemClass = classnames_default()("icons".concat(queryNumber, "__item"));
  var iconsItemFooterClass = classnames_default()("icons".concat(queryNumber, "__item-footer"));
  var iconsItemWhatsappClass = classnames_default()("icons".concat(queryNumber, "__item-whatsapp"));
  var iconsItemTelegramClass = classnames_default()("icons".concat(queryNumber, "__item-telegram"));
  var iconsItemCheckmarkClass = classnames_default()("icons".concat(queryNumber, "__item-checkmark"));
  var iconsLinkClass = classnames_default()("icons".concat(queryNumber, "__link"));
  var iconsLinkFooterClass = classnames_default()("icons".concat(queryNumber, "__link-footer"));
  var iconsLinkWhatsappClass = classnames_default()("icons".concat(queryNumber, "__link-whatsapp"));
  var iconsLinkTelegramClass = classnames_default()("icons".concat(queryNumber, "__link-telegram"));
  var iconsLinkCheckmarkClass = classnames_default()("icons".concat(queryNumber, "__link-checkmark"));
  var iconsLineClass = classnames_default()("icons".concat(queryNumber, "__line"));
  var iconsLineFooterClass = classnames_default()("icons".concat(queryNumber, "__line-footer"));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var iconsLinkRef = (0,react.useRef)(props.data[1].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var iconsDivRef = (0,react.useRef)(props.data[2].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal;
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var handleClickModalD = function handleClickModalD() {
    console.log('clickD');
    openModal({
      id: "".concat(modalId, "d"),
      className: "".concat(modalBodyClassName, "d"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentD */.fD, null)
    });
  };
  var handleLiMouseEnter = function handleLiMouseEnter(current1, current2) {
    gsap/* default */.Ay.timeline().to(current1, {
      opacity: 0.7,
      scale: 1.08,
      duration: 0.3,
      ease: "ease"
    }).to(current2, {
      opacity: 0.7,
      scaleX: 1.2,
      left: -10,
      bottom: -3,
      duration: 0.3,
      delay: -0.3,
      ease: "ease"
    });
  };
  var handleLiMouseLeave = function handleLiMouseLeave(current1, current2) {
    gsap/* default */.Ay.timeline().to(current1, {
      opacity: 0.5,
      scale: 1,
      duration: 0.3,
      ease: "ease"
    }).to(current2, {
      opacity: 0.5,
      scaleX: 1,
      left: 0,
      bottom: 0,
      duration: 0.3,
      delay: -0.3,
      ease: "ease"
    });
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: footerIconsClass
  }, /*#__PURE__*/react.createElement("menu", {
    className: "".concat(iconsClass, " ").concat(iconsFooterClass)
  }, (0,funcProps/* default */.A)(props)[0].map(function (propi, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLi */.Yh, FooterSection3_extends({
      key: "uiLiFooterSection3".concat(i)
    }, propi, {
      className: "".concat(iconsItemClass, " ").concat(iconsItemFooterClass, " ").concat(i === 0 ? iconsItemWhatsappClass : i === 1 ? iconsItemTelegramClass : i === 2 ? iconsItemCheckmarkClass : null),
      onMouseEnter: function onMouseEnter() {
        handleLiMouseEnter(iconsLinkRef.current[i].current, iconsDivRef.current[i].current);
      },
      onMouseLeave: function onMouseLeave() {
        handleLiMouseLeave(iconsLinkRef.current[i].current, iconsDivRef.current[i].current);
      }
    }), (0,funcProps/* default */.A)(props)[1].map(function (propj, j) {
      return i === j ? /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
        key: "uiButtonFooterSection3".concat(j),
        id: propj.id,
        ref: iconsLinkRef.current[j],
        className: "".concat(iconsLinkClass, " ").concat(iconsLinkFooterClass, " ").concat(i === 0 ? iconsLinkWhatsappClass : i === 1 ? iconsLinkTelegramClass : i === 2 ? iconsLinkCheckmarkClass : null),
        onClick: j === 2 ? handleClickModalD : null
      }) : null;
    }), (0,funcProps/* default */.A)(props)[2].map(function (propk, k) {
      return i === k ? /*#__PURE__*/react.createElement(ui/* UiDiv */.Q4, FooterSection3_extends({
        key: "uiDivFooterSection3".concat(k),
        ref: iconsDivRef.current[k]
      }, propk, {
        className: "".concat(iconsLineClass, " ").concat(iconsLineFooterClass)
      })) : null;
    }));
  }))));
};
;// ./src/components/sections/footer/footer_section-3/index.js

;// ./src/images/bg-call.png
const bg_call_namespaceObject = __webpack_require__.p + "images/bg-call.2ab5f54f344eac78e156.png";
;// ./src/images/bg-call1133.png
const bg_call1133_namespaceObject = __webpack_require__.p + "images/bg-call1133.2b0d18dd51bda5599546.png";
;// ./src/images/bg-call375.png
const bg_call375_namespaceObject = __webpack_require__.p + "images/bg-call375.d236593fe8ff3ef51bf7.png";
// EXTERNAL MODULE: ./src/func/func_phone/funcHrefPhone.js
var funcHrefPhone = __webpack_require__(7008);
// EXTERNAL MODULE: ./src/func/func_phone/funcArrPhone.js
var funcArrPhone = __webpack_require__(8414);
;// ./src/components/sections/footer/footer_section-4/FooterSection4.jsx
function FooterSection4_extends() { return FooterSection4_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FooterSection4_extends.apply(null, arguments); }














var FooterSection4 = function FooterSection4(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerPhoneClass = classnames_default()("footer".concat(queryNumber, "__phone"));
  var footerLinkPhoneClass = classnames_default()("footer".concat(queryNumber, "__link-phone"));
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    (0,funcArrPhone/* default */.A)(propsAll).length !== -1 ? data.push(JSON.parse(JSON.stringify(propsAll.data))) : null;
    data[0].href = (0,funcHrefPhone/* default */.A)(propsAll);
    (0,funcArrPhone/* default */.A)(propsAll).map(function (value, i) {
      i === 1 || i === 4 || i === 7 || i === 9 ? data[0].children += " ".concat(value) : data[0].children += "".concat(value);
    });
    return data;
  };
  var loadedImageBg1728 = (0,hooks/* useLoadImageBg */.ws)(bg_call_namespaceObject);
  var loadedImageBg1300 = (0,hooks/* useLoadImageBg */.ws)(bg_call1133_namespaceObject);
  var loadedImageBg1133 = (0,hooks/* useLoadImageBg */.ws)(bg_call1133_namespaceObject);
  var loadedImageBg900 = (0,hooks/* useLoadImageBg */.ws)(bg_call1133_namespaceObject);
  var loadedImageBg744 = (0,hooks/* useLoadImageBg */.ws)(bg_call1133_namespaceObject);
  var loadedImageBg600 = (0,hooks/* useLoadImageBg */.ws)(bg_call375_namespaceObject);
  var loadedImageBg375 = (0,hooks/* useLoadImageBg */.ws)(bg_call375_namespaceObject);
  var loadedImageBg275 = (0,hooks/* useLoadImageBg */.ws)(bg_call375_namespaceObject);
  var loadedImageBg;
  media1728 ? loadedImageBg = loadedImageBg1728 : media1300 ? loadedImageBg = loadedImageBg1300 : media1133 ? loadedImageBg = loadedImageBg1133 : media900 ? loadedImageBg = loadedImageBg900 : media744 ? loadedImageBg = loadedImageBg744 : media744l ? loadedImageBg = loadedImageBg744 : media600 ? loadedImageBg = loadedImageBg375 : media600l ? loadedImageBg = loadedImageBg375 : media375 ? loadedImageBg = loadedImageBg375 : media275 ? loadedImageBg = loadedImageBg275 : null;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: footerPhoneClass,
    style: {
      backgroundImage: "url(".concat(loadedImageBg, ")")
    }
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, FooterSection4_extends({
      key: "uiLinkFooterSection4Phone".concat(i)
    }, prop, {
      className: footerLinkPhoneClass
    }));
  })));
};
;// ./src/components/sections/footer/footer_section-4/index.js

;// ./src/images/bg-footer.png
const bg_footer_namespaceObject = __webpack_require__.p + "images/bg-footer.8b69d3ae68bd249d8188.png";
;// ./src/images/bg-footer1300.png
const bg_footer1300_namespaceObject = __webpack_require__.p + "images/bg-footer1300.dd2309798bef23b1aa75.png";
;// ./src/images/bg-footer1133.png
const bg_footer1133_namespaceObject = __webpack_require__.p + "images/bg-footer1133.2b2c5b38ae2792012301.png";
;// ./src/images/bg-footer900.png
const bg_footer900_namespaceObject = __webpack_require__.p + "images/bg-footer900.3bbcc2e4a7138cb078dd.png";
;// ./src/images/bg-footer744.png
const bg_footer744_namespaceObject = __webpack_require__.p + "images/bg-footer744.c3b9c89e0188f786ed51.png";
;// ./src/images/bg-footer600.png
const bg_footer600_namespaceObject = __webpack_require__.p + "images/bg-footer600.723bd3e10e80df778f52.png";
;// ./src/images/bg-footer375_214.png
const bg_footer375_214_namespaceObject = __webpack_require__.p + "images/bg-footer375_214.dfd73d7f883bc38cfe8c.png";
;// ./src/images/bg-footer275_212.png
const bg_footer275_212_namespaceObject = __webpack_require__.p + "images/bg-footer275_212.99065c97a4b64b92c46e.png";
;// ./src/data/data_footer/data_footer_section-1/dataFooterSection1.json
const dataFooterSection1_namespaceObject = /*#__PURE__*/JSON.parse('[[{"id":"footer-section1-column1-link-0","className":"menu__link-section1 popup-link","children":"Отзывы"}],[{"id":"footer-section1-column2-link-0","className":"menu__link-section1 menu__link-block","children":"Услуги для тела"},{"id":"footer-section1-column2-link-1","className":"menu__link-section1 menu__link-block","children":"Услуги для лица"}],[{"id":"footer-section1-column3-link-0","className":"menu__link-section1 popup-link","children":"Свободные окошки"},{"id":"footer-section1-column3-link-1","className":"menu__link-section1 popup-link","children":"Выезд на дом"},{"id":"footer-section1-column3-link-2","className":"menu__link-section1 popup-link","children":"Акции"}]]');
;// ./src/data/data_footer/data_footer_section-3/dataFooterSection3.json
const dataFooterSection3_namespaceObject = /*#__PURE__*/JSON.parse('[[{"id":"footer-icon-whatsapp"},{"id":"footer-icon-telegram"},{"id":"footer-icon-checkmark"}],[{"id":"footer-link-whatsapp"},{"id":"footer-link-telegram"},{"id":"footer-link-checkmark"}],[{"id":"icon-line-whatsapp"},{"id":"icon-line-telegram"},{"id":"icon-line-checkmark"}]]');
;// ./src/data/data_footer/data_footer_section-4/dataFooterSection4.json
const dataFooterSection4_namespaceObject = /*#__PURE__*/JSON.parse('{"id":"footer-link-phone","className":"footer__link-phone","href":"","children":""}');
;// ./src/components/sections/footer/Footer.jsx



















// import FooterBg375 from '../../../images/bg-footer375.png';





var Footer = function Footer(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var footerClass = classnames_default()("footer".concat(queryNumber));
  var containerClass = classnames_default()("container".concat(queryNumber));
  var footerRelativeClass = classnames_default()("footer".concat(queryNumber, "__relative"));
  var footerSection1Class = classnames_default()("footer".concat(queryNumber, "__section1"));
  var footerSection2Class = classnames_default()("footer".concat(queryNumber, "__section2"));
  var footerSection3Class = classnames_default()("footer".concat(queryNumber, "__section3"));
  var footerSection4Class = classnames_default()("footer".concat(queryNumber, "__section4"));
  var loadedImageBg1728 = (0,hooks/* useLoadImageBg */.ws)(bg_footer_namespaceObject);
  var loadedImageBg1300 = (0,hooks/* useLoadImageBg */.ws)(bg_footer1300_namespaceObject);
  var loadedImageBg1133 = (0,hooks/* useLoadImageBg */.ws)(bg_footer1133_namespaceObject);
  var loadedImageBg900 = (0,hooks/* useLoadImageBg */.ws)(bg_footer900_namespaceObject);
  var loadedImageBg744 = (0,hooks/* useLoadImageBg */.ws)(bg_footer744_namespaceObject);
  var loadedImageBg600 = (0,hooks/* useLoadImageBg */.ws)(bg_footer600_namespaceObject);
  var loadedImageBg375 = (0,hooks/* useLoadImageBg */.ws)(bg_footer375_214_namespaceObject);
  var loadedImageBg275 = (0,hooks/* useLoadImageBg */.ws)(bg_footer275_212_namespaceObject);
  var loadedImageBg;
  media1728 ? loadedImageBg = loadedImageBg1728 : media1300 ? loadedImageBg = loadedImageBg1300 : media1133 ? loadedImageBg = loadedImageBg1133 : media900 ? loadedImageBg = loadedImageBg900 : media744 ? loadedImageBg = loadedImageBg744 : media744l ? loadedImageBg = loadedImageBg744 : media600 ? loadedImageBg = loadedImageBg600 : media600l ? loadedImageBg = loadedImageBg600 : media375 ? loadedImageBg = loadedImageBg375 : media275 ? loadedImageBg = loadedImageBg275 : null;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("footer", {
    className: footerClass,
    style: {
      backgroundImage: "url(".concat(loadedImageBg, ")")
    }
  }, /*#__PURE__*/react.createElement("div", {
    className: containerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: footerRelativeClass
  }, /*#__PURE__*/react.createElement("div", {
    className: footerSection1Class
  }, /*#__PURE__*/react.createElement(FooterSection1, {
    bodyRef: props.bodyRef,
    faceRef: props.faceRef,
    isClickedBody: props.isClickedBody,
    setIsClickedBody: props.setIsClickedBody,
    scroll: props.scroll,
    data: dataFooterSection1_namespaceObject
  })), /*#__PURE__*/react.createElement("div", {
    className: footerSection2Class
  }, /*#__PURE__*/react.createElement(FooterSection2, null)), /*#__PURE__*/react.createElement("div", {
    className: footerSection3Class
  }, /*#__PURE__*/react.createElement(FooterSection3, {
    data: dataFooterSection3_namespaceObject
  })), /*#__PURE__*/react.createElement("div", {
    className: footerSection4Class
  }, /*#__PURE__*/react.createElement(FooterSection4, {
    dataPhone: dataPhone,
    data: dataFooterSection4_namespaceObject
  }))))));
};
;// ./src/components/sections/footer/index.js

;// ./src/images/burger-header744.svg
const burger_header744_namespaceObject = __webpack_require__.p + "icons/burger-header744.c9d8acf81b93d3d55607.svg";
;// ./src/components/sections/header/header_burger/header_burger_img/HeaderBurgerImg.jsx
function HeaderBurgerImg_extends() { return HeaderBurgerImg_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, HeaderBurgerImg_extends.apply(null, arguments); }









var HeaderBurgerImg = function HeaderBurgerImg(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var burgerClass = classnames_default()("burger".concat(queryNumber));
  var burgerHeaderClass = classnames_default()("burger-header".concat(queryNumber));
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props, [burger_header744_namespaceObject]).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, HeaderBurgerImg_extends({
      key: "uiImgHeaderBurgerImg".concat(i)
    }, prop, {
      className: "".concat(burgerClass, " ").concat(burgerHeaderClass)
    }));
  }));
};
;// ./src/components/sections/header/header_burger/header_burger_img/index.js

;// ./src/data/data_header/data_header_burger/data_header_burger_img/dataHeaderBurgerImg.json
const dataHeaderBurgerImg_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-burger-img-0","alt":"","src":""}]');
;// ./src/data/data_modal/data_modal_content/data_modal_content_c/dataModalContentC.json
const dataModalContentC_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"modalcontent-link-0","className":"phone__number","href":"","children":""},{"id":"modalcontent-img-0","className":"phone__img","alt":"phone"}]');
;// ./src/components/sections/header/header_burger/HeaderBurger.jsx












var HeaderBurger = function HeaderBurger(props) {
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal,
    handleToggle = _useContext.handleToggle,
    isToggled = _useContext.isToggled;
  var modalId = 'popup-';
  var modalBodyClassName = 'popup__body popup__body-';
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var headerBurgerClass = classnames_default()("header".concat(queryNumber, "__burger"));
  var headerLinkClass = classnames_default()("header".concat(queryNumber, "__link"));
  var headerLinkBurgerClass = classnames_default()("header".concat(queryNumber, "__link-burger"));
  var handleClickBurger = function handleClickBurger() {
    handleToggle();
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: headerBurgerClass
  }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
    key: "uiLinkHeaderBurger0",
    id: 'header-burger-link-0',
    className: "".concat(headerLinkClass, " ").concat(headerLinkBurgerClass),
    onClick: handleClickBurger
  }, /*#__PURE__*/react.createElement(HeaderBurgerImg, {
    data: dataHeaderBurgerImg_namespaceObject
  }))));
};
;// ./src/components/sections/header/header_burger/index.js

;// ./src/images/logo-header.png
const logo_header_namespaceObject = __webpack_require__.p + "images/logo-header.c34b5fcc5b33a620c3fc.png";
;// ./src/components/sections/header/header_logo/header_logo_img/HeaderLogoImg.jsx
function HeaderLogoImg_extends() { return HeaderLogoImg_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, HeaderLogoImg_extends.apply(null, arguments); }









var HeaderLogoImg = function HeaderLogoImg(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var logoHeaderClass = classnames_default()("logo-header".concat(queryNumber));
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props, [logo_header_namespaceObject]).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, HeaderLogoImg_extends({
      key: "uiImgHeaderLogoImg".concat(i)
    }, prop, {
      className: logoHeaderClass
    }));
  }));
};
;// ./src/components/sections/header/header_logo/header_logo_img/index.js

;// ./src/data/data_header/data_header_logo/data_header_logo_img/dataHeaderLogoImg.json
const dataHeaderLogoImg_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-logo-img-0","alt":"","src":""}]');
;// ./src/components/sections/header/header_logo/HeaderLogo.jsx
function HeaderLogo_extends() { return HeaderLogo_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, HeaderLogo_extends.apply(null, arguments); }









var HeaderLogo = function HeaderLogo(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var portrait = (0,hooks/* useMediaQuery */.Ub)(queryMedia.portrait);
  var landscape = (0,hooks/* useMediaQuery */.Ub)(queryMedia.landscape);
  var linkHeaderLogoRef = (0,react.useRef)();

  // useLayoutEffect(() => {
  //     linkHeaderLogoRef.current.click();
  //     console.log('click!!!')
  // }, [portrait, landscape]);

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "header__logo"
  }, (0,funcProps/* default */.A)(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiLink */.bQ, HeaderLogo_extends({
      key: "uiLinkHeaderLogo".concat(i)
    }, prop, {
      style: props.position === 0 ? {
        pointerEvents: 'auto'
      } : {
        pointerEvents: 'none'
      },
      disabled: props.position === 0 ? false : true,
      ref: linkHeaderLogoRef
    }), /*#__PURE__*/react.createElement(HeaderLogoImg, {
      data: dataHeaderLogoImg_namespaceObject
    }));
  })));
};
;// ./src/components/sections/header/header_logo/index.js

;// ./src/components/sections/header/header_menu/HeaderMenu.jsx














var HeaderMenu = function HeaderMenu(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var headerMenuClass = classnames_default()("header".concat(queryNumber, "__menu"));
  var menuClass = classnames_default()("menu".concat(queryNumber));
  var menuItemClass = classnames_default()("menu".concat(queryNumber, "__item"));
  var menuItemHeaderClass = classnames_default()("menu".concat(queryNumber, "__item-header"));
  var menuLinkClass = classnames_default()("menu".concat(queryNumber, "__link"));
  var menuLinkHeaderClass = classnames_default()("menu".concat(queryNumber, "__link-header"));
  var menuHeaderClass = classnames_default()("menu-header".concat(queryNumber));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal,
    handleToggle = _useContext.handleToggle,
    isToggled = _useContext.isToggled;
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var handleClickModalB = function handleClickModalB() {
    openModal({
      id: "".concat(modalId, "b"),
      className: "".concat(modalBodyClassName, "b"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentB */.Tm, {
        dataPhone: dataPhone,
        data: dataModalContentB_namespaceObject
      })
    });
  };
  var handleClickModalF = function handleClickModalF() {
    openModal({
      id: "".concat(modalId, "f"),
      className: "".concat(modalBodyClassName, "f"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentF */.hV, {
        dataPhone: dataPhone,
        data: dataModalContentF_namespaceObject
      })
    });
  };
  var handleClickModalG = function handleClickModalG() {
    openModal({
      id: "".concat(modalId, "g"),
      className: "".concat(modalBodyClassName, "g"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentG */._U, {
        dataPhone: dataPhone,
        data: dataModalContentG_namespaceObject
      })
    });
  };
  var handleClickModalH = function handleClickModalH() {
    openModal({
      id: "".concat(modalId, "h"),
      className: "".concat(modalBodyClassName, "h"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentH */.TB, null)
    });
  };
  var handleClickScroll = function handleClickScroll() {
    props.callback();
    props.scroll();
    if (isToggled) handleToggle();
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: headerMenuClass
  }, /*#__PURE__*/react.createElement("menu", {
    className: "".concat(menuClass, " ").concat(menuHeaderClass),
    style: media275 || media375 || media600 || media600l || media744 || media744l ? {
      flexDirection: 'column',
      alignItems: 'end'
    } : {
      flexDirection: 'row',
      alignItems: 'center'
    }
  }, (0,funcProps/* default */.A)(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement("li", {
      className: "".concat(menuItemClass, " ").concat(menuItemHeaderClass),
      key: "liMenuItemHeader".concat(i)
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
      key: "uiButtonHeaderMenu".concat(i),
      id: prop.id,
      className: "".concat(menuLinkClass, " ").concat(menuLinkHeaderClass),
      onClick: i === 0 ? handleClickModalG : i === 1 ? handleClickScroll : i === 2 ? handleClickModalF : i === 3 ? handleClickModalB : i === 4 ? handleClickModalH : null
    }, prop.children));
  }))));
};
;// ./src/components/sections/header/header_menu/index.js

;// ./src/components/sections/header/header_phone/HeaderPhone.jsx
function HeaderPhone_typeof(o) { "@babel/helpers - typeof"; return HeaderPhone_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, HeaderPhone_typeof(o); }
function HeaderPhone_extends() { return HeaderPhone_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, HeaderPhone_extends.apply(null, arguments); }
function HeaderPhone_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ HeaderPhone_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == HeaderPhone_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(HeaderPhone_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function HeaderPhone_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function HeaderPhone_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { HeaderPhone_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { HeaderPhone_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function HeaderPhone_slicedToArray(r, e) { return HeaderPhone_arrayWithHoles(r) || HeaderPhone_iterableToArrayLimit(r, e) || HeaderPhone_unsupportedIterableToArray(r, e) || HeaderPhone_nonIterableRest(); }
function HeaderPhone_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function HeaderPhone_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return HeaderPhone_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? HeaderPhone_arrayLikeToArray(r, a) : void 0; } }
function HeaderPhone_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function HeaderPhone_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function HeaderPhone_arrayWithHoles(r) { if (Array.isArray(r)) return r; }










var HeaderPhone_delay = function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};
var HeaderPhone = function HeaderPhone(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var headerPhoneClass = classnames_default()("header".concat(queryNumber, "__phone"));
  var propsData = function propsData(props) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var propsAll = props;
    var spanPhone = (0,funcArrPhone/* default */.A)(props, index);
    spanPhone.length !== -1 ? spanPhone.map(function (value, i) {
      return propsAll.data[i].children = value;
    }) : null;
    return propsAll.data;
  };
  var _useState = (0,react.useState)(false),
    _useState2 = HeaderPhone_slicedToArray(_useState, 2),
    isHeaderPhone = _useState2[0],
    setIsHeaderPhone = _useState2[1];
  var headerLinkPhoneRef = (0,react.useRef)();
  var headerSpansPhoneRef = (0,react.useRef)((0,funcArrPhone/* default */.A)(props, 0).map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var classHeaderLinkPhone = classnames_default()("header".concat(queryNumber, "__link-phone"));
  var animationHeaderLinkPhoneIn = function animationHeaderLinkPhoneIn() {
    gsap/* default */.Ay.timeline().to(headerLinkPhoneRef.current, {
      right: 10,
      duration: 1.5,
      delay: 5
    }).to(headerLinkPhoneRef.current, {
      right: 5,
      duration: 0.2,
      delay: 0.2,
      onComplete: function onComplete() {
        setIsHeaderPhone(true);
      }
    });
  };
  var animationHeaderLinkPhoneOut = function animationHeaderLinkPhoneOut() {
    gsap/* default */.Ay.timeline().to(headerLinkPhoneRef.current, {
      right: -160,
      duration: 1.5,
      onComplete: function onComplete() {
        setIsHeaderPhone(false);
      }
    });
  };
  var animationHeaderSpanPhoneIn = function animationHeaderSpanPhoneIn(number) {
    gsap/* default */.Ay.timeline().to(headerSpansPhoneRef.current[number].current, {
      opacity: 0.8,
      scale: 1.1,
      fontStyle: 'normal',
      duration: 0.5
    }).to(headerSpansPhoneRef.current[number].current, {
      opacity: 1,
      scale: 1,
      duration: 0.5,
      delay: 0.2
    });
  };
  var animationHeaderSpanPhoneOut = function animationHeaderSpanPhoneOut(number) {
    gsap/* default */.Ay.timeline().to(headerSpansPhoneRef.current[number].current, {
      opacity: 0.6,
      scale: 0.9,
      fontStyle: 'italic',
      duration: 0.1,
      delay: 2
    });
  };
  var onPageLoad = /*#__PURE__*/function () {
    var _ref = HeaderPhone_asyncToGenerator(/*#__PURE__*/HeaderPhone_regeneratorRuntime().mark(function _callee() {
      var arr, i;
      return HeaderPhone_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            console.log('page loaded');
            animationHeaderLinkPhoneIn();
            arr = (0,funcArrPhone/* default */.A)(props, 0);
            _context.next = 5;
            return HeaderPhone_delay(7000);
          case 5:
            i = 0;
          case 6:
            if (!(i < arr.length)) {
              _context.next = 13;
              break;
            }
            _context.next = 9;
            return HeaderPhone_delay(200);
          case 9:
            animationHeaderSpanPhoneIn(i);
          case 10:
            i++;
            _context.next = 6;
            break;
          case 13:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function onPageLoad() {
      return _ref.apply(this, arguments);
    };
  }();
  (0,react.useEffect)(function () {
    if (document.readyState === 'complete') {
      onPageLoad();
    } else {
      window.addEventListener('load', onPageLoad, false);
      return function () {
        return window.removeEventListener('load', onPageLoad);
      };
    }
  }, []);
  (0,react.useEffect)(function () {
    if (!isHeaderPhone) {
      onPageLoad();
    } else {
      var timeout = setTimeout(function () {
        animationHeaderLinkPhoneOut();
        var arr = (0,funcArrPhone/* default */.A)(props, 0);
        for (var i = 0; i < arr.length; i++) {
          animationHeaderSpanPhoneOut(i);
        }
        clearTimeout(timeout);
      }, 20000);
    }
  }, [isHeaderPhone]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: headerPhoneClass
  }, /*#__PURE__*/react.createElement("a", {
    href: (0,funcHrefPhone/* default */.A)(props),
    className: classHeaderLinkPhone,
    ref: headerLinkPhoneRef
  }, propsData(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiSpan */.dF, HeaderPhone_extends({
      key: "uiSpanHeaderPhone".concat(i)
    }, prop, {
      ref: headerSpansPhoneRef.current[i]
    }));
  }))));
};
;// ./src/components/sections/header/header_phone/index.js

;// ./src/images/icon-header-phone-white.png
const icon_header_phone_white_namespaceObject = __webpack_require__.p + "images/icon-header-phone-white.78eee0d6b3f001eef3a7.png";
;// ./src/components/sections/header/header_phone_icon/header_phone_icon_img/HeaderPhoneIconImg.jsx
function HeaderPhoneIconImg_extends() { return HeaderPhoneIconImg_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, HeaderPhoneIconImg_extends.apply(null, arguments); }









var HeaderPhoneIconImg = function HeaderPhoneIconImg(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var burgerClass = classnames_default()("burger".concat(queryNumber));
  var burgerHeaderClass = classnames_default()("burger-header".concat(queryNumber));
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props, [icon_header_phone_white_namespaceObject]).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, HeaderPhoneIconImg_extends({
      key: "uiImgHeaderPhoneIconImg".concat(i)
    }, prop, {
      className: "".concat(burgerClass, " ").concat(burgerHeaderClass)
    }));
  }));
};
;// ./src/data/data_header/data_header_phone_icon/data_header_phone_icon_img/dataHeaderPhoneIconImg.json
const dataHeaderPhoneIconImg_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-icon-phone-img-0","className":"","children":""}]');
;// ./src/components/sections/header/header_phone_icon/HeaderPhoneIcon.jsx












var HeaderPhoneIcon_delay = function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};
var HeaderPhoneIcon = function HeaderPhoneIcon(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var headerPhoneClass = classnames_default()("header".concat(queryNumber, "__phone"));
  var headerLinkPhoneClass = classnames_default()("header".concat(queryNumber, "__link-phone"));
  var headerLinkPhoneRef = (0,react.useRef)();
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: headerPhoneClass
  }, /*#__PURE__*/react.createElement("a", {
    href: (0,funcHrefPhone/* default */.A)(props),
    className: headerLinkPhoneClass,
    ref: headerLinkPhoneRef,
    key: "uiLinkHeaderPhoneIcon0"
  }, /*#__PURE__*/react.createElement(HeaderPhoneIconImg, {
    data: dataHeaderPhoneIconImg_namespaceObject
  }))));
};
;// ./src/components/sections/header/header_phone_icon/index.js

;// ./src/components/sections/header/header_title/HeaderTitle.jsx









var HeaderTitle = function HeaderTitle(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var headerTitleClass = classnames_default()("header".concat(queryNumber, "__title"));
  var titleClass = classnames_default()("title".concat(queryNumber));
  var headerTitle = (0,react.useRef)(null);
  var animationHeaderTitle = function animationHeaderTitle() {
    gsap/* default */.Ay.timeline().to(headerTitle.current, {
      opacity: 0.5,
      blur: 2,
      scale: 1.03,
      duration: 0.5,
      delay: 2.2
    }).to(headerTitle.current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 0.5
    });
  };
  (0,react.useEffect)(function () {
    if (media1728 === true || media1300 === true || media1133 === true || media900 === true || media744 === true) animationHeaderTitle();
  }, []);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: headerTitleClass,
    ref: headerTitle
  }, /*#__PURE__*/react.createElement("h1", {
    id: "header-logo-title-0",
    style: props.position === 0 ? {
      cursor: 'text'
    } : {
      cursor: 'default'
    },
    className: titleClass
  }, "\u0410\u043F\u043F\u0430\u0440\u0430\u0442\u043D\u0430\u044F \u043A\u043E\u0440\u0440\u0435\u043A\u0446\u0438\u044F\xA0\u0444\u0438\u0433\u0443\u0440\u044B")));
};
;// ./src/components/sections/header/header_title/index.js

// EXTERNAL MODULE: ./src/components/modals/modal/modal_close/index.js + 2 modules
var modal_close = __webpack_require__(5662);
;// ./src/images/bg-header.png
const bg_header_namespaceObject = __webpack_require__.p + "images/bg-header.4d95f769f63d11f97eb8.png";
;// ./src/images/bg-header1300.png
const bg_header1300_namespaceObject = __webpack_require__.p + "images/bg-header1300.e4bdff060754ff77e0f3.png";
;// ./src/images/bg-header1133.png
const bg_header1133_namespaceObject = __webpack_require__.p + "images/bg-header1133.49bbc97f3f24f44432fc.png";
;// ./src/images/bg-header900.png
const bg_header900_namespaceObject = __webpack_require__.p + "images/bg-header900.1f1a8eb1b89a6708d060.png";
;// ./src/images/bg-header744.png
const bg_header744_namespaceObject = __webpack_require__.p + "images/bg-header744.fb7ea78a240619e52782.png";
;// ./src/images/bg-header600.png
const bg_header600_namespaceObject = __webpack_require__.p + "images/bg-header600.16cb2548cacd0dfcbc9d.png";
;// ./src/images/bg-header375.png
const bg_header375_namespaceObject = __webpack_require__.p + "images/bg-header375.6b5b698e0ddc4a87bb23.png";
;// ./src/images/bg-header275_60.png
const bg_header275_60_namespaceObject = __webpack_require__.p + "images/bg-header275_60.2a7a1f4551672e5ea6d4.png";
;// ./src/data/data_header/data_header_logo/dataHeaderLogo.json
const dataHeaderLogo_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-logo-link-0","href":"https://ivanays.github.io/","className":"header__link header__link-logo"}]');
;// ./src/data/data_header/data_header_title/dataHeaderTitle.json
const dataHeaderTitle_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-logo-title-0","children":"Аппаратная коррекция фигуры"}]');
;// ./src/data/data_header/data_header_menu/dataHeaderMenu.json
const dataHeaderMenu_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-menu-link-0","href":"#popup-g","dataBlock":"","children":"Выезд на дом"},{"id":"header-menu-link-1","href":"#","dataBlock":"#procedures","children":"Услуги"},{"id":"header-menu-link-2","href":"#popup-f","dataBlock":"","children":"Акции"},{"id":"header-menu-link-3","href":"#popup-b","dataBlock":"","children":"Окна"},{"id":"header-menu-link-4","href":"#popup-h","dataBlock":"","children":"Отзывы"}]');
;// ./src/data/data_header/data_header_burger/dataHeaderBurger.json
const dataHeaderBurger_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-burger-link-0"}]');
;// ./src/data/data_header/data_header_phone/dataHeaderPhone.json
const dataHeaderPhone_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"header-span-phone-0","className":"header__span header__span-block","children":""},{"id":"header-span-phone-1","className":"header__span","children":""},{"id":"header-span-phone-2","className":"header__span","children":""},{"id":"header-span-phone-3","className":"header__span header__span-block","children":""},{"id":"header-span-phone-4","className":"header__span","children":""},{"id":"header-span-phone-5","className":"header__span","children":""},{"id":"header-span-phone-6","className":"header__span header__span-block","children":""},{"id":"header-span-phone-7","className":"header__span","children":""},{"id":"header-span-phone-8","className":"header__span header__span-block","children":""},{"id":"header-span-phone-9","className":"header__span","children":""},{"id":"header-span-phone-10","className":"header__span header__span-block","children":""}]');
// EXTERNAL MODULE: ./src/data/data_modal/data_modal_close/dataModalClose.json
var dataModalClose = __webpack_require__(498);
;// ./src/components/sections/header/Header.jsx
function Header_slicedToArray(r, e) { return Header_arrayWithHoles(r) || Header_iterableToArrayLimit(r, e) || Header_unsupportedIterableToArray(r, e) || Header_nonIterableRest(); }
function Header_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function Header_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return Header_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Header_arrayLikeToArray(r, a) : void 0; } }
function Header_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function Header_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function Header_arrayWithHoles(r) { if (Array.isArray(r)) return r; }













var override = {
  display: 'block',
  margin: '0 auto'
};
var color = "#C975D8";

















var Header = function Header(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var headerClass = classnames_default()("header".concat(queryNumber));
  var headerInnerClass = classnames_default()("header".concat(queryNumber, "__inner"));
  var headerLeftClass = classnames_default()("header".concat(queryNumber, "__left"));
  var headerInnerLeftClass = classnames_default()("header".concat(queryNumber, "__inner-left"));
  var headerLineClass = classnames_default()("header".concat(queryNumber, "__line"));
  var headerRightClass = classnames_default()("header".concat(queryNumber, "__right"));
  var headerInnerRightClass = classnames_default()("header".concat(queryNumber, "__inner-right"));
  var containerClass = classnames_default()("container".concat(queryNumber));
  var blockClass = classnames_default()("block".concat(queryNumber));
  var blockLockClass = classnames_default()("block-lock".concat(queryNumber));
  var blockBodyClass = classnames_default()("block".concat(queryNumber, "__body"));
  var ref = (0,react.useRef)(null);
  var headerLeft = (0,react.useRef)(null);
  var _useState = (0,react.useState)(1728),
    _useState2 = Header_slicedToArray(_useState, 2),
    width = _useState2[0],
    setWidth = _useState2[1];
  var _useState3 = (0,react.useState)(140),
    _useState4 = Header_slicedToArray(_useState3, 2),
    height = _useState4[0],
    setHeight = _useState4[1];
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    modalOpened = _useContext.modalOpened,
    scrollbarWidthBody = _useContext.scrollbarWidthBody,
    isToggled = _useContext.isToggled,
    handleToggle = _useContext.handleToggle;
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling,
    isScrollingUp = _useScrollDirection.isScrollingUp,
    isScrollingDown = _useScrollDirection.isScrollingDown;
  var animateHeaderLeft = function animateHeaderLeft() {
    gsap/* default */.Ay.timeline().to(headerLeft.current, {
      opacity: 0,
      blur: 2,
      scale: 0
    }).to(headerLeft.current, {
      opacity: 1,
      blur: 0,
      scale: 1,
      duration: 2
    });
  };
  var _useState5 = (0,react.useState)(0),
    _useState6 = Header_slicedToArray(_useState5, 2),
    left = _useState6[0],
    setLeft = _useState6[1];
  var windowHeight = (0,hooks/* useWindowHeight */.xJ)();
  var windowWidth = (0,hooks/* useWindowWidth */.SO)();
  (0,react.useLayoutEffect)(function () {
    setWidth(ref.current.offsetWidth);
    setHeight(ref.current.offsetHeight);
  }, []);
  (0,react.useEffect)(function () {
    setLeft(0);
  }, []);
  (0,react.useEffect)(function () {
    setLeft((windowWidth - width) / 2);
  }, [isScrolling]);
  var state = {
    width: width,
    height: height
  };
  function loadCallback() {
    return props.callback(state);
  }
  (0,react.useEffect)(function () {
    loadCallback();
    if (media1728 === true || media1300 === true || media1133 === true || media900 || media744 === true) animateHeaderLeft();
  }, []);
  var loadedImageBg1728 = (0,hooks/* useLoadImageBg */.ws)(bg_header_namespaceObject);
  var loadedImageBg1300 = (0,hooks/* useLoadImageBg */.ws)(bg_header1300_namespaceObject);
  var loadedImageBg1133 = (0,hooks/* useLoadImageBg */.ws)(bg_header1133_namespaceObject);
  var loadedImageBg900 = (0,hooks/* useLoadImageBg */.ws)(bg_header900_namespaceObject);
  var loadedImageBg744 = (0,hooks/* useLoadImageBg */.ws)(bg_header744_namespaceObject);
  var loadedImageBg744l = (0,hooks/* useLoadImageBg */.ws)(bg_header744_namespaceObject);
  var loadedImageBg600 = (0,hooks/* useLoadImageBg */.ws)(bg_header600_namespaceObject);
  var loadedImageBg600l = (0,hooks/* useLoadImageBg */.ws)(bg_header600_namespaceObject);
  var loadedImageBg375 = (0,hooks/* useLoadImageBg */.ws)(bg_header375_namespaceObject);
  var loadedImageBg275 = (0,hooks/* useLoadImageBg */.ws)(bg_header275_60_namespaceObject);
  var loadedImageBg;
  media1728 ? loadedImageBg = loadedImageBg1728 : media1300 ? loadedImageBg = loadedImageBg1300 : media1133 ? loadedImageBg = loadedImageBg1133 : media900 ? loadedImageBg = loadedImageBg900 : media744 ? loadedImageBg = loadedImageBg744 : media744l ? loadedImageBg = loadedImageBg744l : media600 ? loadedImageBg = loadedImageBg600 : media600l ? loadedImageBg = loadedImageBg600l : media375 ? loadedImageBg = loadedImageBg375 : media275 ? loadedImageBg = loadedImageBg275 : null;
  var rightHeader = modalOpened ? "".concat(scrollbarWidthBody, "px") : '0px';
  var handleClose = function handleClose() {
    isToggled ? handleToggle() : null;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("header", {
    ref: ref,
    className: headerClass,
    style: {
      background: "url(".concat(loadedImageBg, "), linear-gradient(to bottom, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))"),
      right: rightHeader,
      zIndex: 99
    }
  }, /*#__PURE__*/react.createElement("div", {
    className: containerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: headerInnerClass
  }, /*#__PURE__*/react.createElement("div", {
    className: headerLeftClass,
    style: props.position === 0 ? {
      opacity: 1
    } : {
      opacity: 0
    },
    ref: headerLeft
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(headerInnerClass, " ").concat(headerInnerLeftClass)
  }, props.position === 0 ? /*#__PURE__*/react.createElement(HeaderLogo, {
    data: dataHeaderLogo_namespaceObject,
    position: props.position
  }) : null, props.position === 0 ? /*#__PURE__*/react.createElement(HeaderTitle, {
    data: dataHeaderTitle_namespaceObject,
    position: props.position
  }) : null), props.position === 0 ? /*#__PURE__*/react.createElement("div", {
    className: headerLineClass
  }) : null), /*#__PURE__*/react.createElement("div", {
    className: headerRightClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(headerInnerClass, " ").concat(headerInnerRightClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: isToggled ? blockClass : blockLockClass,
    onClick: handleClose,
    style: isToggled ? {
      position: 'fixed',
      width: "".concat(windowWidth, "px"),
      height: "".concat(windowHeight, "px"),
      left: "-".concat(left, "px"),
      top: '0px'
      // top: `${props.position}px`
    } : null
  }, /*#__PURE__*/react.createElement("div", {
    className: isToggled ? blockBodyClass : blockLockClass,
    onClick: function onClick(event) {
      return event.stopPropagation();
    }
  }, isToggled ? /*#__PURE__*/react.createElement(modal_close/* ModalClose */.O, {
    data: dataModalClose,
    handleClose: handleClose
  }) : null, /*#__PURE__*/react.createElement(HeaderMenu, {
    callback: loadCallback,
    scroll: props.scroll,
    data: dataHeaderMenu_namespaceObject
  }))), /*#__PURE__*/react.createElement(HeaderBurger, {
    data: dataHeaderBurger_namespaceObject
  }), media275 || media375 || media600 || media600l || media744 || media744l || media900 ? /*#__PURE__*/react.createElement(HeaderPhoneIcon, {
    dataPhone: dataPhone,
    data: dataHeaderPhone_namespaceObject
  }) : /*#__PURE__*/react.createElement(HeaderPhone, {
    dataPhone: dataPhone,
    data: dataHeaderPhone_namespaceObject
  })))))));
};
;// ./src/components/sections/header/index.js







;// ./src/components/sections/info/info_svg_230l/InfoSvg230l.jsx






var InfoSvg230l = function InfoSvg230l(_ref) {
  var idSvg = _ref.idSvg,
    xlinkHref = _ref.xlinkHref,
    idTitle1 = _ref.idTitle1,
    idText1 = _ref.idText1,
    idTitle2 = _ref.idTitle2,
    idText2 = _ref.idText2,
    childrenTitle1 = _ref.childrenTitle1,
    childrenText1 = _ref.childrenText1,
    childrenTitle2 = _ref.childrenTitle2,
    childrenText2 = _ref.childrenText2;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderSvgClass = classnames_default()("slider".concat(queryNumber, "__svg"));
  var sliderSvgInfoClass = classnames_default()("slider".concat(queryNumber, "__svg-info"));
  var sliderSvgTitleClass = classnames_default()("slider".concat(queryNumber, "__svg-title"));
  var sliderSvgTextClass = classnames_default()("slider".concat(queryNumber, "__svg-text"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("svg", {
    id: idSvg,
    className: "".concat(sliderSvgClass, " ").concat(sliderSvgInfoClass),
    x: "0",
    y: "0",
    width: "265",
    height: "177",
    viewBox: "0 0 265 177",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/react.createElement("g", {
    id: "\xD0\xB8\xD0\xBD\xD1\x84\xD0\xBE4-copy"
  }, /*#__PURE__*/react.createElement("path", {
    id: "Rectangle 142",
    d: "M42 11.5H233C243.77 11.5 252.5 20.2304 252.5 31V137C252.5 152.74 239.74 165.5 224 165.5H34C22.1259 165.5 12.5 155.874 12.5 144V41C12.5 24.7076 25.7076 11.5 42 11.5Z",
    fill: "url(#paint0_linear_1441_1571)",
    stroke: "url(#paint1_linear_1441_1571)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "Rectangle 100",
    x: "5.75",
    y: "5.75",
    width: "258.5",
    height: "170.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_1441_1571)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "Rectangle 102",
    x: "0.75",
    y: "0.75",
    width: "258.5",
    height: "170.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_1441_1571)",
    "stroke-width": "1.5"
  })), /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint0_linear_1441_1571",
    x1: "132.5",
    y1: "11",
    x2: "132.5",
    y2: "166",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    "stop-color": "#E8CCEE"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.387873",
    "stop-color": "#F0E1F4"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.490872",
    "stop-color": "#F2E7F6"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.599364",
    "stop-color": "#F0E1F3"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "1",
    "stop-color": "#E8CCEE"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint1_linear_1441_1571",
    x1: "-249.957",
    y1: "-160.882",
    x2: "195.424",
    y2: "406.063",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.684967",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.685008",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint2_linear_1441_1571",
    x1: "-277.609",
    y1: "-185.733",
    x2: "219.742",
    y2: "429.772",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.659701",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.660524",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint3_linear_1441_1571",
    x1: "-282.609",
    y1: "-190.733",
    x2: "214.742",
    y2: "424.772",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702083",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702183",
    "stop-color": "#831598"
  })))), /*#__PURE__*/react.createElement("use", {
    xlinkHref: xlinkHref,
    x: "0",
    y: "0",
    viewBox: "0 0 265 177"
  }), /*#__PURE__*/react.createElement("text", {
    id: idTitle1,
    textAnchor: "middle",
    x: "132",
    y: "55",
    className: sliderSvgTitleClass
  }, childrenTitle1), /*#__PURE__*/react.createElement("text", {
    id: idText1,
    textAnchor: "middle",
    x: "132",
    y: "78",
    className: sliderSvgTextClass
  }, childrenText1), /*#__PURE__*/react.createElement("text", {
    id: idTitle2,
    textAnchor: "middle",
    x: "132",
    y: "109",
    className: sliderSvgTitleClass
  }, childrenTitle2), /*#__PURE__*/react.createElement("text", {
    id: idText2,
    textAnchor: "middle",
    x: "132",
    y: "132",
    className: sliderSvgTextClass
  }, childrenText2)));
};
;// ./src/components/sections/info/info_svg_230l/index.js

;// ./src/func/func_random/func_random_int_from_interval/funcRandomIntFromInterval.js
var funcRandomIntFromInterval = function funcRandomIntFromInterval(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
};
;// ./src/components/sections/info/info_svg_330/info_svg_330_group_0/InfoSvg330Group0.jsx
function InfoSvg330Group0_slicedToArray(r, e) { return InfoSvg330Group0_arrayWithHoles(r) || InfoSvg330Group0_iterableToArrayLimit(r, e) || InfoSvg330Group0_unsupportedIterableToArray(r, e) || InfoSvg330Group0_nonIterableRest(); }
function InfoSvg330Group0_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg330Group0_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg330Group0_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg330Group0_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg330Group0_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg330Group0_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg330Group0_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg330Group0 = function InfoSvg330Group0() {
  var minXY = 0.75;
  var maxX = 14.25;
  var maxY = 12.12;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg330Group0_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg330Group0_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-0"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-1",
    d: "M54 29.5H292C295.038 29.5 297.5 31.9624 297.5 35V169C297.5 180.874 287.874 190.5 276 190.5H38C34.9624 190.5 32.5 188.038 32.5 185V51C32.5 39.1259 42.1259 29.5 54 29.5Z",
    fill: "url(#paint0_linear_1325_1581)",
    stroke: "url(#paint1_linear_1325_1581)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-1",
    x: "14.25",
    y: "12.1289",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint2_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-1",
    x: "0.75",
    y: "0.75",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint3_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle1",
    d: "M-110,-30 L -110,-86 C -110,-86 -110,-92 -116,-92 L -353,-92 C -353,-92 -375,-92 -375,-70",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle2",
    d: "M-60,-70 L -184,-70 C -184,-70 -190,-70 -190,-76 L -190,-209 C -190,-209 -190,-231 -168,-231.5",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-1",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-1",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "0s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-1",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-1",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-1",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-1",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "0s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-1-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-1",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    dur: "8.5s",
    id: "circle2-1-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-1",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-1-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-1",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-1",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-1-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-1",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-1",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-1-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title1-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text1-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title1-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title1-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text1-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text1-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_330/info_svg_330_group_0/index.js

;// ./src/components/sections/info/info_svg_330/info_svg_330_group_1/InfoSvg330Group1.jsx
function InfoSvg330Group1_slicedToArray(r, e) { return InfoSvg330Group1_arrayWithHoles(r) || InfoSvg330Group1_iterableToArrayLimit(r, e) || InfoSvg330Group1_unsupportedIterableToArray(r, e) || InfoSvg330Group1_nonIterableRest(); }
function InfoSvg330Group1_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg330Group1_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg330Group1_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg330Group1_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg330Group1_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg330Group1_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg330Group1_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg330Group1 = function InfoSvg330Group1() {
  var minXY = 0.75;
  var maxX = 14.25;
  var maxY = 12.12;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg330Group1_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg330Group1_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-1"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-1",
    d: "M54 29.5H292C295.038 29.5 297.5 31.9624 297.5 35V169C297.5 180.874 287.874 190.5 276 190.5H38C34.9624 190.5 32.5 188.038 32.5 185V51C32.5 39.1259 42.1259 29.5 54 29.5Z",
    fill: "url(#paint0_linear_1325_1581)",
    stroke: "url(#paint1_linear_1325_1581)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-2",
    x: "14.25",
    y: "12.1289",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint2_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-2",
    x: "0.75",
    y: "0.75",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint3_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-2",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-2",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "3s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-2",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-2",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-2",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-2",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "3s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-2",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-2",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-2",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-2",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-2-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-2",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-2",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-2-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title2-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text2-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title2-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title2-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text2-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text2-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_330/info_svg_330_group_1/index.js

;// ./src/components/sections/info/info_svg_330/info_svg_330_group_2/InfoSvg330Group2.jsx
function InfoSvg330Group2_slicedToArray(r, e) { return InfoSvg330Group2_arrayWithHoles(r) || InfoSvg330Group2_iterableToArrayLimit(r, e) || InfoSvg330Group2_unsupportedIterableToArray(r, e) || InfoSvg330Group2_nonIterableRest(); }
function InfoSvg330Group2_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg330Group2_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg330Group2_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg330Group2_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg330Group2_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg330Group2_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg330Group2_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg330Group2 = function InfoSvg330Group2() {
  var minXY = 0.75;
  var maxX = 14.25;
  var maxY = 12.12;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg330Group2_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg330Group2_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-2"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-1",
    d: "M54 29.5H292C295.038 29.5 297.5 31.9624 297.5 35V169C297.5 180.874 287.874 190.5 276 190.5H38C34.9624 190.5 32.5 188.038 32.5 185V51C32.5 39.1259 42.1259 29.5 54 29.5Z",
    fill: "url(#paint0_linear_1325_1581)",
    stroke: "url(#paint1_linear_1325_1581)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-3",
    x: "14.25",
    y: "12.1289",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint2_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-3",
    x: "0.75",
    y: "0.75",
    width: "315",
    height: "207.121",
    rx: "34.25",
    stroke: "url(#paint3_linear_1325_1581)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-3",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-3",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "6s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-3",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-3",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-3",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-3",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "6s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-3",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-3",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-3",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-3-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-3",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-3-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-3",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-3-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-3",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-3-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title3-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title3-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text3-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text3-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title3-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title3-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text3-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text3-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_330/info_svg_330_group_2/index.js

;// ./src/components/sections/info/info_svg_330/InfoSvg330.jsx









var InfoSvg330 = function InfoSvg330(_ref) {
  var idSvg = _ref.idSvg,
    xlinkHref = _ref.xlinkHref,
    idTitle1 = _ref.idTitle1,
    idText1 = _ref.idText1,
    idTitle2 = _ref.idTitle2,
    idText2 = _ref.idText2,
    childrenTitle1 = _ref.childrenTitle1,
    childrenText1 = _ref.childrenText1,
    childrenTitle2 = _ref.childrenTitle2,
    childrenText2 = _ref.childrenText2;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderSvgClass = classnames_default()("slider".concat(queryNumber, "__svg"));
  var sliderSvgInfoClass = classnames_default()("slider".concat(queryNumber, "__svg-info"));
  var sliderSvgTitleClass = classnames_default()("slider".concat(queryNumber, "__svg-title"));
  var sliderSvgTextClass = classnames_default()("slider".concat(queryNumber, "__svg-text"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("svg", {
    id: idSvg,
    className: "".concat(sliderSvgClass, " ").concat(sliderSvgInfoClass),
    x: "0",
    y: "0",
    width: "330",
    height: "220",
    viewBox: "0 0 330 220",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/react.createElement(react.Fragment, null, idSvg === "info-svg-0" ? /*#__PURE__*/react.createElement(InfoSvg330Group0, null) : null, idSvg === "info-svg-1" ? /*#__PURE__*/react.createElement(InfoSvg330Group1, null) : null, idSvg === "info-svg-2" ? /*#__PURE__*/react.createElement(InfoSvg330Group2, null) : null), /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint0_linear_1325_1581",
    x1: "165",
    y1: "29",
    x2: "165",
    y2: "191",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    "stop-color": "#E8CCEE"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.387873",
    "stop-color": "#F0E1F4"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.490872",
    "stop-color": "#F2E7F6"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.599364",
    "stop-color": "#F0E1F3"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "1",
    "stop-color": "#E8CCEE"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint1_linear_1325_1581",
    x1: "-257.13",
    y1: "-150.644",
    x2: "201.755",
    y2: "466.228",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.684967",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.685008",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint2_linear_1325_1581",
    x1: "-330.522",
    y1: "-219.964",
    x2: "272.259",
    y2: "528.722",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.659701",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.660524",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint3_linear_1325_1581",
    x1: "-344.022",
    y1: "-231.342",
    x2: "258.759",
    y2: "517.343",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702083",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702183",
    "stop-color": "#831598"
  }))), /*#__PURE__*/react.createElement("use", {
    xlinkHref: xlinkHref,
    x: "0",
    y: "0",
    viewBox: "0 0 330 220"
  }), /*#__PURE__*/react.createElement("text", {
    id: idTitle1,
    textAnchor: "middle",
    x: "169",
    y: "72",
    className: sliderSvgTitleClass
  }, childrenTitle1), /*#__PURE__*/react.createElement("text", {
    id: idText1,
    textAnchor: "middle",
    x: "169",
    y: "95",
    className: sliderSvgTextClass
  }, childrenText1), /*#__PURE__*/react.createElement("text", {
    id: idTitle2,
    textAnchor: "middle",
    x: "169",
    y: "134",
    className: sliderSvgTitleClass
  }, childrenTitle2), /*#__PURE__*/react.createElement("text", {
    id: idText2,
    textAnchor: "middle",
    x: "169",
    y: "157",
    className: sliderSvgTextClass
  }, childrenText2)));
};
;// ./src/components/sections/info/info_svg_330/index.js

;// ./src/components/sections/info/info_svg_330l/InfoSvg330l.jsx






var InfoSvg330l = function InfoSvg330l(_ref) {
  var idSvg = _ref.idSvg,
    xlinkHref = _ref.xlinkHref,
    idTitle1 = _ref.idTitle1,
    idText1 = _ref.idText1,
    idTitle2 = _ref.idTitle2,
    idText2 = _ref.idText2,
    childrenTitle1 = _ref.childrenTitle1,
    childrenText1 = _ref.childrenText1,
    childrenTitle2 = _ref.childrenTitle2,
    childrenText2 = _ref.childrenText2;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderSvgClass = classnames_default()("slider".concat(queryNumber, "__svg"));
  var sliderSvgInfoClass = classnames_default()("slider".concat(queryNumber, "__svg-info"));
  var sliderSvgTitleClass = classnames_default()("slider".concat(queryNumber, "__svg-title"));
  var sliderSvgTextClass = classnames_default()("slider".concat(queryNumber, "__svg-text"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("svg", {
    id: idSvg,
    className: "".concat(sliderSvgClass, " ").concat(sliderSvgInfoClass),
    x: "0",
    y: "0",
    width: "330",
    height: "220",
    viewBox: "0 0 330 220",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/react.createElement("g", {
    id: "\xD0\xB8\xD0\xBD\xD1\x84\xD0\xBE5-copy"
  }, /*#__PURE__*/react.createElement("path", {
    id: "Rectangle 142",
    d: "M42 13.5H294C306.426 13.5 316.5 23.5736 316.5 36V178C316.5 193.188 304.188 205.5 289 205.5H34C22.6782 205.5 13.5 196.322 13.5 185V42C13.5 26.2599 26.2599 13.5 42 13.5Z",
    fill: "url(#paint0_linear_1442_1571)",
    stroke: "url(#paint1_linear_1442_1571)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "Rectangle 100",
    x: "6.75",
    y: "5.75",
    width: "322.5",
    height: "213.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_1442_1571)",
    "stroke-width": "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "Rectangle 102",
    x: "0.75",
    y: "0.75",
    width: "322.5",
    height: "212.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_1442_1571)",
    "stroke-width": "1.5"
  })), /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint0_linear_1442_1571",
    x1: "165",
    y1: "13",
    x2: "165",
    y2: "206",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    "stop-color": "#E8CCEE"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.387873",
    "stop-color": "#F0E1F4"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.490872",
    "stop-color": "#F2E7F6"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.599364",
    "stop-color": "#F0E1F3"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "1",
    "stop-color": "#E8CCEE"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint1_linear_1442_1571",
    x1: "-317.435",
    y1: "-201.02",
    x2: "235.393",
    y2: "511.882",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.684967",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.685008",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint2_linear_1442_1571",
    x1: "-346.174",
    y1: "-233.417",
    x2: "275.914",
    y2: "534.09",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.659701",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.660524",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint3_linear_1442_1571",
    x1: "-352.174",
    y1: "-237.308",
    x2: "266.417",
    y2: "529.451",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702083",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702183",
    "stop-color": "#831598"
  }))), /*#__PURE__*/react.createElement("use", {
    xlinkHref: xlinkHref,
    x: "0",
    y: "0",
    viewBox: "0 0 330 220"
  }), /*#__PURE__*/react.createElement("text", {
    id: idTitle1,
    textAnchor: "middle",
    x: "169",
    y: "72",
    className: sliderSvgTitleClass
  }, childrenTitle1), /*#__PURE__*/react.createElement("text", {
    id: idText1,
    textAnchor: "middle",
    x: "169",
    y: "95",
    className: sliderSvgTextClass
  }, childrenText1), /*#__PURE__*/react.createElement("text", {
    id: idTitle2,
    textAnchor: "middle",
    x: "169",
    y: "134",
    className: sliderSvgTitleClass
  }, childrenTitle2), /*#__PURE__*/react.createElement("text", {
    id: idText2,
    textAnchor: "middle",
    x: "169",
    y: "157",
    className: sliderSvgTextClass
  }, childrenText2)));
};
;// ./src/components/sections/info/info_svg_330l/index.js

;// ./src/components/sections/info/info_svg_440/info_svg_440_group_0/InfoSvg440Group0.jsx
function InfoSvg440Group0_slicedToArray(r, e) { return InfoSvg440Group0_arrayWithHoles(r) || InfoSvg440Group0_iterableToArrayLimit(r, e) || InfoSvg440Group0_unsupportedIterableToArray(r, e) || InfoSvg440Group0_nonIterableRest(); }
function InfoSvg440Group0_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg440Group0_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg440Group0_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg440Group0_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg440Group0_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg440Group0_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg440Group0_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg440Group0 = function InfoSvg440Group0() {
  var minXY = 0.75;
  var maxX = 18.75;
  var maxY = 15.75;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg440Group0_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg440Group0_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-0"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-1",
    d: "M32.5 51C32.5 39.1259 42.1259 29.5 54 29.5H402C405.038 29.5 407.5 31.9624 407.5 35V239C407.5 250.874 397.874 260.5 386 260.5H38C34.9624 260.5 32.5 258.038 32.5 255V51Z",
    fill: "url(#paint0_linear_167_1734)",
    stroke: "url(#paint1_linear_167_1734)"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle1",
    d: "M0,0 L 0,-86 C 0,-86 0,-92 -6,-92 L -353,-92 C -353,-92 -375,-92 -375,-70",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle2",
    d: "M0,0 L -184,0 C -184,0 -190,0 -190,-6 L -190,-209 C -190,-209 -190,-231 -168,-231.5",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-1",
    x: "18.75",
    y: "15.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-1",
    x: "0.75",
    y: "0.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-1",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-1",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "0s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-1",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-1",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-1-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-1",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-1",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "0s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-1-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-1",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    dur: "8.5s",
    id: "circle2-1-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-1",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-1-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-1",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-1",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-1-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-1",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-1",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "10s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-1-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title1-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text1-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text1-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title1-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title1-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text1-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "8.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text1-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_440/info_svg_440_group_0/index.js

;// ./src/components/sections/info/info_svg_440/info_svg_440_group_1/InfoSvg440Group1.jsx
function InfoSvg440Group1_slicedToArray(r, e) { return InfoSvg440Group1_arrayWithHoles(r) || InfoSvg440Group1_iterableToArrayLimit(r, e) || InfoSvg440Group1_unsupportedIterableToArray(r, e) || InfoSvg440Group1_nonIterableRest(); }
function InfoSvg440Group1_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg440Group1_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg440Group1_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg440Group1_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg440Group1_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg440Group1_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg440Group1_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg440Group1 = function InfoSvg440Group1() {
  var minXY = 0.75;
  var maxX = 18.75;
  var maxY = 15.75;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg440Group1_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg440Group1_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-1"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-2",
    d: "M32.5 51C32.5 39.1259 42.1259 29.5 54 29.5H402C405.038 29.5 407.5 31.9624 407.5 35V239C407.5 250.874 397.874 260.5 386 260.5H38C34.9624 260.5 32.5 258.038 32.5 255V51Z",
    fill: "url(#paint0_linear_167_1734)",
    stroke: "url(#paint1_linear_167_1734)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-2",
    x: "18.75",
    y: "15.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-2",
    x: "0.75",
    y: "0.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-2",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-2",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "3s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-2",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-2",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-2-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-2",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-2",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "3s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-2",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-2",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "3s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-2-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-2",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-2",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-2-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-2",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-2",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "11s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-2-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title2-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text2-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text2-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title2-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title2-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text2-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "8.5s",
    begin: "11.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text2-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_440/info_svg_440_group_1/index.js

;// ./src/components/sections/info/info_svg_440/info_svg_440_group_2/InfoSvg440Group2.jsx
function InfoSvg440Group2_slicedToArray(r, e) { return InfoSvg440Group2_arrayWithHoles(r) || InfoSvg440Group2_iterableToArrayLimit(r, e) || InfoSvg440Group2_unsupportedIterableToArray(r, e) || InfoSvg440Group2_nonIterableRest(); }
function InfoSvg440Group2_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function InfoSvg440Group2_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return InfoSvg440Group2_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? InfoSvg440Group2_arrayLikeToArray(r, a) : void 0; } }
function InfoSvg440Group2_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function InfoSvg440Group2_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function InfoSvg440Group2_arrayWithHoles(r) { if (Array.isArray(r)) return r; }



var InfoSvg440Group2 = function InfoSvg440Group2() {
  var minXY = 0.75;
  var maxX = 18.75;
  var maxY = 15.75;
  var _useState = (0,react.useState)(),
    _useState2 = InfoSvg440Group2_slicedToArray(_useState, 2),
    randomX = _useState2[0],
    setRandomX = _useState2[1];
  var _useState3 = (0,react.useState)(),
    _useState4 = InfoSvg440Group2_slicedToArray(_useState3, 2),
    randomY = _useState4[0],
    setRandomY = _useState4[1];
  var setRandomXY = function setRandomXY() {
    var x = funcRandomIntFromInterval(minXY, maxX);
    var y = funcRandomIntFromInterval(minXY, maxY);
    setRandomX(x);
    setRandomY(y);
  };
  (0,react.useEffect)(function () {
    setRandomXY();
  }, []);
  (0,react.useEffect)(function () {
    var interval = setInterval(function () {
      setRandomXY();
    }, 10000);
    return function () {
      clearInterval(interval);
    };
  }, [randomX, randomY]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-2"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-3",
    d: "M32.5 51C32.5 39.1259 42.1259 29.5 54 29.5H402C405.038 29.5 407.5 31.9624 407.5 35V239C407.5 250.874 397.874 260.5 386 260.5H38C34.9624 260.5 32.5 258.038 32.5 255V51Z",
    fill: "url(#paint0_linear_167_1734)",
    stroke: "url(#paint1_linear_167_1734)"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-3",
    x: "18.75",
    y: "15.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-3",
    x: "0.75",
    y: "0.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle1-3",
    cx: "407",
    cy: "121",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle1-3",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "6s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle1"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-3",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle1-3",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle1-3-animfill"
  }), /*#__PURE__*/react.createElement("circle", {
    id: "circle2-3",
    cx: "222",
    cy: "260",
    r: "0.5",
    fill: "#841799",
    stroke: "#841799",
    strokeWidth: "0.5"
  }), /*#__PURE__*/react.createElement("animateMotion", {
    xlinkHref: "#circle2-3",
    dur: "8.5s",
    repeatCount: "indefinite",
    begin: "6s",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animpath"
  }, /*#__PURE__*/react.createElement("mpath", {
    xlinkHref: "#path-circle2"
  })), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-3",
    attributeType: "XML",
    attributeName: "r",
    keyTimes: "0; 0.1; 0.95; 0.96; 0.97; 1",
    values: "0.5; 2; 2; 10; 0.1; 0.1",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animr"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#circle2-3",
    attributeType: "XML",
    attributeName: "fill",
    from: "#841799",
    to: "#fff",
    dur: "8.5s",
    begin: "6s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "circle2-3-animfill"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-3",
    attributeType: "XML",
    attributeName: "x",
    from: "18.75",
    to: "18.75",
    values: "".concat(maxX, "; ").concat(randomX, "; ").concat(maxX),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-3-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect1-3",
    attributeType: "XML",
    attributeName: "y",
    from: "15.75",
    to: "15.75",
    values: "".concat(maxY, "; ").concat(randomY, "; ").concat(maxY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect1-3-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-3",
    attributeType: "XML",
    attributeName: "x",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomX, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-3-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#rect2-3",
    attributeType: "XML",
    attributeName: "y",
    from: "0.75",
    to: "0.75",
    values: "".concat(minXY, "; ").concat(randomY, "; ").concat(minXY),
    keyTimes: "0; 0.5; 1",
    keySplines: ".42 0 1 1; 0 0 .59 1;",
    dur: "12s",
    begin: "0s",
    repeatCount: "indefinite",
    fill: "freeze",
    restart: "whenNotActive",
    id: "rect2-3-animy"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title3-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 226; 216; 224; 218; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title3-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text3-1r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 218; 220; 222; 224; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text3-1-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#title3-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 222; 224; 226; 228; 230; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "title3-2-animx"
  }), /*#__PURE__*/react.createElement("animate", {
    xlinkHref: "#text3-2r",
    attributeType: "XML",
    attributeName: "x",
    keyTime: "0; 0.01; 0.02; 0.03; 0.04; 0.05; 0.06; 1",
    values: "220; 214; 216; 218; 220; 222; 220; 220",
    dur: "14.5s",
    begin: "8.5s",
    repeatCount: "indefinite",
    fill: "remove",
    restart: "whenNotActive",
    id: "text3-2-animx"
  })));
};
;// ./src/components/sections/info/info_svg_440/info_svg_440_group_2/index.js

;// ./src/components/sections/info/info_svg_440/InfoSvg440.jsx









var InfoSvg440 = function InfoSvg440(_ref) {
  var idSvg = _ref.idSvg,
    xlinkHref = _ref.xlinkHref,
    idTitle1 = _ref.idTitle1,
    idText1 = _ref.idText1,
    idTitle2 = _ref.idTitle2,
    idText2 = _ref.idText2,
    childrenTitle1 = _ref.childrenTitle1,
    childrenText1 = _ref.childrenText1,
    childrenTitle2 = _ref.childrenTitle2,
    childrenText2 = _ref.childrenText2;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderSvgClass = classnames_default()("slider".concat(queryNumber, "__svg"));
  var sliderSvgInfoClass = classnames_default()("slider".concat(queryNumber, "__svg-info"));
  var sliderSvgTitleClass = classnames_default()("slider".concat(queryNumber, "__svg-title"));
  var sliderSvgTextClass = classnames_default()("slider".concat(queryNumber, "__svg-text"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("svg", {
    id: idSvg,
    className: "".concat(sliderSvgClass, " ").concat(sliderSvgInfoClass),
    x: "0",
    y: "0",
    width: "440",
    height: "290",
    viewBox: "0 0 440 290",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none"
  }, /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement(react.Fragment, null, idSvg === "info-svg-0" ? /*#__PURE__*/react.createElement(InfoSvg440Group0, null) : null, idSvg === "info-svg-1" ? /*#__PURE__*/react.createElement(InfoSvg440Group1, null) : null, idSvg === "info-svg-2" ? /*#__PURE__*/react.createElement(InfoSvg440Group2, null) : null), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint0_linear_167_1734",
    x1: "220",
    y1: "29",
    x2: "220",
    y2: "261",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    stopColor: "#E8CCEE"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.387873",
    "stop-color": "#F0E1F4"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.490872",
    "stop-color": "#F2E7F6"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.599364",
    "stop-color": "#F0E1F3"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "1",
    "stop-color": "#E8CCEE"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint1_linear_167_1734",
    x1: "-376.696",
    y1: "-228.268",
    x2: "282.892",
    y2: "646.91",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.684967",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.685008",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint2_linear_167_1734",
    x1: "-440.696",
    y1: "-289.951",
    x2: "351.893",
    y2: "705.801",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.659701",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.660524",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint3_linear_167_1734",
    x1: "-458.696",
    y1: "-304.951",
    x2: "333.893",
    y2: "690.801",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702083",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702183",
    "stop-color": "#831598"
  }))), /*#__PURE__*/react.createElement("use", {
    xlinkHref: xlinkHref,
    x: "0",
    y: "0",
    viewBox: "0 0 440 290"
  }), /*#__PURE__*/react.createElement("text", {
    id: idTitle1,
    textAnchor: "middle",
    x: "220",
    y: "94",
    className: sliderSvgTitleClass
  }, childrenTitle1), /*#__PURE__*/react.createElement("text", {
    id: idText1,
    textAnchor: "middle",
    x: "220",
    y: "124",
    className: sliderSvgTextClass
  }, childrenText1), /*#__PURE__*/react.createElement("text", {
    id: idTitle2,
    textAnchor: "middle",
    x: "220",
    y: "174",
    className: sliderSvgTitleClass
  }, childrenTitle2), /*#__PURE__*/react.createElement("text", {
    id: idText2,
    textAnchor: "middle",
    x: "220",
    y: "204",
    className: sliderSvgTextClass
  }, childrenText2)));
};
;// ./src/components/sections/info/info_svg_440/index.js

;// ./src/components/sections/info/info_svg_440l/InfoSvg440l.jsx






var InfoSvg440l = function InfoSvg440l(_ref) {
  var idSvg = _ref.idSvg,
    xlinkHref = _ref.xlinkHref,
    idTitle1 = _ref.idTitle1,
    idText1 = _ref.idText1,
    idTitle2 = _ref.idTitle2,
    idText2 = _ref.idText2,
    childrenTitle1 = _ref.childrenTitle1,
    childrenText1 = _ref.childrenText1,
    childrenTitle2 = _ref.childrenTitle2,
    childrenText2 = _ref.childrenText2;
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var sliderSvgClass = classnames_default()("slider".concat(queryNumber, "__svg"));
  var sliderSvgInfoClass = classnames_default()("slider".concat(queryNumber, "__svg-info"));
  var sliderSvgTitleClass = classnames_default()("slider".concat(queryNumber, "__svg-title"));
  var sliderSvgTextClass = classnames_default()("slider".concat(queryNumber, "__svg-text"));
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("svg", {
    id: idSvg,
    className: "".concat(sliderSvgClass, " ").concat(sliderSvgInfoClass),
    x: "0",
    y: "0",
    width: "440",
    height: "290",
    viewBox: "0 0 440 290",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none"
  }, /*#__PURE__*/react.createElement("g", {
    id: "svg-group-0"
  }, /*#__PURE__*/react.createElement("path", {
    id: "path1-1",
    d: "M32.5 51C32.5 39.1259 42.1259 29.5 54 29.5H402C405.038 29.5 407.5 31.9624 407.5 35V239C407.5 250.874 397.874 260.5 386 260.5H38C34.9624 260.5 32.5 258.038 32.5 255V51Z",
    fill: "url(#paint0_linear_167_1734)",
    stroke: "url(#paint1_linear_167_1734)"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle1",
    d: "M0,0 L 0,-86 C 0,-86 0,-92 -6,-92 L -353,-92 C -353,-92 -375,-92 -375,-70",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("path", {
    id: "path-circle2",
    d: "M0,0 L -184,0 C -184,0 -190,0 -190,-6 L -190,-209 C -190,-209 -190,-231 -168,-231.5",
    fill: "none",
    stroke: "none"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect1-1",
    x: "18.75",
    y: "15.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint2_linear_167_1734)",
    strokeWidth: "1.5"
  }), /*#__PURE__*/react.createElement("rect", {
    id: "rect2-1",
    x: "0.75",
    y: "0.75",
    width: "420.5",
    height: "273.5",
    rx: "34.25",
    stroke: "url(#paint3_linear_167_1734)",
    strokeWidth: "1.5"
  })), /*#__PURE__*/react.createElement("defs", null, /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint0_linear_167_1734",
    x1: "220",
    y1: "29",
    x2: "220",
    y2: "261",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    stopColor: "#E8CCEE"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.387873",
    "stop-color": "#F0E1F4"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.490872",
    "stop-color": "#F2E7F6"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.599364",
    "stop-color": "#F0E1F3"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "1",
    "stop-color": "#E8CCEE"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint1_linear_167_1734",
    x1: "-376.696",
    y1: "-228.268",
    x2: "282.892",
    y2: "646.91",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.684967",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.685008",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint2_linear_167_1734",
    x1: "-440.696",
    y1: "-289.951",
    x2: "351.893",
    y2: "705.801",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.659701",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.660524",
    "stop-color": "#831598"
  })), /*#__PURE__*/react.createElement("linearGradient", {
    id: "paint3_linear_167_1734",
    x1: "-458.696",
    y1: "-304.951",
    x2: "333.893",
    y2: "690.801",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react.createElement("stop", {
    offset: "0.461286",
    "stop-color": "#841799"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702083",
    "stop-color": "#831598",
    "stop-opacity": "0"
  }), /*#__PURE__*/react.createElement("stop", {
    offset: "0.702183",
    "stop-color": "#831598"
  }))), /*#__PURE__*/react.createElement("use", {
    xlinkHref: xlinkHref,
    x: "0",
    y: "0",
    viewBox: "0 0 440 290"
  }), /*#__PURE__*/react.createElement("text", {
    id: idTitle1,
    textAnchor: "middle",
    x: "220",
    y: "94",
    className: sliderSvgTitleClass
  }, childrenTitle1), /*#__PURE__*/react.createElement("text", {
    id: idText1,
    textAnchor: "middle",
    x: "220",
    y: "124",
    className: sliderSvgTextClass
  }, childrenText1), /*#__PURE__*/react.createElement("text", {
    id: idTitle2,
    textAnchor: "middle",
    x: "220",
    y: "174",
    className: sliderSvgTitleClass
  }, childrenTitle2), /*#__PURE__*/react.createElement("text", {
    id: idText2,
    textAnchor: "middle",
    x: "220",
    y: "204",
    className: sliderSvgTextClass
  }, childrenText2)));
};
;// ./src/components/sections/info/info_svg_440l/index.js

;// ./src/components/sections/info/Info.jsx
function Info_extends() { return Info_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Info_extends.apply(null, arguments); }
function Info_slicedToArray(r, e) { return Info_arrayWithHoles(r) || Info_iterableToArrayLimit(r, e) || Info_unsupportedIterableToArray(r, e) || Info_nonIterableRest(); }
function Info_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function Info_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return Info_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Info_arrayLikeToArray(r, a) : void 0; } }
function Info_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function Info_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function Info_arrayWithHoles(r) { if (Array.isArray(r)) return r; }














var Info = function Info(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var infoClass = classnames_default()("info".concat(queryNumber));
  var containerClass = classnames_default()("container".concat(queryNumber));
  var containerInfoClass = classnames_default()("container".concat(queryNumber, "-info"));
  var infoSliderClass = classnames_default()("info".concat(queryNumber, "__slider"));
  var sliderClass = classnames_default()("slider".concat(queryNumber));
  var sliderInfoClass = classnames_default()("slider".concat(queryNumber, "-info"));
  var sliderItemsClass = classnames_default()("slider".concat(queryNumber, "__items"));
  var sliderItemsInfoClass = classnames_default()("slider".concat(queryNumber, "__items-info"));
  var sliderItemClass = classnames_default()("slider".concat(queryNumber, "__item"));
  var sliderItemInfoClass = classnames_default()("slider".concat(queryNumber, "__item-info"));
  var sliderInnerClass = classnames_default()("slider".concat(queryNumber, "__inner"));
  var sliderInfoInnerClass = classnames_default()("slider".concat(queryNumber, "-info__inner"));
  var sliderSlideClass = classnames_default()("slider".concat(queryNumber, "__slide"));
  var sliderSlideInfoClass = classnames_default()("slider".concat(queryNumber, "__slide-info"));
  var sliderLinkClass = classnames_default()("slider".concat(queryNumber, "__link"));
  var sliderLinkInfoClass = classnames_default()("slider".concat(queryNumber, "__link-info"));
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling;
  var slidesInfoRef = (0,react.useRef)([0, 1, 2].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var _useState = (0,react.useState)(true),
    _useState2 = Info_slicedToArray(_useState, 2),
    isSlideInfo1 = _useState2[0],
    setIsSlideInfo1 = _useState2[1];
  var _useState3 = (0,react.useState)(true),
    _useState4 = Info_slicedToArray(_useState3, 2),
    isSlideInfo2 = _useState4[0],
    setIsSlideInfo2 = _useState4[1];
  var _useState5 = (0,react.useState)(true),
    _useState6 = Info_slicedToArray(_useState5, 2),
    isSlideInfo3 = _useState6[0],
    setIsSlideInfo3 = _useState6[1];
  var animationScaleY = function animationScaleY(current, opacity, duration) {
    gsap/* default */.Ay.timeline().to(current, {
      opacity: opacity,
      duration: duration
    });
  };
  (0,react.useLayoutEffect)(function () {
    if (media744l === true || media600 === true || media600l === true || media375 === true || media275 === true) return;
    var headerHeight = 120;
    var handleScroll = function handleScroll() {
      if (slidesInfoRef.current[0].current.getBoundingClientRect().top < headerHeight - 20 && props.bottom === false) {
        isSlideInfo1 === true ? animationScaleY(slidesInfoRef.current[0].current, 0.2, 0.2) : null;
        setIsSlideInfo1(false);
      } else {
        isSlideInfo1 === false ? animationScaleY(slidesInfoRef.current[0].current, 1, 0.2) : null;
        setIsSlideInfo1(true);
      }
      if (slidesInfoRef.current[1].current.getBoundingClientRect().top < headerHeight - 20 && props.bottom === false) {
        isSlideInfo2 === true ? animationScaleY(slidesInfoRef.current[1].current, 0.2, 0.2) : null;
        setIsSlideInfo2(false);
      } else {
        isSlideInfo2 === false ? animationScaleY(slidesInfoRef.current[1].current, 1, 0.2) : null;
        setIsSlideInfo2(true);
      }
      if (slidesInfoRef.current[2].current.getBoundingClientRect().top < headerHeight - 20 && props.bottom === false) {
        isSlideInfo3 === true ? animationScaleY(slidesInfoRef.current[2].current, 0.2, 0.2) : null;
        setIsSlideInfo3(false);
      } else {
        isSlideInfo3 === false ? animationScaleY(slidesInfoRef.current[2].current, 1, 0.2) : null;
        setIsSlideInfo3(true);
      }
    };
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    if (props.bottom === true) {
      animationScaleY(slidesInfoRef.current[0].current, 1, 0.2);
      setIsSlideInfo1(true);
      animationScaleY(slidesInfoRef.current[1].current, 1, 0.2);
      setIsSlideInfo2(true);
      animationScaleY(slidesInfoRef.current[2].current, 1, 0.2);
      setIsSlideInfo3(true);
    }
    return function () {
      window.removeEventListener('scroll', handleScroll);
      if (slidesInfoRef.current[0].current.getBoundingClientRect().top > headerHeight) {
        animationScaleY(slidesInfoRef.current[0].current, 1, 0.2);
        setIsSlideInfo1(true);
      }
      if (slidesInfoRef.current[1].current.getBoundingClientRect().top > headerHeight) {
        animationScaleY(slidesInfoRef.current[1].current, 1, 0.2);
        setIsSlideInfo2(true);
      }
      if (slidesInfoRef.current[2].current.getBoundingClientRect().top > headerHeight) {
        animationScaleY(slidesInfoRef.current[2].current, 1, 0.2);
        setIsSlideInfo3(true);
      }
    };
  }, [isScrolling]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("section", {
    className: infoClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(containerClass, " ").concat(containerInfoClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: infoSliderClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(sliderInfoClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: sliderItemsInfoClass
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(sliderItemClass, " ").concat(sliderItemInfoClass)
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(sliderInnerClass, " ").concat(sliderInfoInnerClass)
  }, (0,funcProps/* default */.A)(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement("div", {
      className: "".concat(sliderSlideClass, " ").concat(sliderSlideInfoClass),
      key: "divSliderSlideInfo".concat(i),
      ref: slidesInfoRef.current[i]
    }, /*#__PURE__*/react.createElement("div", {
      className: "".concat(sliderLinkClass, " ").concat(sliderLinkInfoClass),
      key: "aSliderLinkInfo".concat(i)
    }, media1728 || media900 || media744 ? /*#__PURE__*/react.createElement(InfoSvg440, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media1300 || media1133 ? /*#__PURE__*/react.createElement(InfoSvg330, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media744l ? /*#__PURE__*/react.createElement(InfoSvg440l, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media600 ? /*#__PURE__*/react.createElement(InfoSvg330l, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media600l ? /*#__PURE__*/react.createElement(InfoSvg330l, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media375 ? /*#__PURE__*/react.createElement(InfoSvg330l, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : media275 ? /*#__PURE__*/react.createElement(InfoSvg230l, Info_extends({
      key: "infoSvg".concat(i)
    }, prop)) : null));
  })))))))));
};
;// ./src/components/sections/info/index.js

// EXTERNAL MODULE: ./src/components/ui/ui_button/index.js + 1 modules
var ui_button = __webpack_require__(7767);
;// ./src/components/sections/main/main_sidebar/MainSidebar.jsx
function MainSidebar_slicedToArray(r, e) { return MainSidebar_arrayWithHoles(r) || MainSidebar_iterableToArrayLimit(r, e) || MainSidebar_unsupportedIterableToArray(r, e) || MainSidebar_nonIterableRest(); }
function MainSidebar_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function MainSidebar_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return MainSidebar_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? MainSidebar_arrayLikeToArray(r, a) : void 0; } }
function MainSidebar_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function MainSidebar_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function MainSidebar_arrayWithHoles(r) { if (Array.isArray(r)) return r; }















var MainSidebar = function MainSidebar(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var mainSidebarClass = classnames_default()("main".concat(queryNumber, "__sidebar"));
  var sidebarClass = classnames_default()("sidebar".concat(queryNumber));
  var sidebarMainClass = classnames_default()("sidebar-main".concat(queryNumber));
  var sidebarItemClass = classnames_default()("sidebar".concat(queryNumber, "__item"));
  var sidebarItemMainClass = classnames_default()("sidebar".concat(queryNumber, "__item-main"));
  var sidebarSubClass = classnames_default()("sidebar-sub".concat(queryNumber));
  var sidebarItemSubClass = classnames_default()("sidebar".concat(queryNumber, "__item-sub"));
  var sidebarLinkClass = classnames_default()("sidebar".concat(queryNumber, "__link"));
  var sidebarLinkSubClass = classnames_default()("sidebar".concat(queryNumber, "__link-sub"));
  var sidebarLinkMainClass = classnames_default()("sidebar".concat(queryNumber, "__link-main"));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var buttonsSubRef = (0,react.useRef)([0, 1].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var buttonsMainRef = (0,react.useRef)([0].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal;
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling;
  var _useState = (0,react.useState)(true),
    _useState2 = MainSidebar_slicedToArray(_useState, 2),
    isButtonSub1 = _useState2[0],
    setIsButtonSub1 = _useState2[1];
  var _useState3 = (0,react.useState)(true),
    _useState4 = MainSidebar_slicedToArray(_useState3, 2),
    isButtonSub2 = _useState4[0],
    setIsButtonSub2 = _useState4[1];
  var _useState5 = (0,react.useState)(true),
    _useState6 = MainSidebar_slicedToArray(_useState5, 2),
    isButtonMain1 = _useState6[0],
    setIsButtonMain1 = _useState6[1];
  (0,react.useLayoutEffect)(function () {
    if (media744l === true || media600 === true || media375 === true || media275 === true) return;
    var headerHeight = 120;
    var handleScroll = function handleScroll() {
      if (buttonsSubRef.current[0].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonSub1(false);
      } else {
        setIsButtonSub1(true);
      }
      if (buttonsSubRef.current[1].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonSub2(false);
      } else {
        setIsButtonSub2(true);
      }
      if (buttonsMainRef.current[0].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonMain1(false);
      } else {
        setIsButtonMain1(true);
      }
    };
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    return function () {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [isScrolling]);
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var handleClickModalB = function handleClickModalB() {
    openModal({
      id: "".concat(modalId, "b"),
      className: "".concat(modalBodyClassName, "b"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentB */.Tm, {
        dataPhone: dataPhone,
        data: dataModalContentB_namespaceObject
      })
    });
  };
  var handleClickModalF = function handleClickModalF() {
    openModal({
      id: "".concat(modalId, "f"),
      className: "".concat(modalBodyClassName, "f"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentF */.hV, {
        dataPhone: dataPhone,
        data: dataModalContentF_namespaceObject
      })
    });
  };
  var handleClickModalC = function handleClickModalC() {
    openModal({
      id: "".concat(modalId, "c"),
      className: "".concat(modalBodyClassName, "c"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentC */._0, {
        dataPhone: dataPhone,
        data: dataModalContentC_namespaceObject
      })
    });
  };
  var widthEnter, widthLeave;
  if (media1728) {
    widthEnter = 370;
    widthLeave = 290;
  } else if (media1300) {
    widthEnter = 312;
    widthLeave = 246;
  } else if (media1133) {
    widthEnter = 312;
    widthLeave = 246;
  } else if (media900) {
    widthEnter = 257;
    widthLeave = 202;
  } else if (media744) {
    widthEnter = 257;
    widthLeave = 202;
  } else if (media744l) {
    widthEnter = 257;
    widthLeave = 202;
  } else if (media600) {
    widthEnter = 232;
    widthLeave = 135;
  } else if (media600l) {
    widthEnter = 232;
    widthLeave = 135;
  } else if (media375) {
    widthEnter = 232;
    widthLeave = 135;
  } else if (media275) {
    widthEnter = 232;
    widthLeave = 135;
  }
  var handleLiMouseEnter = function handleLiMouseEnter(current, width) {
    gsap/* default */.Ay.timeline().to(current, {
      width: width,
      duration: 0.3,
      ease: "ease"
    });
  };
  var handleLiMouseLeave = function handleLiMouseLeave(current, width) {
    gsap/* default */.Ay.timeline().to(current, {
      width: width,
      duration: 0.3,
      ease: "ease"
    });
  };
  var propsData = function propsData(props) {
    var propsAll = props;
    var data = [];
    data.push(JSON.parse(JSON.stringify(propsAll.data[0])));
    data.push(JSON.parse(JSON.stringify(propsAll.data[1])));
    return data;
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: mainSidebarClass
  }, /*#__PURE__*/react.createElement("menu", {
    className: "".concat(sidebarClass, " ").concat(sidebarMainClass)
  }, /*#__PURE__*/react.createElement("li", {
    className: "".concat(sidebarItemClass, " ").concat(sidebarItemMainClass)
  }, /*#__PURE__*/react.createElement("menu", {
    className: "".concat(sidebarClass, " ").concat(sidebarSubClass)
  }, propsData(props)[0].map(function (prop, i) {
    return /*#__PURE__*/react.createElement("li", {
      className: "".concat(sidebarItemClass, " ").concat(sidebarItemSubClass),
      key: "liSidebarItemSub".concat(i)
    }, /*#__PURE__*/react.createElement(ui_button/* UiButton */.B, {
      key: "uiButtonMainSidebarSub".concat(i),
      id: prop.id,
      className: "".concat(sidebarLinkClass, " ").concat(sidebarLinkSubClass),
      ref: buttonsSubRef.current[i],
      onClick: i === 0 ? handleClickModalB : i === 1 ? handleClickModalF : null,
      onMouseEnter: function onMouseEnter() {
        handleLiMouseEnter(buttonsSubRef.current[i].current, widthEnter);
      },
      onMouseLeave: function onMouseLeave() {
        handleLiMouseLeave(buttonsSubRef.current[i].current, widthLeave);
      },
      disabled: i === 0 && isButtonSub1 === true ? false : i === 0 && isButtonSub1 === false ? true : i === 1 && isButtonSub2 === true ? false : i === 1 && isButtonSub2 === false ? true : null,
      style: i === 0 && isButtonSub1 === true ? {
        opacity: 1,
        cursor: 'pointer',
        animationPlayState: 'running'
      } : i === 0 && isButtonSub1 === false ? {
        opacity: 0.5,
        cursor: 'default',
        animationPlayState: 'paused'
      } : i === 1 && isButtonSub2 === true ? {
        opacity: 1,
        cursor: 'pointer',
        animationPlayState: 'running'
      } : i === 1 && isButtonSub2 === false ? {
        opacity: 0.5,
        cursor: 'default',
        animationPlayState: 'paused'
      } : null
    }, prop.children));
  }))), propsData(props)[1].map(function (prop, i) {
    return /*#__PURE__*/react.createElement("li", {
      className: "".concat(sidebarItemClass, " ").concat(sidebarItemMainClass),
      key: "liSidebarItemMain".concat(i)
    }, /*#__PURE__*/react.createElement(ui_button/* UiButton */.B, {
      key: "uiButtonMainSidebarMain".concat(i),
      id: prop.id,
      className: "".concat(sidebarLinkClass, " ").concat(sidebarLinkMainClass),
      ref: buttonsMainRef.current[i],
      onClick: handleClickModalC,
      onMouseEnter: function onMouseEnter() {
        handleLiMouseEnter(buttonsMainRef.current[i].current, widthEnter);
      },
      onMouseLeave: function onMouseLeave() {
        handleLiMouseLeave(buttonsMainRef.current[i].current, widthLeave);
      },
      disabled: i === 0 && isButtonMain1 === true ? false : true,
      style: i === 0 && isButtonMain1 === true ? {
        opacity: 1,
        cursor: 'pointer',
        animationPlayState: 'running'
      } : i === 0 && isButtonMain1 === false ? {
        opacity: 0.5,
        cursor: 'default',
        animationPlayState: 'paused'
      } : null
    }, prop.children));
  }))));
};
;// ./src/components/sections/main/main_sidebar/index.js

// export { MainSidebar } from './MainSidebar';
;// ./src/components/sections/main/main_icons/main_icons_icon/MainIconsIcon.jsx
function MainIconsIcon_extends() { return MainIconsIcon_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, MainIconsIcon_extends.apply(null, arguments); }









var MainIconsIcon = function MainIconsIcon(props) {
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var iconsMainClass = classnames_default()("icons".concat(queryNumber, "__main"));
  var iconsMainIconClass = classnames_default()("icons".concat(queryNumber, "__main-icon"));
  var iconsMainShadowClass = classnames_default()("icons".concat(queryNumber, "__main-shadow"));
  var iconsIconRef = (0,react.useRef)(props.images.map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var animationIconMouseEnter = function animationIconMouseEnter(current1, current2) {
    gsap/* default */.Ay.timeline().to(current1, {
      opacity: 1,
      scale: 1.08,
      duration: 0.3,
      ease: "ease"
    }).to(current2, {
      scale: 0.8,
      duration: 0.3,
      delay: -0.3,
      ease: "ease"
    });
  };
  var animationIconMouseLeave = function animationIconMouseLeave(current1, current2) {
    gsap/* default */.Ay.timeline().to(current1, {
      opacity: 0.8,
      scale: 1,
      duration: 0.3,
      ease: "ease"
    }).to(current2, {
      scale: 1,
      duration: 0.3,
      delay: -0.3,
      ease: "ease"
    });
  };
  (0,react.useEffect)(function () {
    props.isMouseEnter ? animationIconMouseEnter(iconsIconRef.current[0].current, iconsIconRef.current[1].current) : animationIconMouseLeave(iconsIconRef.current[0].current, iconsIconRef.current[1].current);
  });
  return /*#__PURE__*/react.createElement(react.Fragment, null, (0,funcProps/* default */.A)(props, props.images).map(function (prop, i) {
    return /*#__PURE__*/react.createElement(ui/* UiImg */.Yo, MainIconsIcon_extends({
      key: "uiImgMainIconsWhatsapp".concat(i)
    }, prop, {
      className: i === 0 ? iconsMainIconClass : iconsMainShadowClass,
      ref: iconsIconRef.current[i]
    }));
  }));
};
;// ./src/components/sections/main/main_icons/main_icons_icon/index.js

// EXTERNAL MODULE: ./src/images/whatsapp-review.svg
var whatsapp_review = __webpack_require__(7914);
;// ./src/images/whatsapp-shadow.svg
const whatsapp_shadow_namespaceObject = __webpack_require__.p + "icons/whatsapp-shadow.e018a0dd38e96e1ad8ae.svg";
// EXTERNAL MODULE: ./src/images/telegram-review.svg
var telegram_review = __webpack_require__(1615);
;// ./src/images/telegram-shadow.svg
const telegram_shadow_namespaceObject = __webpack_require__.p + "icons/telegram-shadow.b71486840ae9afaf6fbc.svg";
;// ./src/images/checkmark-review.svg
const checkmark_review_namespaceObject = __webpack_require__.p + "icons/checkmark-review.827f9ee736f8cab3b376.svg";
;// ./src/images/checkmark-shadow.svg
const checkmark_shadow_namespaceObject = __webpack_require__.p + "icons/checkmark-shadow.bc1bfdb3afb1b5b2f4f9.svg";
;// ./src/data/data_main/data_main_icons/data_main_icons_whatsapp/dataMainIconsWhatsapp.json
const dataMainIconsWhatsapp_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"main-whatsapp-icon-0","alt":"","className":"icons__main icons__main-icon","src":""},{"id":"main-whatsapp-shadow-0","alt":"","className":"icons__main icons__main-shadow","src":""}]');
;// ./src/data/data_main/data_main_icons/data_main_icons_telegram/dataMainIconsTelegram.json
const dataMainIconsTelegram_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"main-telegram-icon-0","alt":"","className":"icons__main icons__main-icon","src":""},{"id":"main-telegram-shadow-0","alt":"","className":"icons__main icons__main-shadow","src":""}]');
;// ./src/data/data_main/data_main_icons/data_main_icons_checkmark/dataMainIconsCheckmark.json
const dataMainIconsCheckmark_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"main-checkmark-icon-0","alt":"","className":"icons__main icons__main-icon","src":""},{"id":"main-checkmark-shadow-0","alt":"","className":"icons__main icons__main-shadow","src":""}]');
;// ./src/components/sections/main/main_icons/MainIcons.jsx
function MainIcons_slicedToArray(r, e) { return MainIcons_arrayWithHoles(r) || MainIcons_iterableToArrayLimit(r, e) || MainIcons_unsupportedIterableToArray(r, e) || MainIcons_nonIterableRest(); }
function MainIcons_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function MainIcons_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return MainIcons_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? MainIcons_arrayLikeToArray(r, a) : void 0; } }
function MainIcons_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function MainIcons_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function MainIcons_arrayWithHoles(r) { if (Array.isArray(r)) return r; }






















var MainIcons = function MainIcons(props) {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var mainIconsClass = classnames_default()("main".concat(queryNumber, "__icons"));
  var iconsClass = classnames_default()("icons".concat(queryNumber));
  var iconsMainClass = classnames_default()("icons-main".concat(queryNumber));
  var iconsItemClass = classnames_default()("icons".concat(queryNumber, "__item"));
  var iconsItemMainClass = classnames_default()("icons".concat(queryNumber, "__item-main"));
  var iconsLinkClass = classnames_default()("icons".concat(queryNumber, "__link"));
  var iconsLinkMainClass = classnames_default()("icons".concat(queryNumber, "__link-main"));
  var popupBodyClass = classnames_default()("popup".concat(queryNumber, "__body"));
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    openModal = _useContext.openModal;
  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling;
  var buttonsMainIconsRef = (0,react.useRef)([0, 1, 2].map(function () {
    return /*#__PURE__*/(0,react.createRef)();
  }));
  var _useState = (0,react.useState)(true),
    _useState2 = MainIcons_slicedToArray(_useState, 2),
    isButtonMainIcons1 = _useState2[0],
    setIsButtonMainIcons1 = _useState2[1];
  var _useState3 = (0,react.useState)(true),
    _useState4 = MainIcons_slicedToArray(_useState3, 2),
    isButtonMainIcons2 = _useState4[0],
    setIsButtonMainIcons2 = _useState4[1];
  var _useState5 = (0,react.useState)(true),
    _useState6 = MainIcons_slicedToArray(_useState5, 2),
    isButtonMainIcons3 = _useState6[0],
    setIsButtonMainIcons3 = _useState6[1];
  (0,react.useLayoutEffect)(function () {
    if (media744l === true || media375 === true || media275 === true) return;
    var headerHeight = 120;
    var handleScroll = function handleScroll() {
      if (buttonsMainIconsRef.current[0].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonMainIcons1(false);
      } else {
        setIsButtonMainIcons1(true);
      }
      if (buttonsMainIconsRef.current[1].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonMainIcons2(false);
      } else {
        setIsButtonMainIcons2(true);
      }
      if (buttonsMainIconsRef.current[2].current.getBoundingClientRect().top < headerHeight) {
        setIsButtonMainIcons3(false);
      } else {
        setIsButtonMainIcons3(true);
      }
    };
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    return function () {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [isScrolling]);
  var _useState7 = (0,react.useState)(false),
    _useState8 = MainIcons_slicedToArray(_useState7, 2),
    isMouseEnterWhatsapp = _useState8[0],
    setIsMouseEnterWhatsapp = _useState8[1];
  var _useState9 = (0,react.useState)(false),
    _useState10 = MainIcons_slicedToArray(_useState9, 2),
    isMouseEnterTelegram = _useState10[0],
    setIsMouseEnterTelegram = _useState10[1];
  var _useState11 = (0,react.useState)(false),
    _useState12 = MainIcons_slicedToArray(_useState11, 2),
    isMouseEnterCheckmark = _useState12[0],
    setIsMouseEnterCheckmark = _useState12[1];
  var imagesWhatsapp = [whatsapp_review, whatsapp_shadow_namespaceObject];
  var imagesTelegram = [telegram_review, telegram_shadow_namespaceObject];
  var imagesCheckmark = [checkmark_review_namespaceObject, checkmark_shadow_namespaceObject];
  var modalId = 'popup-';
  var modalBodyClassName = "".concat(popupBodyClass, " ").concat(popupBodyClass, "-");
  // const modalBodyClassName = 'popup__body popup__body-';

  var handleClickModalD = function handleClickModalD() {
    openModal({
      id: "".concat(modalId, "d"),
      className: "".concat(modalBodyClassName, "d"),
      content: /*#__PURE__*/react.createElement(modal_content/* ModalContentD */.fD, null)
    });
  };
  var handleLiMouseEnter = function handleLiMouseEnter(number) {
    switch (number) {
      case 0:
        setIsMouseEnterWhatsapp(true);
        break;
      case 1:
        setIsMouseEnterTelegram(true);
        break;
      case 2:
        setIsMouseEnterCheckmark(true);
        break;
      default:
        setIsMouseEnterWhatsapp(false);
        setIsMouseEnterTelegram(false);
        setIsMouseEnterCheckmark(false);
    }
  };
  var handleLiMouseLeave = function handleLiMouseLeave(number) {
    switch (number) {
      case 0:
        setIsMouseEnterWhatsapp(false);
        break;
      case 1:
        setIsMouseEnterTelegram(false);
        break;
      case 2:
        setIsMouseEnterCheckmark(false);
        break;
      default:
        setIsMouseEnterWhatsapp(false);
        setIsMouseEnterTelegram(false);
        setIsMouseEnterCheckmark(false);
    }
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: mainIconsClass
  }, /*#__PURE__*/react.createElement("menu", {
    className: "".concat(iconsClass, " ").concat(iconsMainClass)
  }, (0,funcProps/* default */.A)(props).map(function (prop, i) {
    return /*#__PURE__*/react.createElement("li", {
      className: "".concat(iconsItemClass, " ").concat(iconsItemMainClass),
      key: "liIconsItemMain".concat(i),
      onMouseEnter: function onMouseEnter() {
        handleLiMouseEnter(i);
      },
      onMouseLeave: function onMouseLeave() {
        handleLiMouseLeave(i);
      }
    }, /*#__PURE__*/react.createElement(ui/* UiButton */.Bv, {
      key: "uiButtonMainIcons".concat(i),
      id: prop.id,
      className: "".concat(iconsLinkClass, " ").concat(iconsLinkMainClass),
      onClick: i === 2 ? handleClickModalD : null,
      ref: buttonsMainIconsRef.current[i],
      disabled: i === 0 && isButtonMainIcons1 === true ? false : i === 0 && isButtonMainIcons1 === false ? true : i === 1 && isButtonMainIcons2 === true ? false : i === 1 && isButtonMainIcons2 === false ? true : i === 2 && isButtonMainIcons3 === true ? false : i === 2 && isButtonMainIcons3 === false ? true : null,
      style: i === 0 && isButtonMainIcons1 === true ? {
        opacity: 1,
        cursor: 'pointer'
      } : i === 0 && isButtonMainIcons1 === false ? {
        opacity: 0.2,
        cursor: 'default'
      } : i === 1 && isButtonMainIcons2 === true ? {
        opacity: 1,
        cursor: 'pointer'
      } : i === 1 && isButtonMainIcons2 === false ? {
        opacity: 0.2,
        cursor: 'default'
      } : i === 2 && isButtonMainIcons3 === true ? {
        opacity: 1,
        cursor: 'pointer'
      } : i === 2 && isButtonMainIcons3 === false ? {
        opacity: 0.2,
        cursor: 'default'
      } : null
    }, i === 0 ? /*#__PURE__*/react.createElement(MainIconsIcon, {
      data: dataMainIconsWhatsapp_namespaceObject,
      isMouseEnter: isButtonMainIcons1 && isMouseEnterWhatsapp,
      images: imagesWhatsapp
    }) : i === 1 ? /*#__PURE__*/react.createElement(MainIconsIcon, {
      data: dataMainIconsTelegram_namespaceObject,
      isMouseEnter: isButtonMainIcons2 && isMouseEnterTelegram,
      images: imagesTelegram
    }) : i === 2 ? /*#__PURE__*/react.createElement(MainIconsIcon, {
      data: dataMainIconsCheckmark_namespaceObject,
      isMouseEnter: isButtonMainIcons3 && isMouseEnterCheckmark,
      images: imagesCheckmark
    }) : null));
  }))));
};
;// ./src/components/sections/main/main_icons/index.js

;// ./src/images/bg-main.jpg
const bg_main_namespaceObject = __webpack_require__.p + "images/bg-main.8e4052e51cdca9be18b4.jpg";
;// ./src/images/bg-main1300-1.jpg
const bg_main1300_1_namespaceObject = __webpack_require__.p + "images/bg-main1300-1.97355a31b247bf37664d.jpg";
;// ./src/images/bg-main1133.jpg
const bg_main1133_namespaceObject = __webpack_require__.p + "images/bg-main1133.d07b2b669d71db0d4b6f.jpg";
;// ./src/images/bg-main900.jpg
const bg_main900_namespaceObject = __webpack_require__.p + "images/bg-main900.ec3fbd6d2b574958c2c3.jpg";
;// ./src/images/bg-main744.jpg
const bg_main744_namespaceObject = __webpack_require__.p + "images/bg-main744.f7d9eba3ee134d049c67.jpg";
;// ./src/images/bg-main600.jpg
const bg_main600_namespaceObject = __webpack_require__.p + "images/bg-main600.1529a7ae41d8a0affb78.jpg";
;// ./src/images/bg-main375.jpg
const bg_main375_namespaceObject = __webpack_require__.p + "images/bg-main375.8dc770613ba72445ee84.jpg";
;// ./src/data/data_main/data_main_sidebar/dataMainSidebar.json
const dataMainSidebar_namespaceObject = /*#__PURE__*/JSON.parse('[[{"id":"main-sidibar-link-sub-0","className":"sidebar__link sidebar__link-sub popup-link","children":"Окна"},{"id":"main-sidibar-link-sub-1","className":"sidebar__link sidebar__link-sub popup-link","children":"Акции"}],[{"id":"main-sidibar-button-main-0","className":"sidebar__link sidebar__link-main popup-link","children":"Позвонить"}]]');
;// ./src/data/data_main/data_main_icons/dataMainIcons.json
const dataMainIcons_namespaceObject = /*#__PURE__*/JSON.parse('[{"id":"main-icons-link-0","className":"icons__link icons__link-main","href":"#"},{"id":"main-icons-link-1","className":"icons__link icons__link-main","href":"#"},{"id":"main-icons-link-2","className":"icons__link icons__link-main popup-link","href":"#"}]');
;// ./src/components/sections/main/Main.jsx



















var Main = function Main() {
  var queryMedia = (0,funcQueryMedia/* default */.A)();
  var media1728 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1728);
  var media1133 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1133);
  var media744 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744);
  var media744l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query744l);
  var media375 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query375);
  var media275 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query275);
  var media1300 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query1300);
  var media900 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query900);
  var media600 = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600);
  var media600l = (0,hooks/* useMediaQuery */.Ub)(queryMedia.query600l);
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  var mainClass = classnames_default()("main".concat(queryNumber));
  var mainInnerClass = classnames_default()("main".concat(queryNumber, "__inner"));
  var loadedImageBg1728 = (0,hooks/* useLoadImageBg */.ws)(bg_main_namespaceObject);
  var loadedImageBg1300 = (0,hooks/* useLoadImageBg */.ws)(bg_main1300_1_namespaceObject);
  var loadedImageBg1133 = (0,hooks/* useLoadImageBg */.ws)(bg_main1133_namespaceObject);
  var loadedImageBg900 = (0,hooks/* useLoadImageBg */.ws)(bg_main900_namespaceObject);
  var loadedImageBg744 = (0,hooks/* useLoadImageBg */.ws)(bg_main744_namespaceObject);
  var loadedImageBg600 = (0,hooks/* useLoadImageBg */.ws)(bg_main600_namespaceObject);
  var loadedImageBg375 = (0,hooks/* useLoadImageBg */.ws)(bg_main375_namespaceObject);
  var loadedImageBg275 = (0,hooks/* useLoadImageBg */.ws)(bg_main375_namespaceObject);
  var loadedImageBg;
  media1728 ? loadedImageBg = loadedImageBg1728 : media1300 ? loadedImageBg = loadedImageBg1300 : media1133 ? loadedImageBg = loadedImageBg1133 : media900 ? loadedImageBg = loadedImageBg900 : media744 ? loadedImageBg = loadedImageBg744 : media744l ? loadedImageBg = loadedImageBg744 : media600 ? loadedImageBg = loadedImageBg600 : media600l ? loadedImageBg = loadedImageBg600 : media375 ? loadedImageBg = loadedImageBg375 : media275 ? loadedImageBg = loadedImageBg275 : null;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("section", {
    className: mainClass,
    style: {
      backgroundImage: "url(".concat(loadedImageBg, ")")
    }
  }, /*#__PURE__*/react.createElement("div", {
    className: mainInnerClass
  }, /*#__PURE__*/react.createElement(MainSidebar, {
    dataPhone: dataPhone,
    data: dataMainSidebar_namespaceObject
  }), /*#__PURE__*/react.createElement(MainIcons, {
    data: dataMainIcons_namespaceObject
  }))));
};
;// ./src/components/sections/main/index.js

// export { Main } from './Main';
;// ./src/components/sections/index.js







;// ./src/error/error_screens/ErrorScreenProc.js


function ErrorScreenProc(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0441\u0451 \u043E \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u0430\u0445 +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenCert.js


function ErrorScreenCert(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0441\u0451 \u043E \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u0430\u0445 +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenFooter.js


function ErrorScreenFooter(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0417\u0432\u043E\u043D\u043E\u043A +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenMain.js


function ErrorScreenMain(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0430\u0448 \u0437\u0432\u043E\u043D\u043E\u043A +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenHeader.js


function ErrorScreenHeader(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0430\u0448 \u0437\u0432\u043E\u043D\u043E\u043A +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenCompanies.js


function ErrorScreenCompanies(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0441\u0451 \u043E\u0431 \u043E\u0431\u043E\u0440\u0443\u0434\u043E\u0432\u0430\u043D\u0438\u0438 +7 000 000 00 00")));
}
;// ./src/error/error_screens/ErrorScreenInfo.js


function ErrorScreenInfo(_ref) {
  var error = _ref.error;
  console.log(error);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "error error__proc"
  }, /*#__PURE__*/react.createElement("h2", {
    className: "error__message"
  }, "\u0412\u0441\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F +7 000 000 00 00")));
}
;// ./src/error/error_screens/index.js







;// ./src/data/data_companies/dataCompanies.json
const dataCompanies_namespaceObject = /*#__PURE__*/JSON.parse('[[{"id":"mychway-h2-0","children":"Mychway"},{"id":"mychway-p-0","children":"Mychway"}],[{"id":"auro-h2-0","children":"AURO"},{"id":"auro-p-0","children":"AURO"}],[{"id":"salonart-h2-0","children":"SalonArt"},{"id":"salonart-p-0","children":"SalonArt"}],[{"id":"vibro-h2-0","children":"Vibro"},{"id":"vibro-p-0","children":"Vibro"}],[{"id":"drceuracle-h2-0","children":"Dr.Ceuracle"},{"id":"drceuracle-p-0","children":"Dr.Ceuracle"}]]');
;// ./src/data/data_info/dataInfo.json
const dataInfo_namespaceObject = /*#__PURE__*/JSON.parse('[{"idSvg":"info-svg-0","xlinkHref":"#svg-group-0","idTitle1":"title1-1","idText1":"text1-1","idTitle2":"title1-2","idText2":"text1-2","childrenTitle1":"Продолжительность","childrenText1":"от 25 до 60 мин","childrenTitle2":"Рекомендуемый курс","childrenText2":"12-16 сеансов"},{"idSvg":"info-svg-1","xlinkHref":"#svg-group-1","idTitle1":"title2-1","idText1":"text2-1","idTitle2":"title2-2","idText2":"text2-2","childrenTitle1":"Анестезия","childrenText1":"Не требуется","childrenTitle2":"Препараты","childrenText2":"Не используются"},{"idSvg":"info-svg-2","xlinkHref":"#svg-group-2","idTitle1":"title3-1","idText1":"text3-1","idTitle2":"title3-2","idText2":"text3-2","childrenTitle1":"Периодичность","childrenText1":"4 раза в неделю","childrenTitle2":"Эффект наступает","childrenText2":"в течении курса"}]');
;// ./src/components/app.jsx
function app_slicedToArray(r, e) { return app_arrayWithHoles(r) || app_iterableToArrayLimit(r, e) || app_unsupportedIterableToArray(r, e) || app_nonIterableRest(); }
function app_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function app_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return app_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? app_arrayLikeToArray(r, a) : void 0; } }
function app_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function app_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function app_arrayWithHoles(r) { if (Array.isArray(r)) return r; }
// "use client";
















var Procedures = /*#__PURE__*/(0,react.lazy)(function () {
  return __webpack_require__.e(/* import() */ 624).then(__webpack_require__.bind(__webpack_require__, 3077));
});







var app_override = {
  display: 'block',
  margin: '0 auto',
  marginBottom: 80
};
var app_color = "#C975D8";
function App() {
  var _useOrientation = esm_useOrientation(),
    type = _useOrientation.type;
  console.log(type);
  (0,react.useEffect)(function () {
    window.sessionStorage.setItem('orientation', type);
  }), [];
  (0,react.useEffect)(function () {
    var orientation = window.sessionStorage.getItem('orientation');
    if (orientation !== type) {
      window.sessionStorage.setItem('orientation', type);
      window.location.reload();
    }
  }), [type];
  var queryNumber = (0,funcQueryNumber/* default */.A)();
  console.log(queryNumber);
  var wrapperClass = classnames_default()("wrapper".concat(queryNumber));
  var wrapperProceduresClass = classnames_default()("wrapper".concat(queryNumber, "__procedures"));
  var wrapperCertificatesClass = classnames_default()("wrapper".concat(queryNumber, "__certificates"));
  var scrollbarWidth = (0,hooks/* useScrollbarWidth */.yR)();
  var _useContext = (0,react.useContext)(contexts/* ModalContext */.Vs),
    headerHeight = _useContext.headerHeight,
    isToggled = _useContext.isToggled;
  var bodyRef = (0,react.useRef)(null);
  var faceRef = (0,react.useRef)(null);
  var _useState = (0,react.useState)({}),
    _useState2 = app_slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var callback = function callback(payload) {
    setState(payload);
  };
  gsap/* default */.Ay.registerPlugin(ScrollToPlugin);
  gsap/* default */.Ay.registerPlugin(CSSPlugin/* CSSPlugin */.H0);
  var artRef1 = (0,react.useRef)(null);
  var scrollTo = function scrollTo(target, offsety) {
    return gsap/* default */.Ay.to(window, {
      duration: 1,
      scrollTo: {
        y: target,
        offsetY: offsety
      }
    });
  };
  var artRef1Scroll = function artRef1Scroll() {
    scrollTo(artRef1.current, state.height + Number(0));
  };
  var headerRef = (0,react.useRef)();
  var scrollRef = (0,react.useRef)();
  // const proceduresRef = useRef();

  var _useScrollDirection = (0,react_use_scroll_direction_esm/* useScrollDirection */.Y)(),
    isScrolling = _useScrollDirection.isScrolling,
    isScrollingUp = _useScrollDirection.isScrollingUp,
    isScrollingDown = _useScrollDirection.isScrollingDown;
  var _useState3 = (0,react.useState)(0),
    _useState4 = app_slicedToArray(_useState3, 2),
    scrollPosition = _useState4[0],
    setScrollPosition = _useState4[1];
  var _useState5 = (0,react.useState)(false),
    _useState6 = app_slicedToArray(_useState5, 2),
    isBottom = _useState6[0],
    setIsBottom = _useState6[1];
  var windowHeight = (0,hooks/* useWindowHeight */.xJ)();
  var animateHeaderOut = function animateHeaderOut(y, duration) {
    gsap/* default */.Ay.timeline().to(headerRef.current, {
      y: y,
      opacity: 0,
      duration: duration
    });
  };
  var animateHeaderIn = function animateHeaderIn(duration) {
    gsap/* default */.Ay.timeline().to(headerRef.current, {
      opacity: 1,
      duration: duration
    });
  };
  (0,react.useLayoutEffect)(function () {
    var handleScroll = function handleScroll() {
      var position = window.scrollY;
      setScrollPosition(position);
      var bottom = position + windowHeight + 10 > scrollRef.current.scrollHeight;
      if (bottom === true) {
        setIsBottom(true);
      } else {
        setIsBottom(false);
      }
      if (isScrollingDown) {
        animateHeaderOut(position, 1);
        animateHeaderIn(1);
      } else if (isScrollingUp) {
        animateHeaderOut(position - (headerHeight + 2), 0.01);
        animateHeaderOut(position, 1);
        animateHeaderIn(1);
      }
    };
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    return function () {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [isScrolling]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(contexts/* ModalProvider */.Zn, null, /*#__PURE__*/react.createElement("div", {
    ref: scrollRef
  }, /*#__PURE__*/react.createElement("div", {
    className: wrapperClass,
    ref: headerRef,
    style: isBottom ? {
      display: 'none'
    } : {
      display: 'block',
      position: 'relative',
      margin: 'auto',
      top: 0,
      left: 0,
      right: 0,
      zIndex: 99
    }
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenHeader
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Header, {
    callback: callback,
    scroll: artRef1Scroll,
    ref: headerRef,
    position: scrollPosition
  })))), /*#__PURE__*/react.createElement("div", {
    className: wrapperClass,
    id: "wrapper-main"
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenMain
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Main, {
    bottom: isBottom
  })))), /*#__PURE__*/react.createElement("div", {
    ref: artRef1,
    className: wrapperProceduresClass
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenProc
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Procedures, {
    bodyRef: bodyRef,
    faceRef: faceRef,
    bottom: isBottom
  })))), /*#__PURE__*/react.createElement("div", {
    className: wrapperClass
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenCompanies
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Companies, {
    data: dataCompanies_namespaceObject,
    bottom: isBottom
  })))), /*#__PURE__*/react.createElement("div", {
    className: wrapperClass
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenInfo
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Info, {
    data: dataInfo_namespaceObject,
    bottom: isBottom
  })))), /*#__PURE__*/react.createElement("div", {
    className: wrapperCertificatesClass
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenCert
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Certificates, {
    bottom: isBottom
  })))), /*#__PURE__*/react.createElement("div", {
    className: wrapperClass
  }, /*#__PURE__*/react.createElement(ErrorBoundary, {
    FallbackComponent: ErrorScreenFooter
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(ClipLoader/* default */.A, {
      color: app_color,
      cssOverride: app_override
    })
  }, /*#__PURE__*/react.createElement(Footer, {
    bodyRef: bodyRef,
    faceRef: faceRef,
    scroll: artRef1Scroll
  })))))));
}
/* harmony default export */ const app = (App);
;// ./node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs
/**
 * react-router v7.9.4
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter) => (__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);

// lib/router/history.ts
var Action = /* @__PURE__ */ ((Action2) => {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
  return Action2;
})(Action || {});
var PopStateEventType = "popstate";
function createMemoryHistory(options = {}) {
  let { initialEntries = ["/"], initialIndex, v5Compat = false } = options;
  let entries;
  entries = initialEntries.map(
    (entry, index2) => createMemoryLocation(
      entry,
      typeof entry === "string" ? null : entry.state,
      index2 === 0 ? "default" : void 0
    )
  );
  let index = clampIndex(
    initialIndex == null ? entries.length - 1 : initialIndex
  );
  let action = "POP" /* Pop */;
  let listener = null;
  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index];
  }
  function createMemoryLocation(to, state = null, key) {
    let location = createLocation(
      entries ? getCurrentLocation().pathname : "/",
      to,
      state,
      key
    );
    warning(
      location.pathname.charAt(0) === "/",
      `relative pathnames are not supported in memory history: ${JSON.stringify(
        to
      )}`
    );
    return location;
  }
  function createHref2(to) {
    return typeof to === "string" ? to : createPath(to);
  }
  let history = {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref: createHref2,
    createURL(to) {
      return new URL(createHref2(to), "http://localhost");
    },
    encodeLocation(to) {
      let path = typeof to === "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push(to, state) {
      action = "PUSH" /* Push */;
      let nextLocation = createMemoryLocation(to, state);
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      if (v5Compat && listener) {
        listener({ action, location: nextLocation, delta: 1 });
      }
    },
    replace(to, state) {
      action = "REPLACE" /* Replace */;
      let nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation;
      if (v5Compat && listener) {
        listener({ action, location: nextLocation, delta: 0 });
      }
    },
    go(delta) {
      action = "POP" /* Pop */;
      let nextIndex = clampIndex(index + delta);
      let nextLocation = entries[nextIndex];
      index = nextIndex;
      if (listener) {
        listener({ action, location: nextLocation, delta });
      }
    },
    listen(fn) {
      listener = fn;
      return () => {
        listener = null;
      };
    }
  };
  return history;
}
function createBrowserHistory(options = {}) {
  function createBrowserLocation(window2, globalHistory) {
    let { pathname, search, hash } = window2.location;
    return createLocation(
      "",
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(
    createBrowserLocation,
    createBrowserHref,
    null,
    options
  );
}
function createHashHistory(options = {}) {
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window2.location.hash.substring(1));
    if (!pathname.startsWith("/") && !pathname.startsWith(".")) {
      pathname = "/" + pathname;
    }
    return createLocation(
      "",
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base");
    let href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href;
      let hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(
      location.pathname.charAt(0) === "/",
      `relative pathnames are not supported in hash history.push(${JSON.stringify(
        to
      )})`
    );
  }
  return getUrlBasedHistory(
    createHashLocation,
    createHashHref,
    validateHashLocation,
    options
  );
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined") console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
function createLocation(current, to, state = null, key) {
  let location = {
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: "",
    ...typeof to === "string" ? parsePath(to) : to,
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  };
  return location;
}
function createPath({
  pathname = "/",
  search = "",
  hash = ""
}) {
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substring(hashIndex);
      path = path.substring(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substring(searchIndex);
      path = path.substring(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {
  let { window: window2 = document.defaultView, v5Compat = false } = options;
  let globalHistory = window2.history;
  let action = "POP" /* Pop */;
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState({ ...globalHistory.state, idx: index }, "");
  }
  function getIndex() {
    let state = globalHistory.state || { idx: null };
    return state.idx;
  }
  function handlePop() {
    action = "POP" /* Pop */;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({ action, location: history.location, delta });
    }
  }
  function push(to, state) {
    action = "PUSH" /* Push */;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex() + 1;
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 1 });
    }
  }
  function replace2(to, state) {
    action = "REPLACE" /* Replace */;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex();
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 0 });
    }
  }
  function createURL(to) {
    return createBrowserURLImpl(to);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref2(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace: replace2,
    go(n) {
      return globalHistory.go(n);
    }
  };
  return history;
}
function createBrowserURLImpl(to, isAbsolute = false) {
  let base = "http://localhost";
  if (typeof window !== "undefined") {
    base = window.location.origin !== "null" ? window.location.origin : window.location.href;
  }
  invariant(base, "No window.location.(origin|href) available to create URL");
  let href = typeof to === "string" ? to : createPath(to);
  href = href.replace(/ $/, "%20");
  if (!isAbsolute && href.startsWith("//")) {
    href = base + href;
  }
  return new URL(href, base);
}

// lib/router/utils.ts
function createContext(defaultValue) {
  return { defaultValue };
}
var _map;
var RouterContextProvider = class {
  /**
   * Create a new `RouterContextProvider` instance
   * @param init An optional initial context map to populate the provider with
   */
  constructor(init) {
    __privateAdd(this, _map, /* @__PURE__ */ new Map());
    if (init) {
      for (let [context, value] of init) {
        this.set(context, value);
      }
    }
  }
  /**
   * Access a value from the context. If no value has been set for the context,
   * it will return the context's `defaultValue` if provided, or throw an error
   * if no `defaultValue` was set.
   * @param context The context to get the value for
   * @returns The value for the context, or the context's `defaultValue` if no
   * value was set
   */
  get(context) {
    if (__privateGet(this, _map).has(context)) {
      return __privateGet(this, _map).get(context);
    }
    if (context.defaultValue !== void 0) {
      return context.defaultValue;
    }
    throw new Error("No value found for context");
  }
  /**
   * Set a value for the context. If the context already has a value set, this
   * will overwrite it.
   *
   * @param context The context to set the value for
   * @param value The value to set for the context
   * @returns {void}
   */
  set(context, value) {
    __privateGet(this, _map).set(context, value);
  }
};
_map = new WeakMap();
var unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "children"
]);
function isUnsupportedLazyRouteObjectKey(key) {
  return unsupportedLazyRouteObjectKeys.has(
    key
  );
}
var unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "middleware",
  "children"
]);
function isUnsupportedLazyRouteFunctionKey(key) {
  return unsupportedLazyRouteFunctionKeys.has(
    key
  );
}
function isIndexRoute(route) {
  return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}, allowInPlaceMutations = false) {
  return routes.map((route, index) => {
    let treePath = [...parentPath, String(index)];
    let id = typeof route.id === "string" ? route.id : treePath.join("-");
    invariant(
      route.index !== true || !route.children,
      `Cannot specify children on an index route`
    );
    invariant(
      allowInPlaceMutations || !manifest[id],
      `Found a route id collision on id "${id}".  Route id's must be globally unique within Data Router usages`
    );
    if (isIndexRoute(route)) {
      let indexRoute = {
        ...route,
        ...mapRouteProperties2(route),
        id
      };
      manifest[id] = indexRoute;
      return indexRoute;
    } else {
      let pathOrLayoutRoute = {
        ...route,
        ...mapRouteProperties2(route),
        id,
        children: void 0
      };
      manifest[id] = pathOrLayoutRoute;
      if (route.children) {
        pathOrLayoutRoute.children = convertRoutesToDataRoutes(
          route.children,
          mapRouteProperties2,
          treePath,
          manifest,
          allowInPlaceMutations
        );
      }
      return pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes, locationArg, basename = "/") {
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(
      branches[i],
      decoded,
      allowPartial
    );
  }
  return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
  let { route, pathname, params } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    loaderData: loaderData[route.id],
    handle: route.handle
  };
}
function flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = "", _hasParentOptionalSegments = false) {
  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {
        return;
      }
      invariant(
        meta.relativePath.startsWith(parentPath),
        `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
      );
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        `Index routes must not have child routes. Please remove all child routes from route path "${path}".`
      );
      flattenRoutes(
        route.children,
        branches,
        routesMeta,
        path,
        hasParentOptionalSegments
      );
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    if (route.path === "" || !route.path?.includes("?")) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, true, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(
    ...restExploded.map(
      (subpath) => subpath === "" ? required : [required, subpath].join("/")
    )
  );
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map(
    (exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded
  );
}
function rankRouteBranches(branches) {
  branches.sort(
    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(
      a.routesMeta.map((meta) => meta.childrenIndex),
      b.routesMeta.map((meta) => meta.childrenIndex)
    )
  );
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s) => s === "*";
function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce(
    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue),
    initialScore
  );
}
function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
  let { routesMeta } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath(
      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },
      remainingPathname
    );
    let route = meta.route;
    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {
      match = matchPath(
        {
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end: false
        },
        remainingPathname
      );
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(
        joinPaths([matchedPathname, match.pathnameBase])
      ),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function generatePath(originalPath, params = {}) {
  let path = originalPath;
  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
    warning(
      false,
      `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`
    );
    path = path.replace(/\*$/, "/*");
  }
  const prefix = path.startsWith("/") ? "/" : "";
  const stringify2 = (p) => p == null ? "" : typeof p === "string" ? p : String(p);
  const segments = path.split(/\/+/).map((segment, index, array) => {
    const isLastSegment = index === array.length - 1;
    if (isLastSegment && segment === "*") {
      const star = "*";
      return stringify2(params[star]);
    }
    const keyMatch = segment.match(/^:([\w-]+)(\??)$/);
    if (keyMatch) {
      const [, key, optional] = keyMatch;
      let param = params[key];
      invariant(optional === "?" || param != null, `Missing ":${key}" param`);
      return encodeURIComponent(stringify2(param));
    }
    return segment.replace(/\?$/g, "");
  }).filter((segment) => !!segment);
  return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = { path: pattern, caseSensitive: false, end: true };
  }
  let [matcher, compiledParams] = compilePath(
    pattern.path,
    pattern.caseSensitive,
    pattern.end
  );
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce(
    (memo2, { paramName, isOptional }, index) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      const value = captureGroups[index];
      if (isOptional && !value) {
        memo2[paramName] = void 0;
      } else {
        memo2[paramName] = (value || "").replace(/%2F/g, "/");
      }
      return memo2;
    },
    {}
  );
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive = false, end = true) {
  warning(
    path === "*" || !path.endsWith("*") || path.endsWith("/*"),
    `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`
  );
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(
    /\/:([\w-]+)(\?)?/g,
    (_, paramName, isOptional) => {
      params.push({ paramName, isOptional: isOptional != null });
      return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    }
  ).replace(/\/([\w-]+)\?(\/|$)/g, "(/$1)?$2");
  if (path.endsWith("*")) {
    params.push({ paramName: "*" });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else {
  }
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v) => decodeURIComponent(v).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(
      false,
      `The URL path "${value}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`
    );
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function prependBasename({
  basename,
  pathname
}) {
  return pathname === "/" ? basename : joinPaths([basename, pathname]);
}
function resolvePath(to, fromPathname = "/") {
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(
    path
  )}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
  return matches.filter(
    (match, index) => index === 0 || match.route.path && match.route.path.length > 0
  );
}
function getResolveToMatches(matches) {
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches.map(
    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase
  );
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = { ...toArg };
    invariant(
      !to.pathname || !to.pathname.includes("?"),
      getInvalidPathError("?", "pathname", "search", to)
    );
    invariant(
      !to.pathname || !to.pathname.includes("#"),
      getInvalidPathError("#", "pathname", "hash", to)
    );
    invariant(
      !to.search || !to.search.includes("#"),
      getInvalidPathError("#", "search", "hash", to)
    );
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
var normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
var normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
var normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
var DataWithResponseInit = class {
  constructor(data2, init) {
    this.type = "DataWithResponseInit";
    this.data = data2;
    this.init = init || null;
  }
};
function data(data2, init) {
  return new DataWithResponseInit(
    data2,
    typeof init === "number" ? { status: init } : init
  );
}
var redirect = (url, init = 302) => {
  let responseInit = init;
  if (typeof responseInit === "number") {
    responseInit = { status: responseInit };
  } else if (typeof responseInit.status === "undefined") {
    responseInit.status = 302;
  }
  let headers = new Headers(responseInit.headers);
  headers.set("Location", url);
  return new Response(null, { ...responseInit, headers });
};
var redirectDocument = (url, init) => {
  let response = redirect(url, init);
  response.headers.set("X-Remix-Reload-Document", "true");
  return response;
};
var replace = (url, init) => {
  let response = redirect(url, init);
  response.headers.set("X-Remix-Replace", "true");
  return response;
};
var ErrorResponseImpl = class {
  constructor(status, statusText, data2, internal = false) {
    this.status = status;
    this.statusText = statusText || "";
    this.internal = internal;
    if (data2 instanceof Error) {
      this.data = data2.toString();
      this.error = data2;
    } else {
      this.data = data2;
    }
  }
};
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}

// lib/router/router.ts
var validMutationMethodsArr = [
  "POST",
  "PUT",
  "PATCH",
  "DELETE"
];
var validMutationMethods = new Set(
  validMutationMethodsArr
);
var validRequestMethodsArr = [
  "GET",
  ...validMutationMethodsArr
];
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
var redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);
var IDLE_NAVIGATION = {
  state: "idle",
  location: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
var IDLE_FETCHER = {
  state: "idle",
  data: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
var IDLE_BLOCKER = {
  state: "unblocked",
  proceed: void 0,
  reset: void 0,
  location: void 0
};
var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);
var defaultMapRouteProperties = (route) => ({
  hasErrorBoundary: Boolean(route.hasErrorBoundary)
});
var TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
var ResetLoaderDataSymbol = Symbol("ResetLoaderData");
function createRouter(init) {
  const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : void 0;
  const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
  invariant(
    init.routes.length > 0,
    "You must provide a non-empty routes array to createRouter"
  );
  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];
  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(
    init.routes,
    mapRouteProperties2,
    void 0,
    manifest
  );
  let inFlightDataRoutes;
  let basename = init.basename || "/";
  if (!basename.startsWith("/")) {
    basename = `/${basename}`;
  }
  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;
  let future = {
    ...init.future
  };
  let unlistenHistory = null;
  let subscribers = /* @__PURE__ */ new Set();
  let savedScrollPositions2 = null;
  let getScrollRestorationKey2 = null;
  let getScrollPosition = null;
  let initialScrollRestored = init.hydrationData != null;
  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
  let initialMatchesIsFOW = false;
  let initialErrors = null;
  let initialized;
  if (initialMatches == null && !init.patchRoutesOnNavigation) {
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    let { matches, route } = getShortCircuitMatches(dataRoutes);
    initialized = true;
    initialMatches = matches;
    initialErrors = { [route.id]: error };
  } else {
    if (initialMatches && !init.hydrationData) {
      let fogOfWar = checkFogOfWar(
        initialMatches,
        dataRoutes,
        init.history.location.pathname
      );
      if (fogOfWar.active) {
        initialMatches = null;
      }
    }
    if (!initialMatches) {
      initialized = false;
      initialMatches = [];
      let fogOfWar = checkFogOfWar(
        null,
        dataRoutes,
        init.history.location.pathname
      );
      if (fogOfWar.active && fogOfWar.matches) {
        initialMatchesIsFOW = true;
        initialMatches = fogOfWar.matches;
      }
    } else if (initialMatches.some((m) => m.route.lazy)) {
      initialized = false;
    } else if (!initialMatches.some((m) => routeHasLoaderOrMiddleware(m.route))) {
      initialized = true;
    } else {
      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
      let errors = init.hydrationData ? init.hydrationData.errors : null;
      if (errors) {
        let idx = initialMatches.findIndex(
          (m) => errors[m.route.id] !== void 0
        );
        initialized = initialMatches.slice(0, idx + 1).every(
          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)
        );
      } else {
        initialized = initialMatches.every(
          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)
        );
      }
    }
  }
  let router;
  let state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  };
  let pendingAction = "POP" /* Pop */;
  let pendingPreventScrollReset = false;
  let pendingNavigationController;
  let pendingViewTransitionEnabled = false;
  let appliedViewTransitions = /* @__PURE__ */ new Map();
  let removePageHideEventListener = null;
  let isUninterruptedRevalidation = false;
  let isRevalidationRequired = false;
  let cancelledFetcherLoads = /* @__PURE__ */ new Set();
  let fetchControllers = /* @__PURE__ */ new Map();
  let incrementingLoadId = 0;
  let pendingNavigationLoadId = -1;
  let fetchReloadIds = /* @__PURE__ */ new Map();
  let fetchRedirectIds = /* @__PURE__ */ new Set();
  let fetchLoadMatches = /* @__PURE__ */ new Map();
  let activeFetchers = /* @__PURE__ */ new Map();
  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();
  let blockerFunctions = /* @__PURE__ */ new Map();
  let unblockBlockerHistoryUpdate = void 0;
  let pendingRevalidationDfd = null;
  function initialize() {
    unlistenHistory = init.history.listen(
      ({ action: historyAction, location, delta }) => {
        if (unblockBlockerHistoryUpdate) {
          unblockBlockerHistoryUpdate();
          unblockBlockerHistoryUpdate = void 0;
          return;
        }
        warning(
          blockerFunctions.size === 0 || delta != null,
          "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL."
        );
        let blockerKey = shouldBlockNavigation({
          currentLocation: state.location,
          nextLocation: location,
          historyAction
        });
        if (blockerKey && delta != null) {
          let nextHistoryUpdatePromise = new Promise((resolve) => {
            unblockBlockerHistoryUpdate = resolve;
          });
          init.history.go(delta * -1);
          updateBlocker(blockerKey, {
            state: "blocked",
            location,
            proceed() {
              updateBlocker(blockerKey, {
                state: "proceeding",
                proceed: void 0,
                reset: void 0,
                location
              });
              nextHistoryUpdatePromise.then(() => init.history.go(delta));
            },
            reset() {
              let blockers = new Map(state.blockers);
              blockers.set(blockerKey, IDLE_BLOCKER);
              updateState({ blockers });
            }
          });
          return;
        }
        return startNavigation(historyAction, location);
      }
    );
    if (isBrowser2) {
      restoreAppliedTransitions(routerWindow, appliedViewTransitions);
      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);
      routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
      removePageHideEventListener = () => routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
    }
    if (!state.initialized) {
      startNavigation("POP" /* Pop */, state.location, {
        initialHydration: true
      });
    }
    return router;
  }
  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    if (removePageHideEventListener) {
      removePageHideEventListener();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach((_, key) => deleteFetcher(key));
    state.blockers.forEach((_, key) => deleteBlocker(key));
  }
  function subscribe(fn) {
    subscribers.add(fn);
    return () => subscribers.delete(fn);
  }
  function updateState(newState, opts = {}) {
    if (newState.matches) {
      newState.matches = newState.matches.map((m) => {
        let route = manifest[m.route.id];
        let matchRoute = m.route;
        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {
          return {
            ...m,
            route
          };
        }
        return m;
      });
    }
    state = {
      ...state,
      ...newState
    };
    let unmountedFetchers = [];
    let mountedFetchers = [];
    state.fetchers.forEach((fetcher, key) => {
      if (fetcher.state === "idle") {
        if (fetchersQueuedForDeletion.has(key)) {
          unmountedFetchers.push(key);
        } else {
          mountedFetchers.push(key);
        }
      }
    });
    fetchersQueuedForDeletion.forEach((key) => {
      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {
        unmountedFetchers.push(key);
      }
    });
    [...subscribers].forEach(
      (subscriber) => subscriber(state, {
        deletedFetchers: unmountedFetchers,
        viewTransitionOpts: opts.viewTransitionOpts,
        flushSync: opts.flushSync === true
      })
    );
    unmountedFetchers.forEach((key) => deleteFetcher(key));
    mountedFetchers.forEach((key) => state.fetchers.delete(key));
  }
  function completeNavigation(location, newState, { flushSync } = {}) {
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && location.state?._isRedirect !== true;
    let actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        actionData = null;
      }
    } else if (isActionReload) {
      actionData = state.actionData;
    } else {
      actionData = null;
    }
    let loaderData = newState.loaderData ? mergeLoaderData(
      state.loaderData,
      newState.loaderData,
      newState.matches || [],
      newState.errors
    ) : state.loaderData;
    let blockers = state.blockers;
    if (blockers.size > 0) {
      blockers = new Map(blockers);
      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));
    }
    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);
    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;
    if (inFlightDataRoutes) {
      dataRoutes = inFlightDataRoutes;
      inFlightDataRoutes = void 0;
    }
    if (isUninterruptedRevalidation) {
    } else if (pendingAction === "POP" /* Pop */) {
    } else if (pendingAction === "PUSH" /* Push */) {
      init.history.push(location, location.state);
    } else if (pendingAction === "REPLACE" /* Replace */) {
      init.history.replace(location, location.state);
    }
    let viewTransitionOpts;
    if (pendingAction === "POP" /* Pop */) {
      let priorPaths = appliedViewTransitions.get(state.location.pathname);
      if (priorPaths && priorPaths.has(location.pathname)) {
        viewTransitionOpts = {
          currentLocation: state.location,
          nextLocation: location
        };
      } else if (appliedViewTransitions.has(location.pathname)) {
        viewTransitionOpts = {
          currentLocation: location,
          nextLocation: state.location
        };
      }
    } else if (pendingViewTransitionEnabled) {
      let toPaths = appliedViewTransitions.get(state.location.pathname);
      if (toPaths) {
        toPaths.add(location.pathname);
      } else {
        toPaths = /* @__PURE__ */ new Set([location.pathname]);
        appliedViewTransitions.set(state.location.pathname, toPaths);
      }
      viewTransitionOpts = {
        currentLocation: state.location,
        nextLocation: location
      };
    }
    updateState(
      {
        ...newState,
        // matches, errors, fetchers go through as-is
        actionData,
        loaderData,
        historyAction: pendingAction,
        location,
        initialized: true,
        navigation: IDLE_NAVIGATION,
        revalidation: "idle",
        restoreScrollPosition,
        preventScrollReset,
        blockers
      },
      {
        viewTransitionOpts,
        flushSync: flushSync === true
      }
    );
    pendingAction = "POP" /* Pop */;
    pendingPreventScrollReset = false;
    pendingViewTransitionEnabled = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    pendingRevalidationDfd?.resolve();
    pendingRevalidationDfd = null;
  }
  async function navigate(to, opts) {
    if (typeof to === "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(
      state.location,
      state.matches,
      basename,
      to,
      opts?.fromRouteId,
      opts?.relative
    );
    let { path, submission, error } = normalizeNavigateOptions(
      false,
      normalizedPath,
      opts
    );
    let currentLocation = state.location;
    let nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = {
      ...nextLocation,
      ...init.history.encodeLocation(nextLocation)
    };
    let userReplace = opts && opts.replace != null ? opts.replace : void 0;
    let historyAction = "PUSH" /* Push */;
    if (userReplace === true) {
      historyAction = "REPLACE" /* Replace */;
    } else if (userReplace === false) {
    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
      historyAction = "REPLACE" /* Replace */;
    }
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
    let flushSync = (opts && opts.flushSync) === true;
    let blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          });
          navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER);
          updateState({ blockers });
        }
      });
      return;
    }
    await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace,
      enableViewTransition: opts && opts.viewTransition,
      flushSync
    });
  }
  function revalidate() {
    if (!pendingRevalidationDfd) {
      pendingRevalidationDfd = createDeferred();
    }
    interruptActiveLoads();
    updateState({ revalidation: "loading" });
    let promise = pendingRevalidationDfd.promise;
    if (state.navigation.state === "submitting") {
      return promise;
    }
    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return promise;
    }
    startNavigation(
      pendingAction || state.historyAction,
      state.navigation.location,
      {
        overrideNavigation: state.navigation,
        // Proxy through any rending view transition
        enableViewTransition: pendingViewTransitionEnabled === true
      }
    );
    return promise;
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort();
    pendingNavigationController = null;
    pendingAction = historyAction;
    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
    saveScrollPosition(state.location, state.matches);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let loadingNavigation = opts && opts.overrideNavigation;
    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (
      // `matchRoutes()` has already been called if we're in here via `router.initialize()`
      state.matches
    ) : matchRoutes(routesToUse, location, basename);
    let flushSync = (opts && opts.flushSync) === true;
    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location, { matches }, { flushSync });
      return;
    }
    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      let { error, notFoundMatches, route } = handleNavigational404(
        location.pathname
      );
      completeNavigation(
        location,
        {
          matches: notFoundMatches,
          loaderData: {},
          errors: {
            [route.id]: error
          }
        },
        { flushSync }
      );
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(
      init.history,
      location,
      pendingNavigationController.signal,
      opts && opts.submission
    );
    let scopedContext = init.getContext ? await init.getContext() : new RouterContextProvider();
    let pendingActionResult;
    if (opts && opts.pendingError) {
      pendingActionResult = [
        findNearestBoundary(matches).route.id,
        { type: "error" /* error */, error: opts.pendingError }
      ];
    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionResult = await handleAction(
        request,
        location,
        opts.submission,
        matches,
        scopedContext,
        fogOfWar.active,
        opts && opts.initialHydration === true,
        { replace: opts.replace, flushSync }
      );
      if (actionResult.shortCircuited) {
        return;
      }
      if (actionResult.pendingActionResult) {
        let [routeId, result] = actionResult.pendingActionResult;
        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {
          pendingNavigationController = null;
          completeNavigation(location, {
            matches: actionResult.matches,
            loaderData: {},
            errors: {
              [routeId]: result.error
            }
          });
          return;
        }
      }
      matches = actionResult.matches || matches;
      pendingActionResult = actionResult.pendingActionResult;
      loadingNavigation = getLoadingNavigation(location, opts.submission);
      flushSync = false;
      fogOfWar.active = false;
      request = createClientSideRequest(
        init.history,
        request.url,
        request.signal
      );
    }
    let {
      shortCircuited,
      matches: updatedMatches,
      loaderData,
      errors
    } = await handleLoaders(
      request,
      location,
      matches,
      scopedContext,
      fogOfWar.active,
      loadingNavigation,
      opts && opts.submission,
      opts && opts.fetcherSubmission,
      opts && opts.replace,
      opts && opts.initialHydration === true,
      flushSync,
      pendingActionResult
    );
    if (shortCircuited) {
      return;
    }
    pendingNavigationController = null;
    completeNavigation(location, {
      matches: updatedMatches || matches,
      ...getActionDataForCommit(pendingActionResult),
      loaderData,
      errors
    });
  }
  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {
    interruptActiveLoads();
    let navigation = getSubmittingNavigation(location, submission);
    updateState({ navigation }, { flushSync: opts.flushSync === true });
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        matches,
        location.pathname,
        request.signal
      );
      if (discoverResult.type === "aborted") {
        return { shortCircuited: true };
      } else if (discoverResult.type === "error") {
        if (discoverResult.partialMatches.length === 0) {
          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);
          return {
            matches: matches2,
            pendingActionResult: [
              route.id,
              {
                type: "error" /* error */,
                error: discoverResult.error
              }
            ]
          };
        }
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          pendingActionResult: [
            boundaryId,
            {
              type: "error" /* error */,
              error: discoverResult.error
            }
          ]
        };
      } else if (!discoverResult.matches) {
        let { notFoundMatches, error, route } = handleNavigational404(
          location.pathname
        );
        return {
          matches: notFoundMatches,
          pendingActionResult: [
            route.id,
            {
              type: "error" /* error */,
              error
            }
          ]
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let result;
    let actionMatch = getTargetMatch(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      result = {
        type: "error" /* error */,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    } else {
      let dsMatches = getTargetedDataStrategyMatches(
        mapRouteProperties2,
        manifest,
        request,
        matches,
        actionMatch,
        initialHydration ? [] : hydrationRouteProperties2,
        scopedContext
      );
      let results = await callDataStrategy(
        request,
        dsMatches,
        scopedContext,
        null
      );
      result = results[actionMatch.route.id];
      if (!result) {
        for (let match of matches) {
          if (results[match.route.id]) {
            result = results[match.route.id];
            break;
          }
        }
      }
      if (request.signal.aborted) {
        return { shortCircuited: true };
      }
    }
    if (isRedirectResult(result)) {
      let replace2;
      if (opts && opts.replace != null) {
        replace2 = opts.replace;
      } else {
        let location2 = normalizeRedirectLocation(
          result.response.headers.get("Location"),
          new URL(request.url),
          basename
        );
        replace2 = location2 === state.location.pathname + state.location.search;
      }
      await startRedirectNavigation(request, result, true, {
        submission,
        replace: replace2
      });
      return { shortCircuited: true };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      if ((opts && opts.replace) !== true) {
        pendingAction = "PUSH" /* Push */;
      }
      return {
        matches,
        pendingActionResult: [
          boundaryMatch.route.id,
          result,
          actionMatch.route.id
        ]
      };
    }
    return {
      matches,
      pendingActionResult: [actionMatch.route.id, result]
    };
  }
  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;
    if (isFogOfWar) {
      if (shouldUpdateNavigationState) {
        let actionData = getUpdatedActionData(pendingActionResult);
        updateState(
          {
            navigation: loadingNavigation,
            ...actionData !== void 0 ? { actionData } : {}
          },
          {
            flushSync
          }
        );
      }
      let discoverResult = await discoverRoutes(
        matches,
        location.pathname,
        request.signal
      );
      if (discoverResult.type === "aborted") {
        return { shortCircuited: true };
      } else if (discoverResult.type === "error") {
        if (discoverResult.partialMatches.length === 0) {
          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);
          return {
            matches: matches2,
            loaderData: {},
            errors: {
              [route.id]: discoverResult.error
            }
          };
        }
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          loaderData: {},
          errors: {
            [boundaryId]: discoverResult.error
          }
        };
      } else if (!discoverResult.matches) {
        let { error, notFoundMatches, route } = handleNavigational404(
          location.pathname
        );
        return {
          matches: notFoundMatches,
          loaderData: {},
          errors: {
            [route.id]: error
          }
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(
      request,
      scopedContext,
      mapRouteProperties2,
      manifest,
      init.history,
      state,
      matches,
      activeSubmission,
      location,
      initialHydration ? [] : hydrationRouteProperties2,
      initialHydration === true,
      isRevalidationRequired,
      cancelledFetcherLoads,
      fetchersQueuedForDeletion,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      init.patchRoutesOnNavigation != null,
      pendingActionResult
    );
    pendingNavigationLoadId = ++incrementingLoadId;
    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some(
      (m) => m.route.middleware && m.route.middleware.length > 0
    ) && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      completeNavigation(
        location,
        {
          matches,
          loaderData: {},
          // Commit pending error if we're short circuiting
          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,
          ...getActionDataForCommit(pendingActionResult),
          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}
        },
        { flushSync }
      );
      return { shortCircuited: true };
    }
    if (shouldUpdateNavigationState) {
      let updates = {};
      if (!isFogOfWar) {
        updates.navigation = loadingNavigation;
        let actionData = getUpdatedActionData(pendingActionResult);
        if (actionData !== void 0) {
          updates.actionData = actionData;
        }
      }
      if (revalidatingFetchers.length > 0) {
        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);
      }
      updateState(updates, { flushSync });
    }
    revalidatingFetchers.forEach((rf) => {
      abortFetcher(rf.key);
      if (rf.controller) {
        fetchControllers.set(rf.key, rf.controller);
      }
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));
    if (pendingNavigationController) {
      pendingNavigationController.signal.addEventListener(
        "abort",
        abortPendingFetchRevalidations
      );
    }
    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(
      dsMatches,
      revalidatingFetchers,
      request,
      scopedContext
    );
    if (request.signal.aborted) {
      return { shortCircuited: true };
    }
    if (pendingNavigationController) {
      pendingNavigationController.signal.removeEventListener(
        "abort",
        abortPendingFetchRevalidations
      );
    }
    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
    let redirect2 = findRedirect(loaderResults);
    if (redirect2) {
      await startRedirectNavigation(request, redirect2.result, true, {
        replace: replace2
      });
      return { shortCircuited: true };
    }
    redirect2 = findRedirect(fetcherResults);
    if (redirect2) {
      fetchRedirectIds.add(redirect2.key);
      await startRedirectNavigation(request, redirect2.result, true, {
        replace: replace2
      });
      return { shortCircuited: true };
    }
    let { loaderData, errors } = processLoaderData(
      state,
      matches,
      loaderResults,
      pendingActionResult,
      revalidatingFetchers,
      fetcherResults
    );
    if (initialHydration && state.errors) {
      errors = { ...state.errors, ...errors };
    }
    let updatedFetchers = markFetchRedirectsDone();
    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return {
      matches,
      loaderData,
      errors,
      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}
    };
  }
  function getUpdatedActionData(pendingActionResult) {
    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {
      return {
        [pendingActionResult[0]]: pendingActionResult[1].data
      };
    } else if (state.actionData) {
      if (Object.keys(state.actionData).length === 0) {
        return null;
      } else {
        return state.actionData;
      }
    }
  }
  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {
    revalidatingFetchers.forEach((rf) => {
      let fetcher = state.fetchers.get(rf.key);
      let revalidatingFetcher = getLoadingFetcher(
        void 0,
        fetcher ? fetcher.data : void 0
      );
      state.fetchers.set(rf.key, revalidatingFetcher);
    });
    return new Map(state.fetchers);
  }
  async function fetch2(key, routeId, href, opts) {
    abortFetcher(key);
    let flushSync = (opts && opts.flushSync) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let normalizedPath = normalizeTo(
      state.location,
      state.matches,
      basename,
      href,
      routeId,
      opts?.relative
    );
    let matches = matchRoutes(routesToUse, normalizedPath, basename);
    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      setFetcherError(
        key,
        routeId,
        getInternalRouterError(404, { pathname: normalizedPath }),
        { flushSync }
      );
      return;
    }
    let { path, submission, error } = normalizeNavigateOptions(
      true,
      normalizedPath,
      opts
    );
    if (error) {
      setFetcherError(key, routeId, error, { flushSync });
      return;
    }
    let scopedContext = init.getContext ? await init.getContext() : new RouterContextProvider();
    let preventScrollReset = (opts && opts.preventScrollReset) === true;
    if (submission && isMutationMethod(submission.formMethod)) {
      await handleFetcherAction(
        key,
        routeId,
        path,
        matches,
        scopedContext,
        fogOfWar.active,
        flushSync,
        preventScrollReset,
        submission
      );
      return;
    }
    fetchLoadMatches.set(key, { routeId, path });
    await handleFetcherLoader(
      key,
      routeId,
      path,
      matches,
      scopedContext,
      fogOfWar.active,
      flushSync,
      preventScrollReset,
      submission
    );
  }
  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
    interruptActiveLoads();
    fetchLoadMatches.delete(key);
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
      flushSync
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(
      init.history,
      path,
      abortController.signal,
      submission
    );
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        requestMatches,
        new URL(fetchRequest.url).pathname,
        fetchRequest.signal,
        key
      );
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, { flushSync });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(
          key,
          routeId,
          getInternalRouterError(404, { pathname: path }),
          { flushSync }
        );
        return;
      } else {
        requestMatches = discoverResult.matches;
      }
    }
    let match = getTargetMatch(requestMatches, path);
    if (!match.route.action && !match.route.lazy) {
      let error = getInternalRouterError(405, {
        method: submission.formMethod,
        pathname: path,
        routeId
      });
      setFetcherError(key, routeId, error, { flushSync });
      return;
    }
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let fetchMatches = getTargetedDataStrategyMatches(
      mapRouteProperties2,
      manifest,
      fetchRequest,
      requestMatches,
      match,
      hydrationRouteProperties2,
      scopedContext
    );
    let actionResults = await callDataStrategy(
      fetchRequest,
      fetchMatches,
      scopedContext,
      key
    );
    let actionResult = actionResults[match.route.id];
    if (fetchRequest.signal.aborted) {
      if (fetchControllers.get(key) === abortController) {
        fetchControllers.delete(key);
      }
      return;
    }
    if (fetchersQueuedForDeletion.has(key)) {
      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      }
    } else {
      if (isRedirectResult(actionResult)) {
        fetchControllers.delete(key);
        if (pendingNavigationLoadId > originatingLoadId) {
          updateFetcherState(key, getDoneFetcher(void 0));
          return;
        } else {
          fetchRedirectIds.add(key);
          updateFetcherState(key, getLoadingFetcher(submission));
          return startRedirectNavigation(fetchRequest, actionResult, false, {
            fetcherSubmission: submission,
            preventScrollReset
          });
        }
      }
      if (isErrorResult(actionResult)) {
        setFetcherError(key, routeId, actionResult.error);
        return;
      }
    }
    let nextLocation = state.navigation.location || state.location;
    let revalidationRequest = createClientSideRequest(
      init.history,
      nextLocation,
      abortController.signal
    );
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(
      revalidationRequest,
      scopedContext,
      mapRouteProperties2,
      manifest,
      init.history,
      state,
      matches,
      submission,
      nextLocation,
      hydrationRouteProperties2,
      false,
      isRevalidationRequired,
      cancelledFetcherLoads,
      fetchersQueuedForDeletion,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      init.patchRoutesOnNavigation != null,
      [match.route.id, actionResult]
    );
    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
      let staleKey = rf.key;
      let existingFetcher2 = state.fetchers.get(staleKey);
      let revalidatingFetcher = getLoadingFetcher(
        void 0,
        existingFetcher2 ? existingFetcher2.data : void 0
      );
      state.fetchers.set(staleKey, revalidatingFetcher);
      abortFetcher(staleKey);
      if (rf.controller) {
        fetchControllers.set(staleKey, rf.controller);
      }
    });
    updateState({ fetchers: new Map(state.fetchers) });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
    abortController.signal.addEventListener(
      "abort",
      abortPendingFetchRevalidations
    );
    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(
      dsMatches,
      revalidatingFetchers,
      revalidationRequest,
      scopedContext
    );
    if (abortController.signal.aborted) {
      return;
    }
    abortController.signal.removeEventListener(
      "abort",
      abortPendingFetchRevalidations
    );
    fetchReloadIds.delete(key);
    fetchControllers.delete(key);
    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    let redirect2 = findRedirect(loaderResults);
    if (redirect2) {
      return startRedirectNavigation(
        revalidationRequest,
        redirect2.result,
        false,
        { preventScrollReset }
      );
    }
    redirect2 = findRedirect(fetcherResults);
    if (redirect2) {
      fetchRedirectIds.add(redirect2.key);
      return startRedirectNavigation(
        revalidationRequest,
        redirect2.result,
        false,
        { preventScrollReset }
      );
    }
    let { loaderData, errors } = processLoaderData(
      state,
      matches,
      loaderResults,
      void 0,
      revalidatingFetchers,
      fetcherResults
    );
    abortStaleFetchLoads(loadId);
    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
      invariant(pendingAction, "Expected pending action");
      pendingNavigationController && pendingNavigationController.abort();
      completeNavigation(state.navigation.location, {
        matches,
        loaderData,
        errors,
        fetchers: new Map(state.fetchers)
      });
    } else {
      updateState({
        errors,
        loaderData: mergeLoaderData(
          state.loaderData,
          loaderData,
          matches,
          errors
        ),
        fetchers: new Map(state.fetchers)
      });
      isRevalidationRequired = false;
    }
  }
  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(
      key,
      getLoadingFetcher(
        submission,
        existingFetcher ? existingFetcher.data : void 0
      ),
      { flushSync }
    );
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(
      init.history,
      path,
      abortController.signal
    );
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        matches,
        new URL(fetchRequest.url).pathname,
        fetchRequest.signal,
        key
      );
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, { flushSync });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(
          key,
          routeId,
          getInternalRouterError(404, { pathname: path }),
          { flushSync }
        );
        return;
      } else {
        matches = discoverResult.matches;
      }
    }
    let match = getTargetMatch(matches, path);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let dsMatches = getTargetedDataStrategyMatches(
      mapRouteProperties2,
      manifest,
      fetchRequest,
      matches,
      match,
      hydrationRouteProperties2,
      scopedContext
    );
    let results = await callDataStrategy(
      fetchRequest,
      dsMatches,
      scopedContext,
      key
    );
    let result = results[match.route.id];
    if (fetchControllers.get(key) === abortController) {
      fetchControllers.delete(key);
    }
    if (fetchRequest.signal.aborted) {
      return;
    }
    if (fetchersQueuedForDeletion.has(key)) {
      updateFetcherState(key, getDoneFetcher(void 0));
      return;
    }
    if (isRedirectResult(result)) {
      if (pendingNavigationLoadId > originatingLoadId) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      } else {
        fetchRedirectIds.add(key);
        await startRedirectNavigation(fetchRequest, result, false, {
          preventScrollReset
        });
        return;
      }
    }
    if (isErrorResult(result)) {
      setFetcherError(key, routeId, result.error);
      return;
    }
    updateFetcherState(key, getDoneFetcher(result.data));
  }
  async function startRedirectNavigation(request, redirect2, isNavigation, {
    submission,
    fetcherSubmission,
    preventScrollReset,
    replace: replace2
  } = {}) {
    if (redirect2.response.headers.has("X-Remix-Revalidate")) {
      isRevalidationRequired = true;
    }
    let location = redirect2.response.headers.get("Location");
    invariant(location, "Expected a Location header on the redirect Response");
    location = normalizeRedirectLocation(
      location,
      new URL(request.url),
      basename
    );
    let redirectLocation = createLocation(state.location, location, {
      _isRedirect: true
    });
    if (isBrowser2) {
      let isDocumentReload = false;
      if (redirect2.response.headers.has("X-Remix-Reload-Document")) {
        isDocumentReload = true;
      } else if (isAbsoluteUrl(location)) {
        const url = createBrowserURLImpl(location, true);
        isDocumentReload = // Hard reload if it's an absolute URL to a new origin
        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
        stripBasename(url.pathname, basename) == null;
      }
      if (isDocumentReload) {
        if (replace2) {
          routerWindow.location.replace(location);
        } else {
          routerWindow.location.assign(location);
        }
        return;
      }
    }
    pendingNavigationController = null;
    let redirectNavigationType = replace2 === true || redirect2.response.headers.has("X-Remix-Replace") ? "REPLACE" /* Replace */ : "PUSH" /* Push */;
    let { formMethod, formAction, formEncType } = state.navigation;
    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {
      submission = getSubmissionFromNavigation(state.navigation);
    }
    let activeSubmission = submission || fetcherSubmission;
    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {
      await startNavigation(redirectNavigationType, redirectLocation, {
        submission: {
          ...activeSubmission,
          formAction: location
        },
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    } else {
      let overrideNavigation = getLoadingNavigation(
        redirectLocation,
        submission
      );
      await startNavigation(redirectNavigationType, redirectLocation, {
        overrideNavigation,
        // Send fetcher submissions through for shouldRevalidate
        fetcherSubmission,
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    }
  }
  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {
    let results;
    let dataResults = {};
    try {
      results = await callDataStrategyImpl(
        dataStrategyImpl,
        request,
        matches,
        fetcherKey,
        scopedContext,
        false
      );
    } catch (e) {
      matches.filter((m) => m.shouldLoad).forEach((m) => {
        dataResults[m.route.id] = {
          type: "error" /* error */,
          error: e
        };
      });
      return dataResults;
    }
    if (request.signal.aborted) {
      return dataResults;
    }
    for (let [routeId, result] of Object.entries(results)) {
      if (isRedirectDataStrategyResult(result)) {
        let response = result.result;
        dataResults[routeId] = {
          type: "redirect" /* redirect */,
          response: normalizeRelativeRoutingRedirectResponse(
            response,
            request,
            routeId,
            matches,
            basename
          )
        };
      } else {
        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);
      }
    }
    return dataResults;
  }
  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {
    let loaderResultsPromise = callDataStrategy(
      request,
      matches,
      scopedContext,
      null
    );
    let fetcherResultsPromise = Promise.all(
      fetchersToLoad.map(async (f) => {
        if (f.matches && f.match && f.request && f.controller) {
          let results = await callDataStrategy(
            f.request,
            f.matches,
            scopedContext,
            f.key
          );
          let result = results[f.match.route.id];
          return { [f.key]: result };
        } else {
          return Promise.resolve({
            [f.key]: {
              type: "error" /* error */,
              error: getInternalRouterError(404, {
                pathname: f.path
              })
            }
          });
        }
      })
    );
    let loaderResults = await loaderResultsPromise;
    let fetcherResults = (await fetcherResultsPromise).reduce(
      (acc, r) => Object.assign(acc, r),
      {}
    );
    return {
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = true;
    fetchLoadMatches.forEach((_, key) => {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.add(key);
      }
      abortFetcher(key);
    });
  }
  function updateFetcherState(key, fetcher, opts = {}) {
    state.fetchers.set(key, fetcher);
    updateState(
      { fetchers: new Map(state.fetchers) },
      { flushSync: (opts && opts.flushSync) === true }
    );
  }
  function setFetcherError(key, routeId, error, opts = {}) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState(
      {
        errors: {
          [boundaryMatch.route.id]: error
        },
        fetchers: new Map(state.fetchers)
      },
      { flushSync: (opts && opts.flushSync) === true }
    );
  }
  function getFetcher(key) {
    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
    if (fetchersQueuedForDeletion.has(key)) {
      fetchersQueuedForDeletion.delete(key);
    }
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function resetFetcher(key, opts) {
    abortFetcher(key, opts?.reason);
    updateFetcherState(key, getDoneFetcher(null));
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) {
      abortFetcher(key);
    }
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    fetchersQueuedForDeletion.delete(key);
    cancelledFetcherLoads.delete(key);
    state.fetchers.delete(key);
  }
  function queueFetcherForDeletion(key) {
    let count = (activeFetchers.get(key) || 0) - 1;
    if (count <= 0) {
      activeFetchers.delete(key);
      fetchersQueuedForDeletion.add(key);
    } else {
      activeFetchers.set(key, count);
    }
    updateState({ fetchers: new Map(state.fetchers) });
  }
  function abortFetcher(key, reason) {
    let controller = fetchControllers.get(key);
    if (controller) {
      controller.abort(reason);
      fetchControllers.delete(key);
    }
  }
  function markFetchersDone(keys) {
    for (let key of keys) {
      let fetcher = getFetcher(key);
      let doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [];
    let updatedFetchers = false;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, `Expected fetcher: ${key}`);
      if (fetcher.state === "loading") {
        fetchRedirectIds.delete(key);
        doneKeys.push(key);
        updatedFetchers = true;
      }
    }
    markFetchersDone(doneKeys);
    return updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id] of fetchReloadIds) {
      if (id < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, `Expected fetcher: ${key}`);
        if (fetcher.state === "loading") {
          abortFetcher(key);
          fetchReloadIds.delete(key);
          yeetedKeys.push(key);
        }
      }
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    if (blockerFunctions.get(key) !== fn) {
      blockerFunctions.set(key, fn);
    }
    return blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key);
    blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(
      blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked",
      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`
    );
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker);
    updateState({ blockers });
  }
  function shouldBlockNavigation({
    currentLocation,
    nextLocation,
    historyAction
  }) {
    if (blockerFunctions.size === 0) {
      return;
    }
    if (blockerFunctions.size > 1) {
      warning(false, "A router only supports one blocker at a time");
    }
    let entries = Array.from(blockerFunctions.entries());
    let [blockerKey, blockerFunction] = entries[entries.length - 1];
    let blocker = state.blockers.get(blockerKey);
    if (blocker && blocker.state === "proceeding") {
      return;
    }
    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {
      return blockerKey;
    }
  }
  function handleNavigational404(pathname) {
    let error = getInternalRouterError(404, { pathname });
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let { matches, route } = getShortCircuitMatches(routesToUse);
    return { notFoundMatches: matches, route, error };
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions2 = positions;
    getScrollPosition = getPosition;
    getScrollRestorationKey2 = getKey || null;
    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      let y = getSavedScrollPosition(state.location, state.matches);
      if (y != null) {
        updateState({ restoreScrollPosition: y });
      }
    }
    return () => {
      savedScrollPositions2 = null;
      getScrollPosition = null;
      getScrollRestorationKey2 = null;
    };
  }
  function getScrollKey(location, matches) {
    if (getScrollRestorationKey2) {
      let key = getScrollRestorationKey2(
        location,
        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))
      );
      return key || location.key;
    }
    return location.key;
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollPosition) {
      let key = getScrollKey(location, matches);
      savedScrollPositions2[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions2) {
      let key = getScrollKey(location, matches);
      let y = savedScrollPositions2[key];
      if (typeof y === "number") {
        return y;
      }
    }
    return null;
  }
  function checkFogOfWar(matches, routesToUse, pathname) {
    if (init.patchRoutesOnNavigation) {
      if (!matches) {
        let fogMatches = matchRoutesImpl(
          routesToUse,
          pathname,
          basename,
          true
        );
        return { active: true, matches: fogMatches || [] };
      } else {
        if (Object.keys(matches[0].params).length > 0) {
          let partialMatches = matchRoutesImpl(
            routesToUse,
            pathname,
            basename,
            true
          );
          return { active: true, matches: partialMatches };
        }
      }
    }
    return { active: false, matches: null };
  }
  async function discoverRoutes(matches, pathname, signal, fetcherKey) {
    if (!init.patchRoutesOnNavigation) {
      return { type: "success", matches };
    }
    let partialMatches = matches;
    while (true) {
      let isNonHMR = inFlightDataRoutes == null;
      let routesToUse = inFlightDataRoutes || dataRoutes;
      let localManifest = manifest;
      try {
        await init.patchRoutesOnNavigation({
          signal,
          path: pathname,
          matches: partialMatches,
          fetcherKey,
          patch: (routeId, children) => {
            if (signal.aborted) return;
            patchRoutesImpl(
              routeId,
              children,
              routesToUse,
              localManifest,
              mapRouteProperties2,
              false
            );
          }
        });
      } catch (e) {
        return { type: "error", error: e, partialMatches };
      } finally {
        if (isNonHMR && !signal.aborted) {
          dataRoutes = [...dataRoutes];
        }
      }
      if (signal.aborted) {
        return { type: "aborted" };
      }
      let newMatches = matchRoutes(routesToUse, pathname, basename);
      if (newMatches) {
        return { type: "success", matches: newMatches };
      }
      let newPartialMatches = matchRoutesImpl(
        routesToUse,
        pathname,
        basename,
        true
      );
      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(
        (m, i) => m.route.id === newPartialMatches[i].route.id
      )) {
        return { type: "success", matches: null };
      }
      partialMatches = newPartialMatches;
    }
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {};
    inFlightDataRoutes = convertRoutesToDataRoutes(
      newRoutes,
      mapRouteProperties2,
      void 0,
      manifest
    );
  }
  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {
    let isNonHMR = inFlightDataRoutes == null;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    patchRoutesImpl(
      routeId,
      children,
      routesToUse,
      manifest,
      mapRouteProperties2,
      unstable_allowElementMutations
    );
    if (isNonHMR) {
      dataRoutes = [...dataRoutes];
      updateState({});
    }
  }
  router = {
    get basename() {
      return basename;
    },
    get future() {
      return future;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return routerWindow;
    },
    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    resetFetcher,
    deleteFetcher: queueFetcherForDeletion,
    dispose,
    getBlocker,
    deleteBlocker,
    patchRoutes,
    _internalFetchControllers: fetchControllers,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes,
    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {
      updateState(newState);
    }
  };
  return router;
}
function createStaticHandler(routes, opts) {
  invariant(
    routes.length > 0,
    "You must provide a non-empty routes array to createStaticHandler"
  );
  let manifest = {};
  let basename = (opts ? opts.basename : null) || "/";
  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;
  let dataRoutes = convertRoutesToDataRoutes(
    routes,
    mapRouteProperties2,
    void 0,
    manifest
  );
  async function query(request, {
    requestContext,
    filterMatchesToLoad,
    skipLoaderErrorBubbling,
    skipRevalidation,
    dataStrategy,
    generateMiddlewareResponse
  } = {}) {
    let url = new URL(request.url);
    let method = request.method;
    let location = createLocation("", createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename);
    requestContext = requestContext != null ? requestContext : new RouterContextProvider();
    if (!isValidMethod(method) && method !== "HEAD") {
      let error = getInternalRouterError(405, { method });
      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);
      let staticContext = {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;
    } else if (!matches) {
      let error = getInternalRouterError(404, { pathname: location.pathname });
      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);
      let staticContext = {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;
    }
    if (generateMiddlewareResponse) {
      invariant(
        requestContext instanceof RouterContextProvider,
        "When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `RouterContextProvider`"
      );
      try {
        await loadLazyMiddlewareForMatches(
          matches,
          manifest,
          mapRouteProperties2
        );
        let renderedStaticContext;
        let response = await runServerMiddlewarePipeline(
          {
            request,
            matches,
            params: matches[0].params,
            // If we're calling middleware then it must be enabled so we can cast
            // this to the proper type knowing it's not an `AppLoadContext`
            context: requestContext
          },
          async () => {
            let res = await generateMiddlewareResponse(
              async (revalidationRequest, opts2 = {}) => {
                let result2 = await queryImpl(
                  revalidationRequest,
                  location,
                  matches,
                  requestContext,
                  dataStrategy || null,
                  skipLoaderErrorBubbling === true,
                  null,
                  "filterMatchesToLoad" in opts2 ? opts2.filterMatchesToLoad ?? null : filterMatchesToLoad ?? null,
                  skipRevalidation === true
                );
                if (isResponse(result2)) {
                  return result2;
                }
                renderedStaticContext = { location, basename, ...result2 };
                return renderedStaticContext;
              }
            );
            return res;
          },
          async (error, routeId) => {
            if (isRedirectResponse(error)) {
              return error;
            }
            if (isResponse(error)) {
              try {
                error = new ErrorResponseImpl(
                  error.status,
                  error.statusText,
                  await parseResponseBody(error)
                );
              } catch (e) {
                error = e;
              }
            }
            if (isDataWithResponseInit(error)) {
              error = dataWithResponseInitToErrorResponse(error);
            }
            if (renderedStaticContext) {
              if (routeId in renderedStaticContext.loaderData) {
                renderedStaticContext.loaderData[routeId] = void 0;
              }
              let staticContext = getStaticContextFromError(
                dataRoutes,
                renderedStaticContext,
                error,
                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id
              );
              return generateMiddlewareResponse(
                () => Promise.resolve(staticContext)
              );
            } else {
              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(
                matches,
                matches.find(
                  (m) => m.route.id === routeId || m.route.loader
                )?.route.id || routeId
              ).route.id;
              let staticContext = {
                matches,
                location,
                basename,
                loaderData: {},
                actionData: null,
                errors: {
                  [boundaryRouteId]: error
                },
                statusCode: isRouteErrorResponse(error) ? error.status : 500,
                actionHeaders: {},
                loaderHeaders: {}
              };
              return generateMiddlewareResponse(
                () => Promise.resolve(staticContext)
              );
            }
          }
        );
        invariant(isResponse(response), "Expected a response in query()");
        return response;
      } catch (e) {
        if (isResponse(e)) {
          return e;
        }
        throw e;
      }
    }
    let result = await queryImpl(
      request,
      location,
      matches,
      requestContext,
      dataStrategy || null,
      skipLoaderErrorBubbling === true,
      null,
      filterMatchesToLoad || null,
      skipRevalidation === true
    );
    if (isResponse(result)) {
      return result;
    }
    return { location, basename, ...result };
  }
  async function queryRoute(request, {
    routeId,
    requestContext,
    dataStrategy,
    generateMiddlewareResponse
  } = {}) {
    let url = new URL(request.url);
    let method = request.method;
    let location = createLocation("", createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename);
    requestContext = requestContext != null ? requestContext : new RouterContextProvider();
    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") {
      throw getInternalRouterError(405, { method });
    } else if (!matches) {
      throw getInternalRouterError(404, { pathname: location.pathname });
    }
    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);
    if (routeId && !match) {
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    } else if (!match) {
      throw getInternalRouterError(404, { pathname: location.pathname });
    }
    if (generateMiddlewareResponse) {
      invariant(
        requestContext instanceof RouterContextProvider,
        "When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `RouterContextProvider`"
      );
      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);
      let response = await runServerMiddlewarePipeline(
        {
          request,
          matches,
          params: matches[0].params,
          // If we're calling middleware then it must be enabled so we can cast
          // this to the proper type knowing it's not an `AppLoadContext`
          context: requestContext
        },
        async () => {
          let res = await generateMiddlewareResponse(
            async (innerRequest) => {
              let result2 = await queryImpl(
                innerRequest,
                location,
                matches,
                requestContext,
                dataStrategy || null,
                false,
                match,
                null,
                false
              );
              let processed = handleQueryResult(result2);
              return isResponse(processed) ? processed : typeof processed === "string" ? new Response(processed) : Response.json(processed);
            }
          );
          return res;
        },
        (error) => {
          if (isDataWithResponseInit(error)) {
            return Promise.resolve(dataWithResponseInitToResponse(error));
          }
          if (isResponse(error)) {
            return Promise.resolve(error);
          }
          throw error;
        }
      );
      return response;
    }
    let result = await queryImpl(
      request,
      location,
      matches,
      requestContext,
      dataStrategy || null,
      false,
      match,
      null,
      false
    );
    return handleQueryResult(result);
    function handleQueryResult(result2) {
      if (isResponse(result2)) {
        return result2;
      }
      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;
      if (error !== void 0) {
        throw error;
      }
      if (result2.actionData) {
        return Object.values(result2.actionData)[0];
      }
      if (result2.loaderData) {
        return Object.values(result2.loaderData)[0];
      }
      return void 0;
    }
  }
  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {
    invariant(
      request.signal,
      "query()/queryRoute() requests must contain an AbortController signal"
    );
    try {
      if (isMutationMethod(request.method)) {
        let result2 = await submit(
          request,
          matches,
          routeMatch || getTargetMatch(matches, location),
          requestContext,
          dataStrategy,
          skipLoaderErrorBubbling,
          routeMatch != null,
          filterMatchesToLoad,
          skipRevalidation
        );
        return result2;
      }
      let result = await loadRouteData(
        request,
        matches,
        requestContext,
        dataStrategy,
        skipLoaderErrorBubbling,
        routeMatch,
        filterMatchesToLoad
      );
      return isResponse(result) ? result : {
        ...result,
        actionData: null,
        actionHeaders: {}
      };
    } catch (e) {
      if (isDataStrategyResult(e) && isResponse(e.result)) {
        if (e.type === "error" /* error */) {
          throw e.result;
        }
        return e.result;
      }
      if (isRedirectResponse(e)) {
        return e;
      }
      throw e;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest) {
        throw error;
      }
      result = {
        type: "error" /* error */,
        error
      };
    } else {
      let dsMatches = getTargetedDataStrategyMatches(
        mapRouteProperties2,
        manifest,
        request,
        matches,
        actionMatch,
        [],
        requestContext
      );
      let results = await callDataStrategy(
        request,
        dsMatches,
        isRouteRequest,
        requestContext,
        dataStrategy
      );
      result = results[actionMatch.route.id];
      if (request.signal.aborted) {
        throwStaticHandlerAbortedError(request, isRouteRequest);
      }
    }
    if (isRedirectResult(result)) {
      throw new Response(null, {
        status: result.response.status,
        headers: {
          Location: result.response.headers.get("Location")
        }
      });
    }
    if (isRouteRequest) {
      if (isErrorResult(result)) {
        throw result.error;
      }
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: { [actionMatch.route.id]: result.data },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {}
      };
    }
    if (skipRevalidation) {
      if (isErrorResult(result)) {
        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
        return {
          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
          actionData: null,
          actionHeaders: {
            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}
          },
          matches,
          loaderData: {},
          errors: {
            [boundaryMatch.route.id]: result.error
          },
          loaderHeaders: {}
        };
      } else {
        return {
          actionData: {
            [actionMatch.route.id]: result.data
          },
          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},
          matches,
          loaderData: {},
          errors: null,
          statusCode: result.statusCode || 200,
          loaderHeaders: {}
        };
      }
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    });
    if (isErrorResult(result)) {
      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
      let handlerContext2 = await loadRouteData(
        loaderRequest,
        matches,
        requestContext,
        dataStrategy,
        skipLoaderErrorBubbling,
        null,
        filterMatchesToLoad,
        [boundaryMatch.route.id, result]
      );
      return {
        ...handlerContext2,
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
        actionData: null,
        actionHeaders: {
          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}
        }
      };
    }
    let handlerContext = await loadRouteData(
      loaderRequest,
      matches,
      requestContext,
      dataStrategy,
      skipLoaderErrorBubbling,
      null,
      filterMatchesToLoad
    );
    return {
      ...handlerContext,
      actionData: {
        [actionMatch.route.id]: result.data
      },
      // action status codes take precedence over loader status codes
      ...result.statusCode ? { statusCode: result.statusCode } : {},
      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}
    };
  }
  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch?.route.id
      });
    }
    let dsMatches;
    if (routeMatch) {
      dsMatches = getTargetedDataStrategyMatches(
        mapRouteProperties2,
        manifest,
        request,
        matches,
        routeMatch,
        [],
        requestContext
      );
    } else {
      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (
        // Up to but not including the boundary
        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1
      ) : void 0;
      dsMatches = matches.map((match, index) => {
        if (maxIdx != null && index > maxIdx) {
          return getDataStrategyMatch(
            mapRouteProperties2,
            manifest,
            request,
            match,
            [],
            requestContext,
            false
          );
        }
        return getDataStrategyMatch(
          mapRouteProperties2,
          manifest,
          request,
          match,
          [],
          requestContext,
          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))
        );
      });
    }
    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {
      return {
        matches,
        loaderData: {},
        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
          [pendingActionResult[0]]: pendingActionResult[1].error
        } : null,
        statusCode: 200,
        loaderHeaders: {}
      };
    }
    let results = await callDataStrategy(
      request,
      dsMatches,
      isRouteRequest,
      requestContext,
      dataStrategy
    );
    if (request.signal.aborted) {
      throwStaticHandlerAbortedError(request, isRouteRequest);
    }
    let handlerContext = processRouteLoaderData(
      matches,
      results,
      pendingActionResult,
      true,
      skipLoaderErrorBubbling
    );
    return {
      ...handlerContext,
      matches
    };
  }
  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {
    let results = await callDataStrategyImpl(
      dataStrategy || defaultDataStrategy,
      request,
      matches,
      null,
      requestContext,
      true
    );
    let dataResults = {};
    await Promise.all(
      matches.map(async (match) => {
        if (!(match.route.id in results)) {
          return;
        }
        let result = results[match.route.id];
        if (isRedirectDataStrategyResult(result)) {
          let response = result.result;
          throw normalizeRelativeRoutingRedirectResponse(
            response,
            request,
            match.route.id,
            matches,
            basename
          );
        }
        if (isRouteRequest) {
          if (isResponse(result.result)) {
            throw result;
          } else if (isDataWithResponseInit(result.result)) {
            throw dataWithResponseInitToResponse(result.result);
          }
        }
        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);
      })
    );
    return dataResults;
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError(routes, handlerContext, error, boundaryId) {
  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;
  return {
    ...handlerContext,
    statusCode: isRouteErrorResponse(error) ? error.status : 500,
    errors: {
      [errorBoundaryId]: error
    }
  };
}
function throwStaticHandlerAbortedError(request, isRouteRequest) {
  if (request.signal.reason !== void 0) {
    throw request.signal.reason;
  }
  let method = isRouteRequest ? "queryRoute" : "query";
  throw new Error(
    `${method}() call aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`
  );
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, to, fromRouteId, relative) {
  let contextualMatches;
  let activeRouteMatch;
  if (fromRouteId) {
    contextualMatches = [];
    for (let match of matches) {
      contextualMatches.push(match);
      if (match.route.id === fromRouteId) {
        activeRouteMatch = match;
        break;
      }
    }
  } else {
    contextualMatches = matches;
    activeRouteMatch = matches[matches.length - 1];
  }
  let path = resolveTo(
    to ? to : ".",
    getResolveToMatches(contextualMatches),
    stripBasename(location.pathname, basename) || location.pathname,
    relative === "path"
  );
  if (to == null) {
    path.search = location.search;
    path.hash = location.hash;
  }
  if ((to == null || to === "" || to === ".") && activeRouteMatch) {
    let nakedIndex = hasNakedIndexQuery(path.search);
    if (activeRouteMatch.route.index && !nakedIndex) {
      path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    } else if (!activeRouteMatch.route.index && nakedIndex) {
      let params = new URLSearchParams(path.search);
      let indexValues = params.getAll("index");
      params.delete("index");
      indexValues.filter((v) => v).forEach((v) => params.append("index", v));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : "";
    }
  }
  if (basename !== "/") {
    path.pathname = prependBasename({ basename, pathname: path.pathname });
  }
  return createPath(path);
}
function normalizeNavigateOptions(isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts)) {
    return { path };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path,
      error: getInternalRouterError(405, { method: opts.formMethod })
    };
  }
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError(400, { type: "invalid-body" })
  });
  let rawFormMethod = opts.formMethod || "get";
  let formMethod = rawFormMethod.toUpperCase();
  let formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce(
          (acc, [name, value]) => `${acc}${name}=${value}
`,
          ""
        )
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      try {
        let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json,
            text: void 0
          }
        };
      } catch (e) {
        return getInvalidBodyError();
      }
    }
  }
  invariant(
    typeof FormData === "function",
    "FormData is not available in this environment"
  );
  let searchParams;
  let formData;
  if (opts.formData) {
    searchParams = convertFormDataToSearchParams(opts.formData);
    formData = opts.formData;
  } else if (opts.body instanceof FormData) {
    searchParams = convertFormDataToSearchParams(opts.body);
    formData = opts.body;
  } else if (opts.body instanceof URLSearchParams) {
    searchParams = opts.body;
    formData = convertSearchParamsToFormData(searchParams);
  } else if (opts.body == null) {
    searchParams = new URLSearchParams();
    formData = new FormData();
  } else {
    try {
      searchParams = new URLSearchParams(opts.body);
      formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
      return getInvalidBodyError();
    }
  }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod(submission.formMethod)) {
    return { path, submission };
  }
  let parsedPath = parsePath(path);
  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
    searchParams.append("index", "");
  }
  parsedPath.search = `?${searchParams}`;
  return { path: createPath(parsedPath), submission };
}
function getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {
  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;
  let currentUrl = history.createURL(state.location);
  let nextUrl = history.createURL(location);
  let maxIdx;
  if (initialHydration && state.errors) {
    let boundaryId = Object.keys(state.errors)[0];
    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);
  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {
    let boundaryId = pendingActionResult[0];
    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;
  }
  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;
  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;
  let baseShouldRevalidateArgs = {
    currentUrl,
    currentParams: state.matches[0]?.params || {},
    nextUrl,
    nextParams: matches[0].params,
    ...submission,
    actionResult,
    actionStatus
  };
  let dsMatches = matches.map((match, index) => {
    let { route } = match;
    let forceShouldLoad = null;
    if (maxIdx != null && index > maxIdx) {
      forceShouldLoad = false;
    } else if (route.lazy) {
      forceShouldLoad = true;
    } else if (!routeHasLoaderOrMiddleware(route)) {
      forceShouldLoad = false;
    } else if (initialHydration) {
      forceShouldLoad = shouldLoadRouteOnHydration(
        route,
        state.loaderData,
        state.errors
      );
    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {
      forceShouldLoad = true;
    }
    if (forceShouldLoad !== null) {
      return getDataStrategyMatch(
        mapRouteProperties2,
        manifest,
        request,
        match,
        lazyRoutePropertiesToSkip,
        scopedContext,
        forceShouldLoad
      );
    }
    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (
      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)
    );
    let shouldRevalidateArgs = {
      ...baseShouldRevalidateArgs,
      defaultShouldRevalidate
    };
    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);
    return getDataStrategyMatch(
      mapRouteProperties2,
      manifest,
      request,
      match,
      lazyRoutePropertiesToSkip,
      scopedContext,
      shouldLoad,
      shouldRevalidateArgs
    );
  });
  let revalidatingFetchers = [];
  fetchLoadMatches.forEach((f, key) => {
    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {
      return;
    }
    let fetcher = state.fetchers.get(key);
    let isMidInitialLoad = fetcher && fetcher.state !== "idle" && fetcher.data === void 0;
    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
    if (!fetcherMatches) {
      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {
        return;
      }
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: null,
        match: null,
        request: null,
        controller: null
      });
      return;
    }
    if (fetchRedirectIds.has(key)) {
      return;
    }
    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
    let fetchController = new AbortController();
    let fetchRequest = createClientSideRequest(
      history,
      f.path,
      fetchController.signal
    );
    let fetcherDsMatches = null;
    if (cancelledFetcherLoads.has(key)) {
      cancelledFetcherLoads.delete(key);
      fetcherDsMatches = getTargetedDataStrategyMatches(
        mapRouteProperties2,
        manifest,
        fetchRequest,
        fetcherMatches,
        fetcherMatch,
        lazyRoutePropertiesToSkip,
        scopedContext
      );
    } else if (isMidInitialLoad) {
      if (isRevalidationRequired) {
        fetcherDsMatches = getTargetedDataStrategyMatches(
          mapRouteProperties2,
          manifest,
          fetchRequest,
          fetcherMatches,
          fetcherMatch,
          lazyRoutePropertiesToSkip,
          scopedContext
        );
      }
    } else {
      let shouldRevalidateArgs = {
        ...baseShouldRevalidateArgs,
        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired
      };
      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {
        fetcherDsMatches = getTargetedDataStrategyMatches(
          mapRouteProperties2,
          manifest,
          fetchRequest,
          fetcherMatches,
          fetcherMatch,
          lazyRoutePropertiesToSkip,
          scopedContext,
          shouldRevalidateArgs
        );
      }
    }
    if (fetcherDsMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: fetcherDsMatches,
        match: fetcherMatch,
        request: fetchRequest,
        controller: fetchController
      });
    }
  });
  return { dsMatches, revalidatingFetchers };
}
function routeHasLoaderOrMiddleware(route) {
  return route.loader != null || route.middleware != null && route.middleware.length > 0;
}
function shouldLoadRouteOnHydration(route, loaderData, errors) {
  if (route.lazy) {
    return true;
  }
  if (!routeHasLoaderOrMiddleware(route)) {
    return false;
  }
  let hasData = loaderData != null && route.id in loaderData;
  let hasError = errors != null && errors[route.id] !== void 0;
  if (!hasData && hasError) {
    return false;
  }
  if (typeof route.loader === "function" && route.loader.hydrate === true) {
    return true;
  }
  return !hasData && !hasError;
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id
  );
  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return arg.defaultShouldRevalidate;
}
function patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2, allowElementMutations) {
  let childrenToPatch;
  if (routeId) {
    let route = manifest[routeId];
    invariant(
      route,
      `No route found to patch children into: routeId = ${routeId}`
    );
    if (!route.children) {
      route.children = [];
    }
    childrenToPatch = route.children;
  } else {
    childrenToPatch = routesToUse;
  }
  let uniqueChildren = [];
  let existingChildren = [];
  children.forEach((newRoute) => {
    let existingRoute = childrenToPatch.find(
      (existingRoute2) => isSameRoute(newRoute, existingRoute2)
    );
    if (existingRoute) {
      existingChildren.push({ existingRoute, newRoute });
    } else {
      uniqueChildren.push(newRoute);
    }
  });
  if (uniqueChildren.length > 0) {
    let newRoutes = convertRoutesToDataRoutes(
      uniqueChildren,
      mapRouteProperties2,
      [routeId || "_", "patch", String(childrenToPatch?.length || "0")],
      manifest
    );
    childrenToPatch.push(...newRoutes);
  }
  if (allowElementMutations && existingChildren.length > 0) {
    for (let i = 0; i < existingChildren.length; i++) {
      let { existingRoute, newRoute } = existingChildren[i];
      let existingRouteTyped = existingRoute;
      let [newRouteTyped] = convertRoutesToDataRoutes(
        [newRoute],
        mapRouteProperties2,
        [],
        // Doesn't matter for mutated routes since they already have an id
        {},
        // Don't touch the manifest here since we're updating in place
        true
      );
      Object.assign(existingRouteTyped, {
        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,
        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,
        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement
      });
    }
  }
}
function isSameRoute(newRoute, existingRoute) {
  if ("id" in newRoute && "id" in existingRoute && newRoute.id === existingRoute.id) {
    return true;
  }
  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {
    return false;
  }
  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {
    return true;
  }
  return newRoute.children.every(
    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))
  );
}
var lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();
var loadLazyRouteProperty = ({
  key,
  route,
  manifest,
  mapRouteProperties: mapRouteProperties2
}) => {
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== "object") {
    return;
  }
  let lazyFn = routeToUpdate.lazy[key];
  if (!lazyFn) {
    return;
  }
  let cache = lazyRoutePropertyCache.get(routeToUpdate);
  if (!cache) {
    cache = {};
    lazyRoutePropertyCache.set(routeToUpdate, cache);
  }
  let cachedPromise = cache[key];
  if (cachedPromise) {
    return cachedPromise;
  }
  let propertyPromise = (async () => {
    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);
    let staticRouteValue = routeToUpdate[key];
    let isStaticallyDefined = staticRouteValue !== void 0 && key !== "hasErrorBoundary";
    if (isUnsupported) {
      warning(
        !isUnsupported,
        "Route property " + key + " is not a supported lazy route property. This property will be ignored."
      );
      cache[key] = Promise.resolve();
    } else if (isStaticallyDefined) {
      warning(
        false,
        `Route "${routeToUpdate.id}" has a static property "${key}" defined. The lazy property will be ignored.`
      );
    } else {
      let value = await lazyFn();
      if (value != null) {
        Object.assign(routeToUpdate, { [key]: value });
        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));
      }
    }
    if (typeof routeToUpdate.lazy === "object") {
      routeToUpdate.lazy[key] = void 0;
      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {
        routeToUpdate.lazy = void 0;
      }
    }
  })();
  cache[key] = propertyPromise;
  return propertyPromise;
};
var lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();
function loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  if (!route.lazy) {
    return {
      lazyRoutePromise: void 0,
      lazyHandlerPromise: void 0
    };
  }
  if (typeof route.lazy === "function") {
    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);
    if (cachedPromise) {
      return {
        lazyRoutePromise: cachedPromise,
        lazyHandlerPromise: cachedPromise
      };
    }
    let lazyRoutePromise2 = (async () => {
      invariant(
        typeof route.lazy === "function",
        "No lazy route function found"
      );
      let lazyRoute = await route.lazy();
      let routeUpdates = {};
      for (let lazyRouteProperty in lazyRoute) {
        let lazyValue = lazyRoute[lazyRouteProperty];
        if (lazyValue === void 0) {
          continue;
        }
        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);
        let staticRouteValue = routeToUpdate[lazyRouteProperty];
        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
        // on the route updates
        lazyRouteProperty !== "hasErrorBoundary";
        if (isUnsupported) {
          warning(
            !isUnsupported,
            "Route property " + lazyRouteProperty + " is not a supported property to be returned from a lazy route function. This property will be ignored."
          );
        } else if (isStaticallyDefined) {
          warning(
            !isStaticallyDefined,
            `Route "${routeToUpdate.id}" has a static property "${lazyRouteProperty}" defined but its lazy function is also returning a value for this property. The lazy route property "${lazyRouteProperty}" will be ignored.`
          );
        } else {
          routeUpdates[lazyRouteProperty] = lazyValue;
        }
      }
      Object.assign(routeToUpdate, routeUpdates);
      Object.assign(routeToUpdate, {
        // To keep things framework agnostic, we use the provided `mapRouteProperties`
        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)
        // since the logic will differ between frameworks.
        ...mapRouteProperties2(routeToUpdate),
        lazy: void 0
      });
    })();
    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);
    lazyRoutePromise2.catch(() => {
    });
    return {
      lazyRoutePromise: lazyRoutePromise2,
      lazyHandlerPromise: lazyRoutePromise2
    };
  }
  let lazyKeys = Object.keys(route.lazy);
  let lazyPropertyPromises = [];
  let lazyHandlerPromise = void 0;
  for (let key of lazyKeys) {
    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {
      continue;
    }
    let promise = loadLazyRouteProperty({
      key,
      route,
      manifest,
      mapRouteProperties: mapRouteProperties2
    });
    if (promise) {
      lazyPropertyPromises.push(promise);
      if (key === type) {
        lazyHandlerPromise = promise;
      }
    }
  }
  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {
  }) : void 0;
  lazyRoutePromise?.catch(() => {
  });
  lazyHandlerPromise?.catch(() => {
  });
  return {
    lazyRoutePromise,
    lazyHandlerPromise
  };
}
function isNonNullable(value) {
  return value !== void 0;
}
function loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {
  let promises = matches.map(({ route }) => {
    if (typeof route.lazy !== "object" || !route.lazy.middleware) {
      return void 0;
    }
    return loadLazyRouteProperty({
      key: "middleware",
      route,
      manifest,
      mapRouteProperties: mapRouteProperties2
    });
  }).filter(isNonNullable);
  return promises.length > 0 ? Promise.all(promises) : void 0;
}
async function defaultDataStrategy(args) {
  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);
  let keyedResults = {};
  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));
  results.forEach((result, i) => {
    keyedResults[matchesToLoad[i].route.id] = result;
  });
  return keyedResults;
}
async function defaultDataStrategyWithMiddleware(args) {
  if (!args.matches.some((m) => m.route.middleware)) {
    return defaultDataStrategy(args);
  }
  return runClientMiddlewarePipeline(args, () => defaultDataStrategy(args));
}
function runServerMiddlewarePipeline(args, handler, errorHandler) {
  return runMiddlewarePipeline(
    args,
    handler,
    processResult,
    isResponse,
    errorHandler
  );
  function processResult(result) {
    return isDataWithResponseInit(result) ? dataWithResponseInitToResponse(result) : result;
  }
}
function runClientMiddlewarePipeline(args, handler) {
  return runMiddlewarePipeline(
    args,
    handler,
    (r) => r,
    // No post-processing needed on the client
    isDataStrategyResults,
    errorHandler
  );
  function errorHandler(error, routeId, nextResult) {
    if (nextResult) {
      return Promise.resolve(
        Object.assign(nextResult.value, {
          [routeId]: { type: "error", result: error }
        })
      );
    } else {
      let { matches } = args;
      let maxBoundaryIdx = Math.min(
        // Throwing route
        Math.max(
          matches.findIndex((m) => m.route.id === routeId),
          0
        ),
        // or the shallowest route that needs to load data
        Math.max(
          matches.findIndex((m) => m.unstable_shouldCallHandler()),
          0
        )
      );
      let boundaryRouteId = findNearestBoundary(
        matches,
        matches[maxBoundaryIdx].route.id
      ).route.id;
      return Promise.resolve({
        [boundaryRouteId]: { type: "error", result: error }
      });
    }
  }
}
async function runMiddlewarePipeline(args, handler, processResult, isResult, errorHandler) {
  let { matches, request, params, context } = args;
  let tuples = matches.flatMap(
    (m) => m.route.middleware ? m.route.middleware.map((fn) => [m.route.id, fn]) : []
  );
  let result = await callRouteMiddleware(
    { request, params, context },
    tuples,
    handler,
    processResult,
    isResult,
    errorHandler
  );
  return result;
}
async function callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx = 0) {
  let { request } = args;
  if (request.signal.aborted) {
    throw request.signal.reason ?? new Error(`Request aborted: ${request.method} ${request.url}`);
  }
  let tuple = middlewares[idx];
  if (!tuple) {
    let result = await handler();
    return result;
  }
  let [routeId, middleware] = tuple;
  let nextResult;
  let next = async () => {
    if (nextResult) {
      throw new Error("You may only call `next()` once per middleware");
    }
    try {
      let result = await callRouteMiddleware(
        args,
        middlewares,
        handler,
        processResult,
        isResult,
        errorHandler,
        idx + 1
      );
      nextResult = { value: result };
      return nextResult.value;
    } catch (error) {
      nextResult = { value: await errorHandler(error, routeId, nextResult) };
      return nextResult.value;
    }
  };
  try {
    let value = await middleware(args, next);
    let result = value != null ? processResult(value) : void 0;
    if (isResult(result)) {
      return result;
    } else if (nextResult) {
      return result ?? nextResult.value;
    } else {
      nextResult = { value: await next() };
      return nextResult.value;
    }
  } catch (error) {
    let response = await errorHandler(error, routeId, nextResult);
    return response;
  }
}
function getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {
  let lazyMiddlewarePromise = loadLazyRouteProperty({
    key: "middleware",
    route: match.route,
    manifest,
    mapRouteProperties: mapRouteProperties2
  });
  let lazyRoutePromises = loadLazyRoute(
    match.route,
    isMutationMethod(request.method) ? "action" : "loader",
    manifest,
    mapRouteProperties2,
    lazyRoutePropertiesToSkip
  );
  return {
    middleware: lazyMiddlewarePromise,
    route: lazyRoutePromises.lazyRoutePromise,
    handler: lazyRoutePromises.lazyHandlerPromise
  };
}
function getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {
  let isUsingNewApi = false;
  let _lazyPromises = getDataStrategyMatchLazyPromises(
    mapRouteProperties2,
    manifest,
    request,
    match,
    lazyRoutePropertiesToSkip
  );
  return {
    ...match,
    _lazyPromises,
    shouldLoad,
    unstable_shouldRevalidateArgs,
    unstable_shouldCallHandler(defaultShouldRevalidate) {
      isUsingNewApi = true;
      if (!unstable_shouldRevalidateArgs) {
        return shouldLoad;
      }
      if (typeof defaultShouldRevalidate === "boolean") {
        return shouldRevalidateLoader(match, {
          ...unstable_shouldRevalidateArgs,
          defaultShouldRevalidate
        });
      }
      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);
    },
    resolve(handlerOverride) {
      let { lazy, loader, middleware } = match.route;
      let callHandler = isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (lazy || loader);
      let isMiddlewareOnlyRoute = middleware && middleware.length > 0 && !loader && !lazy;
      if (callHandler && !isMiddlewareOnlyRoute) {
        return callLoaderOrAction({
          request,
          match,
          lazyHandlerPromise: _lazyPromises?.handler,
          lazyRoutePromise: _lazyPromises?.route,
          handlerOverride,
          scopedContext
        });
      }
      return Promise.resolve({ type: "data" /* data */, result: void 0 });
    }
  };
}
function getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {
  return matches.map((match) => {
    if (match.route.id !== targetMatch.route.id) {
      return {
        ...match,
        shouldLoad: false,
        unstable_shouldRevalidateArgs: shouldRevalidateArgs,
        unstable_shouldCallHandler: () => false,
        _lazyPromises: getDataStrategyMatchLazyPromises(
          mapRouteProperties2,
          manifest,
          request,
          match,
          lazyRoutePropertiesToSkip
        ),
        resolve: () => Promise.resolve({ type: "data", result: void 0 })
      };
    }
    return getDataStrategyMatch(
      mapRouteProperties2,
      manifest,
      request,
      match,
      lazyRoutePropertiesToSkip,
      scopedContext,
      true,
      shouldRevalidateArgs
    );
  });
}
async function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {
  if (matches.some((m) => m._lazyPromises?.middleware)) {
    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));
  }
  let dataStrategyArgs = {
    request,
    params: matches[0].params,
    context: scopedContext,
    matches
  };
  let runClientMiddleware = isStaticHandler ? () => {
    throw new Error(
      "You cannot call `runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`"
    );
  } : (cb) => {
    let typedDataStrategyArgs = dataStrategyArgs;
    return runClientMiddlewarePipeline(typedDataStrategyArgs, () => {
      return cb({
        ...typedDataStrategyArgs,
        fetcherKey,
        runClientMiddleware: () => {
          throw new Error(
            "Cannot call `runClientMiddleware()` from within an `runClientMiddleware` handler"
          );
        }
      });
    });
  };
  let results = await dataStrategyImpl({
    ...dataStrategyArgs,
    fetcherKey,
    runClientMiddleware
  });
  try {
    await Promise.all(
      matches.flatMap((m) => [
        m._lazyPromises?.handler,
        m._lazyPromises?.route
      ])
    );
  } catch (e) {
  }
  return results;
}
async function callLoaderOrAction({
  request,
  match,
  lazyHandlerPromise,
  lazyRoutePromise,
  handlerOverride,
  scopedContext
}) {
  let result;
  let onReject;
  let isAction = isMutationMethod(request.method);
  let type = isAction ? "action" : "loader";
  let runHandler = (handler) => {
    let reject;
    let abortPromise = new Promise((_, r) => reject = r);
    onReject = () => reject();
    request.signal.addEventListener("abort", onReject);
    let actualHandler = (ctx) => {
      if (typeof handler !== "function") {
        return Promise.reject(
          new Error(
            `You cannot call the handler for a route which defines a boolean "${type}" [routeId: ${match.route.id}]`
          )
        );
      }
      return handler(
        {
          request,
          params: match.params,
          context: scopedContext
        },
        ...ctx !== void 0 ? [ctx] : []
      );
    };
    let handlerPromise = (async () => {
      try {
        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());
        return { type: "data", result: val };
      } catch (e) {
        return { type: "error", result: e };
      }
    })();
    return Promise.race([handlerPromise, abortPromise]);
  };
  try {
    let handler = isAction ? match.route.action : match.route.loader;
    if (lazyHandlerPromise || lazyRoutePromise) {
      if (handler) {
        let handlerError;
        let [value] = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e) => {
            handlerError = e;
          }),
          // Ensure all lazy route promises are resolved before continuing
          lazyHandlerPromise,
          lazyRoutePromise
        ]);
        if (handlerError !== void 0) {
          throw handlerError;
        }
        result = value;
      } else {
        await lazyHandlerPromise;
        let handler2 = isAction ? match.route.action : match.route.loader;
        if (handler2) {
          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);
        } else if (type === "action") {
          let url = new URL(request.url);
          let pathname = url.pathname + url.search;
          throw getInternalRouterError(405, {
            method: request.method,
            pathname,
            routeId: match.route.id
          });
        } else {
          return { type: "data" /* data */, result: void 0 };
        }
      }
    } else if (!handler) {
      let url = new URL(request.url);
      let pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    } else {
      result = await runHandler(handler);
    }
  } catch (e) {
    return { type: "error" /* error */, result: e };
  } finally {
    if (onReject) {
      request.signal.removeEventListener("abort", onReject);
    }
  }
  return result;
}
async function parseResponseBody(response) {
  let contentType = response.headers.get("Content-Type");
  if (contentType && /\bapplication\/json\b/.test(contentType)) {
    return response.body == null ? null : response.json();
  }
  return response.text();
}
async function convertDataStrategyResultToDataResult(dataStrategyResult) {
  let { result, type } = dataStrategyResult;
  if (isResponse(result)) {
    let data2;
    try {
      data2 = await parseResponseBody(result);
    } catch (e) {
      return { type: "error" /* error */, error: e };
    }
    if (type === "error" /* error */) {
      return {
        type: "error" /* error */,
        error: new ErrorResponseImpl(result.status, result.statusText, data2),
        statusCode: result.status,
        headers: result.headers
      };
    }
    return {
      type: "data" /* data */,
      data: data2,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (type === "error" /* error */) {
    if (isDataWithResponseInit(result)) {
      if (result.data instanceof Error) {
        return {
          type: "error" /* error */,
          error: result.data,
          statusCode: result.init?.status,
          headers: result.init?.headers ? new Headers(result.init.headers) : void 0
        };
      }
      return {
        type: "error" /* error */,
        error: new ErrorResponseImpl(
          result.init?.status || 500,
          void 0,
          result.data
        ),
        statusCode: isRouteErrorResponse(result) ? result.status : void 0,
        headers: result.init?.headers ? new Headers(result.init.headers) : void 0
      };
    }
    return {
      type: "error" /* error */,
      error: result,
      statusCode: isRouteErrorResponse(result) ? result.status : void 0
    };
  }
  if (isDataWithResponseInit(result)) {
    return {
      type: "data" /* data */,
      data: result.data,
      statusCode: result.init?.status,
      headers: result.init?.headers ? new Headers(result.init.headers) : void 0
    };
  }
  return { type: "data" /* data */, data: result };
}
function normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {
  let location = response.headers.get("Location");
  invariant(
    location,
    "Redirects returned/thrown from loaders/actions must have a Location header"
  );
  if (!isAbsoluteUrl(location)) {
    let trimmedMatches = matches.slice(
      0,
      matches.findIndex((m) => m.route.id === routeId) + 1
    );
    location = normalizeTo(
      new URL(request.url),
      trimmedMatches,
      basename,
      location
    );
    response.headers.set("Location", location);
  }
  return response;
}
function normalizeRedirectLocation(location, currentUrl, basename) {
  if (isAbsoluteUrl(location)) {
    let normalizedLocation = location;
    let url = normalizedLocation.startsWith("//") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);
    let isSameBasename = stripBasename(url.pathname, basename) != null;
    if (url.origin === currentUrl.origin && isSameBasename) {
      return url.pathname + url.search + url.hash;
    }
  }
  return location;
}
function createClientSideRequest(history, location, signal, submission) {
  let url = history.createURL(stripHashFromPath(location)).toString();
  let init = { signal };
  if (submission && isMutationMethod(submission.formMethod)) {
    let { formMethod, formEncType } = submission;
    init.method = formMethod.toUpperCase();
    if (formEncType === "application/json") {
      init.headers = new Headers({ "Content-Type": formEncType });
      init.body = JSON.stringify(submission.json);
    } else if (formEncType === "text/plain") {
      init.body = submission.text;
    } else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) {
      init.body = convertFormDataToSearchParams(submission.formData);
    } else {
      init.body = submission.formData;
    }
  }
  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries()) {
    searchParams.append(key, typeof value === "string" ? value : value.name);
  }
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries()) {
    formData.append(key, value);
  }
  return formData;
}
function processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {
  let loaderData = {};
  let errors = null;
  let statusCode;
  let foundError = false;
  let loaderHeaders = {};
  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;
  matches.forEach((match) => {
    if (!(match.route.id in results)) {
      return;
    }
    let id = match.route.id;
    let result = results[id];
    invariant(
      !isRedirectResult(result),
      "Cannot handle redirect results in processLoaderData"
    );
    if (isErrorResult(result)) {
      let error = result.error;
      if (pendingError !== void 0) {
        error = pendingError;
        pendingError = void 0;
      }
      errors = errors || {};
      if (skipLoaderErrorBubbling) {
        errors[id] = error;
      } else {
        let boundaryMatch = findNearestBoundary(matches, id);
        if (errors[boundaryMatch.route.id] == null) {
          errors[boundaryMatch.route.id] = error;
        }
      }
      if (!isStaticHandler) {
        loaderData[id] = ResetLoaderDataSymbol;
      }
      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    } else {
      loaderData[id] = result.data;
      if (result.statusCode && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    }
  });
  if (pendingError !== void 0 && pendingActionResult) {
    errors = { [pendingActionResult[0]]: pendingError };
    if (pendingActionResult[2]) {
      loaderData[pendingActionResult[2]] = void 0;
    }
  }
  return {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {
  let { loaderData, errors } = processRouteLoaderData(
    matches,
    results,
    pendingActionResult
  );
  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {
    let { key, match, controller } = rf;
    if (controller && controller.signal.aborted) {
      return;
    }
    let result = fetcherResults[key];
    invariant(result, "Did not find corresponding fetcher result");
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = {
          ...errors,
          [boundaryMatch.route.id]: result.error
        };
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      invariant(false, "Unhandled fetcher revalidation redirect");
    } else {
      let doneFetcher = getDoneFetcher(result.data);
      state.fetchers.set(key, doneFetcher);
    }
  });
  return { loaderData, errors };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {
    merged[k] = v;
    return merged;
  }, {});
  for (let match of matches) {
    let id = match.route.id;
    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {
      mergedLoaderData[id] = loaderData[id];
    }
    if (errors && errors.hasOwnProperty(id)) {
      break;
    }
  }
  return mergedLoaderData;
}
function getActionDataForCommit(pendingActionResult) {
  if (!pendingActionResult) {
    return {};
  }
  return isErrorResult(pendingActionResult[1]) ? {
    // Clear out prior actionData on errors
    actionData: {}
  } : {
    actionData: {
      [pendingActionResult[0]]: pendingActionResult[1].data
    }
  };
}
function findNearestBoundary(matches, routeId) {
  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];
  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === "/") || {
    id: `__shim-error-route__`
  };
  return {
    matches: [
      {
        params: {},
        pathname: "",
        pathnameBase: "",
        route
      }
    ],
    route
  };
}
function getInternalRouterError(status, {
  pathname,
  routeId,
  method,
  type,
  message
} = {}) {
  let statusText = "Unknown Server Error";
  let errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = `You made a ${method} request to "${pathname}" but did not provide a \`loader\` for route "${routeId}", so there is no way to handle the request.`;
    } else if (type === "invalid-body") {
      errorMessage = "Unable to encode submission body";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = `Route "${routeId}" does not match URL "${pathname}"`;
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = `No route matches URL "${pathname}"`;
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = `You made a ${method.toUpperCase()} request to "${pathname}" but did not provide an \`action\` for route "${routeId}", so there is no way to handle the request.`;
    } else if (method) {
      errorMessage = `Invalid request method "${method.toUpperCase()}"`;
    }
  }
  return new ErrorResponseImpl(
    status || 500,
    statusText,
    new Error(errorMessage),
    true
  );
}
function findRedirect(results) {
  let entries = Object.entries(results);
  for (let i = entries.length - 1; i >= 0; i--) {
    let [key, result] = entries[i];
    if (isRedirectResult(result)) {
      return { key, result };
    }
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path === "string" ? parsePath(path) : path;
  return createPath({ ...parsedPath, hash: "" });
}
function isHashChangeOnly(a, b) {
  if (a.pathname !== b.pathname || a.search !== b.search) {
    return false;
  }
  if (a.hash === "") {
    return b.hash !== "";
  } else if (a.hash === b.hash) {
    return true;
  } else if (b.hash !== "") {
    return true;
  }
  return false;
}
function dataWithResponseInitToResponse(data2) {
  return Response.json(data2.data, data2.init ?? void 0);
}
function dataWithResponseInitToErrorResponse(data2) {
  return new ErrorResponseImpl(
    data2.init?.status ?? 500,
    data2.init?.statusText ?? "Internal Server Error",
    data2.data
  );
}
function isDataStrategyResults(result) {
  return result != null && typeof result === "object" && Object.entries(result).every(
    ([key, value]) => typeof key === "string" && isDataStrategyResult(value)
  );
}
function isDataStrategyResult(result) {
  return result != null && typeof result === "object" && "type" in result && "result" in result && (result.type === "data" /* data */ || result.type === "error" /* error */);
}
function isRedirectDataStrategyResult(result) {
  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);
}
function isErrorResult(result) {
  return result.type === "error" /* error */;
}
function isRedirectResult(result) {
  return (result && result.type) === "redirect" /* redirect */;
}
function isDataWithResponseInit(value) {
  return typeof value === "object" && value != null && "type" in value && "data" in value && "init" in value && value.type === "DataWithResponseInit";
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectStatusCode(statusCode) {
  return redirectStatusCodes.has(statusCode);
}
function isRedirectResponse(result) {
  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has("Location");
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toUpperCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toUpperCase());
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v) => v === "");
}
function getTargetMatch(matches, location) {
  let search = typeof location === "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    return matches[matches.length - 1];
  }
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let { formMethod, formAction, formEncType, text, formData, json } = navigation;
  if (!formMethod || !formAction || !formEncType) {
    return;
  }
  if (text != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json: void 0,
      text
    };
  } else if (formData != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData,
      json: void 0,
      text: void 0
    };
  } else if (json !== void 0) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json,
      text: void 0
    };
  }
}
function getLoadingNavigation(location, submission) {
  if (submission) {
    let navigation = {
      state: "loading",
      location,
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text
    };
    return navigation;
  } else {
    let navigation = {
      state: "loading",
      location,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    };
    return navigation;
  }
}
function getSubmittingNavigation(location, submission) {
  let navigation = {
    state: "submitting",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
  return navigation;
}
function getLoadingFetcher(submission, data2) {
  if (submission) {
    let fetcher = {
      state: "loading",
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text,
      data: data2
    };
    return fetcher;
  } else {
    let fetcher = {
      state: "loading",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0,
      data: data2
    };
    return fetcher;
  }
}
function getSubmittingFetcher(submission, existingFetcher) {
  let fetcher = {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0
  };
  return fetcher;
}
function getDoneFetcher(data2) {
  let fetcher = {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: data2
  };
  return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
  try {
    let sessionPositions = _window.sessionStorage.getItem(
      TRANSITIONS_STORAGE_KEY
    );
    if (sessionPositions) {
      let json = JSON.parse(sessionPositions);
      for (let [k, v] of Object.entries(json || {})) {
        if (v && Array.isArray(v)) {
          transitions.set(k, new Set(v || []));
        }
      }
    }
  } catch (e) {
  }
}
function persistAppliedTransitions(_window, transitions) {
  if (transitions.size > 0) {
    let json = {};
    for (let [k, v] of transitions) {
      json[k] = [...v];
    }
    try {
      _window.sessionStorage.setItem(
        TRANSITIONS_STORAGE_KEY,
        JSON.stringify(json)
      );
    } catch (error) {
      warning(
        false,
        `Failed to save applied view transitions in sessionStorage (${error}).`
      );
    }
  }
}
function createDeferred() {
  let resolve;
  let reject;
  let promise = new Promise((res, rej) => {
    resolve = async (val) => {
      res(val);
      try {
        await promise;
      } catch (e) {
      }
    };
    reject = async (error) => {
      rej(error);
      try {
        await promise;
      } catch (e) {
      }
    };
  });
  return {
    promise,
    //@ts-ignore
    resolve,
    //@ts-ignore
    reject
  };
}

// lib/context.ts

var DataRouterContext = react.createContext(null);
DataRouterContext.displayName = "DataRouter";
var DataRouterStateContext = react.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
var RSCRouterContext = react.createContext(false);
function useIsRSCRouterContext() {
  return react.useContext(RSCRouterContext);
}
var ViewTransitionContext = react.createContext({
  isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
var FetchersContext = react.createContext(
  /* @__PURE__ */ new Map()
);
FetchersContext.displayName = "Fetchers";
var AwaitContext = react.createContext(null);
AwaitContext.displayName = "Await";
var AwaitContextProvider = (props) => React.createElement(AwaitContext.Provider, props);
var NavigationContext = react.createContext(
  null
);
NavigationContext.displayName = "Navigation";
var LocationContext = react.createContext(
  null
);
LocationContext.displayName = "Location";
var RouteContext = react.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
RouteContext.displayName = "Route";
var RouteErrorContext = react.createContext(null);
RouteErrorContext.displayName = "RouteError";
var ENABLE_DEV_WARNINGS = true;

// lib/hooks.tsx

function useHref(to, { relative } = {}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`
  );
  let { basename, navigator } = react.useContext(NavigationContext);
  let { hash, pathname, search } = useResolvedPath(to, { relative });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator.createHref({ pathname: joinedPathname, search, hash });
}
function useInRouterContext() {
  return react.useContext(LocationContext) != null;
}
function useLocation() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`
  );
  return react.useContext(LocationContext).location;
}
function useNavigationType() {
  return React2.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useMatch() may be used only in the context of a <Router> component.`
  );
  let { pathname } = useLocation();
  return React2.useMemo(
    () => matchPath(pattern, decodePath(pathname)),
    [pathname, pattern]
  );
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect(cb) {
  let isStatic = react.useContext(NavigationContext).static;
  if (!isStatic) {
    react.useLayoutEffect(cb);
  }
}
function useNavigate() {
  let { isDataRoute } = react.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`
  );
  let dataRouterContext = react.useContext(DataRouterContext);
  let { basename, navigator } = react.useContext(NavigationContext);
  let { matches } = react.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  let activeRef = react.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = react.useCallback(
    (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        navigator.go(to);
        return;
      }
      let path = resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname,
        options.relative === "path"
      );
      if (dataRouterContext == null && basename !== "/") {
        path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
      }
      (!!options.replace ? navigator.replace : navigator.push)(
        path,
        options.state,
        options
      );
    },
    [
      basename,
      navigator,
      routePathnamesJson,
      locationPathname,
      dataRouterContext
    ]
  );
  return navigate;
}
var OutletContext = react.createContext(null);
function useOutletContext() {
  return React2.useContext(OutletContext);
}
function useOutlet(context) {
  let outlet = React2.useContext(RouteContext).outlet;
  return React2.useMemo(
    () => outlet && /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet),
    [outlet, context]
  );
}
function useParams() {
  let { matches } = React2.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, { relative } = {}) {
  let { matches } = react.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  return react.useMemo(
    () => resolveTo(
      to,
      JSON.parse(routePathnamesJson),
      locationPathname,
      relative === "path"
    ),
    [to, routePathnamesJson, locationPathname, relative]
  );
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`
  );
  let { navigator } = react.useContext(NavigationContext);
  let { matches: parentMatches } = react.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;
  if (ENABLE_DEV_WARNINGS) {
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(
      parentPathname,
      !parentRoute || parentPath.endsWith("*") || parentPath.endsWith("*?"),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`
    );
  }
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    invariant(
      parentPathnameBase === "/" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`
    );
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, { pathname: remainingPathname });
  if (ENABLE_DEV_WARNINGS) {
    warning(
      parentRoute || matches != null,
      `No routes matched location "${location.pathname}${location.search}${location.hash}" `
    );
    warning(
      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,
      `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  }
  let renderedMatches = _renderMatches(
    matches && matches.map(
      (match) => Object.assign({}, match, {
        params: Object.assign({}, parentParams, match.params),
        pathname: joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes.
          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses
          // `new URL()` internally and we need to prevent it from treating
          // them as separators
          navigator.encodeLocation ? navigator.encodeLocation(
            match.pathname.replace(/\?/g, "%3F").replace(/#/g, "%23")
          ).pathname : match.pathname
        ]),
        pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes
          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses
          // `new URL()` internally and we need to prevent it from treating
          // them as separators
          navigator.encodeLocation ? navigator.encodeLocation(
            match.pathnameBase.replace(/\?/g, "%3F").replace(/#/g, "%23")
          ).pathname : match.pathnameBase
        ])
      })
    ),
    parentMatches,
    dataRouterState,
    unstable_onError,
    future
  );
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ react.createElement(
      LocationContext.Provider,
      {
        value: {
          location: {
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: "default",
            ...location
          },
          navigationType: "POP" /* Pop */
        }
      },
      renderedMatches
    );
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = { padding: "0.5rem", backgroundColor: lightgrey };
  let codeStyles = { padding: "2px 4px", backgroundColor: lightgrey };
  let devInfo = null;
  if (ENABLE_DEV_WARNINGS) {
    console.error(
      "Error handled by React Router default ErrorBoundary:",
      error
    );
    devInfo = /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ react.createElement("code", { style: codeStyles }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ react.createElement("code", { style: codeStyles }, "errorElement"), " prop on your route."));
  }
  return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ react.createElement("h3", { style: { fontStyle: "italic" } }, message), stack ? /* @__PURE__ */ react.createElement("pre", { style: preStyles }, stack) : null, devInfo);
}
var defaultErrorElement = /* @__PURE__ */ react.createElement(DefaultErrorComponent, null);
var RenderErrorBoundary = class extends react.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    if (this.props.unstable_onError) {
      this.props.unstable_onError(error, errorInfo);
    } else {
      console.error(
        "React Router caught the following error during render",
        error
      );
    }
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ react.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ react.createElement(
      RouteErrorContext.Provider,
      {
        value: this.state.error,
        children: this.props.component
      }
    )) : this.props.children;
  }
};
function RenderedRoute({ routeContext, match, children }) {
  let dataRouterContext = react.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ react.createElement(RouteContext.Provider, { value: routeContext }, children);
}
function _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {
  if (matches == null) {
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = dataRouterState?.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex(
      (m) => m.route.id && errors?.[m.route.id] !== void 0
    );
    invariant(
      errorIndex >= 0,
      `Could not find a matching route for errors on route IDs: ${Object.keys(
        errors
      ).join(",")}`
    );
    renderedMatches = renderedMatches.slice(
      0,
      Math.min(renderedMatches.length, errorIndex + 1)
    );
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let { loaderData, errors: errors2 } = dataRouterState;
        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight(
    (outlet, match, index) => {
      let error;
      let shouldRenderHydrateFallback = false;
      let errorElement = null;
      let hydrateFallbackElement = null;
      if (dataRouterState) {
        error = errors && match.route.id ? errors[match.route.id] : void 0;
        errorElement = match.route.errorElement || defaultErrorElement;
        if (renderFallback) {
          if (fallbackIndex < 0 && index === 0) {
            warningOnce(
              "route-fallback",
              false,
              "No `HydrateFallback` element provided to render during initial hydration"
            );
            shouldRenderHydrateFallback = true;
            hydrateFallbackElement = null;
          } else if (fallbackIndex === index) {
            shouldRenderHydrateFallback = true;
            hydrateFallbackElement = match.route.hydrateFallbackElement || null;
          }
        }
      }
      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
      let getChildren = () => {
        let children;
        if (error) {
          children = errorElement;
        } else if (shouldRenderHydrateFallback) {
          children = hydrateFallbackElement;
        } else if (match.route.Component) {
          children = /* @__PURE__ */ react.createElement(match.route.Component, null);
        } else if (match.route.element) {
          children = match.route.element;
        } else {
          children = outlet;
        }
        return /* @__PURE__ */ react.createElement(
          RenderedRoute,
          {
            match,
            routeContext: {
              outlet,
              matches: matches2,
              isDataRoute: dataRouterState != null
            },
            children
          }
        );
      };
      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ react.createElement(
        RenderErrorBoundary,
        {
          location: dataRouterState.location,
          revalidation: dataRouterState.revalidation,
          component: errorElement,
          error,
          children: getChildren(),
          routeContext: { outlet: null, matches: matches2, isDataRoute: true },
          unstable_onError
        }
      ) : getChildren();
    },
    null
  );
}
function getDataRouterConsoleError(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
  let ctx = react.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError(hookName));
  return ctx;
}
function useDataRouterState(hookName) {
  let state = react.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError(hookName));
  return state;
}
function useRouteContext(hookName) {
  let route = react.useContext(RouteContext);
  invariant(route, getDataRouterConsoleError(hookName));
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName);
  let thisRoute = route.matches[route.matches.length - 1];
  invariant(
    thisRoute.route.id,
    `${hookName} can only be used on routes that contain a unique "id"`
  );
  return thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId("useRouteId" /* UseRouteId */);
}
function useNavigation() {
  let state = useDataRouterState("useNavigation" /* UseNavigation */);
  return state.navigation;
}
function useRevalidator() {
  let dataRouterContext = useDataRouterContext("useRevalidator" /* UseRevalidator */);
  let state = useDataRouterState("useRevalidator" /* UseRevalidator */);
  let revalidate = React2.useCallback(async () => {
    await dataRouterContext.router.revalidate();
  }, [dataRouterContext.router]);
  return React2.useMemo(
    () => ({ revalidate, state: state.revalidation }),
    [revalidate, state.revalidation]
  );
}
function useMatches() {
  let { matches, loaderData } = useDataRouterState(
    "useMatches" /* UseMatches */
  );
  return react.useMemo(
    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),
    [matches, loaderData]
  );
}
function useLoaderData() {
  let state = useDataRouterState("useLoaderData" /* UseLoaderData */);
  let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */);
  return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
  let state = useDataRouterState("useRouteLoaderData" /* UseRouteLoaderData */);
  return state.loaderData[routeId];
}
function useActionData() {
  let state = useDataRouterState("useActionData" /* UseActionData */);
  let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */);
  return state.actionData ? state.actionData[routeId] : void 0;
}
function useRouteError() {
  let error = react.useContext(RouteErrorContext);
  let state = useDataRouterState("useRouteError" /* UseRouteError */);
  let routeId = useCurrentRouteId("useRouteError" /* UseRouteError */);
  if (error !== void 0) {
    return error;
  }
  return state.errors?.[routeId];
}
function useAsyncValue() {
  let value = React2.useContext(AwaitContext);
  return value?._data;
}
function useAsyncError() {
  let value = React2.useContext(AwaitContext);
  return value?._error;
}
var blockerId = 0;
function useBlocker(shouldBlock) {
  let { router, basename } = useDataRouterContext("useBlocker" /* UseBlocker */);
  let state = useDataRouterState("useBlocker" /* UseBlocker */);
  let [blockerKey, setBlockerKey] = React2.useState("");
  let blockerFunction = React2.useCallback(
    (arg) => {
      if (typeof shouldBlock !== "function") {
        return !!shouldBlock;
      }
      if (basename === "/") {
        return shouldBlock(arg);
      }
      let { currentLocation, nextLocation, historyAction } = arg;
      return shouldBlock({
        currentLocation: {
          ...currentLocation,
          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname
        },
        nextLocation: {
          ...nextLocation,
          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname
        },
        historyAction
      });
    },
    [basename, shouldBlock]
  );
  React2.useEffect(() => {
    let key = String(++blockerId);
    setBlockerKey(key);
    return () => router.deleteBlocker(key);
  }, [router]);
  React2.useEffect(() => {
    if (blockerKey !== "") {
      router.getBlocker(blockerKey, blockerFunction);
    }
  }, [router, blockerKey, blockerFunction]);
  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
  let { router } = useDataRouterContext("useNavigate" /* UseNavigateStable */);
  let id = useCurrentRouteId("useNavigate" /* UseNavigateStable */);
  let activeRef = react.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = react.useCallback(
    async (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        router.navigate(to);
      } else {
        await router.navigate(to, { fromRouteId: id, ...options });
      }
    },
    [router, id]
  );
  return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
    warning(false, message);
  }
}
function useRoute(...args) {
  const currentRouteId = useCurrentRouteId(
    "useRoute" /* UseRoute */
  );
  const id = args[0] ?? currentRouteId;
  const state = useDataRouterState("useRouteLoaderData" /* UseRouteLoaderData */);
  const route = state.matches.find(({ route: route2 }) => route2.id === id);
  if (route === void 0) return void 0;
  return {
    loaderData: state.loaderData[id],
    actionData: state.actionData?.[id]
  };
}

// lib/components.tsx


// lib/server-runtime/warnings.ts
var alreadyWarned2 = {};
function warnOnce(condition, message) {
  if (!condition && !alreadyWarned2[message]) {
    alreadyWarned2[message] = true;
    console.warn(message);
  }
}

// lib/components.tsx
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null
  };
  if (route.Component) {
    if (ENABLE_DEV_WARNINGS) {
      if (route.element) {
        warning(
          false,
          "You should not include both `Component` and `element` on your route - `Component` will be used."
        );
      }
    }
    Object.assign(updates, {
      element: React3.createElement(route.Component),
      Component: void 0
    });
  }
  if (route.HydrateFallback) {
    if (ENABLE_DEV_WARNINGS) {
      if (route.hydrateFallbackElement) {
        warning(
          false,
          "You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used."
        );
      }
    }
    Object.assign(updates, {
      hydrateFallbackElement: React3.createElement(route.HydrateFallback),
      HydrateFallback: void 0
    });
  }
  if (route.ErrorBoundary) {
    if (ENABLE_DEV_WARNINGS) {
      if (route.errorElement) {
        warning(
          false,
          "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used."
        );
      }
    }
    Object.assign(updates, {
      errorElement: React3.createElement(route.ErrorBoundary),
      ErrorBoundary: void 0
    });
  }
  return updates;
}
var hydrationRouteProperties = (/* unused pure expression or super */ null && ([
  "HydrateFallback",
  "hydrateFallbackElement"
]));
function createMemoryRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    getContext: opts?.getContext,
    future: opts?.future,
    history: createMemoryHistory({
      initialEntries: opts?.initialEntries,
      initialIndex: opts?.initialIndex
    }),
    hydrationData: opts?.hydrationData,
    routes,
    hydrationRouteProperties,
    mapRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation
  }).initialize();
}
var Deferred = class {
  constructor() {
    this.status = "pending";
    this.promise = new Promise((resolve, reject) => {
      this.resolve = (value) => {
        if (this.status === "pending") {
          this.status = "resolved";
          resolve(value);
        }
      };
      this.reject = (reason) => {
        if (this.status === "pending") {
          this.status = "rejected";
          reject(reason);
        }
      };
    });
  }
};
function shallowDiff(a, b) {
  if (a === b) {
    return false;
  }
  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) {
    return true;
  }
  for (let key of aKeys) {
    if (a[key] !== b[key]) {
      return true;
    }
  }
  return false;
}
function UNSTABLE_TransitionEnabledRouterProvider({
  router,
  flushSync: reactDomFlushSyncImpl,
  unstable_onError
}) {
  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());
  let [revalidating, startRevalidation] = React3.useTransition();
  let [state, setState] = React3.useState(router.state);
  router.__setPendingRerender = (promise) => startRevalidation(
    // @ts-expect-error - need react 19 types for this to be async
    async () => {
      const rerender = await promise;
      startRevalidation(() => {
        rerender();
      });
    }
  );
  let navigator = React3.useMemo(() => {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: (n) => router.navigate(n),
      push: (to, state2, opts) => router.navigate(to, {
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      }),
      replace: (to, state2, opts) => router.navigate(to, {
        replace: true,
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      })
    };
  }, [router]);
  let basename = router.basename || "/";
  let dataRouterContext = React3.useMemo(
    () => ({
      router,
      navigator,
      static: false,
      basename,
      unstable_onError
    }),
    [router, navigator, basename, unstable_onError]
  );
  React3.useLayoutEffect(() => {
    return router.subscribe(
      (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {
        newState.fetchers.forEach((fetcher, key) => {
          if (fetcher.data !== void 0) {
            fetcherData.current.set(key, fetcher.data);
          }
        });
        deletedFetchers.forEach((key) => fetcherData.current.delete(key));
        const diff = shallowDiff(state, newState);
        if (!diff) return;
        if (flushSync) {
          if (reactDomFlushSyncImpl) {
            reactDomFlushSyncImpl(() => setState(newState));
          } else {
            setState(newState);
          }
        } else {
          React3.startTransition(() => {
            setState(newState);
          });
        }
      }
    );
  }, [router, reactDomFlushSyncImpl, state]);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(
    DataRouterStateContext.Provider,
    {
      value: {
        ...state,
        revalidation: revalidating ? "loading" : state.revalidation
      }
    },
    /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(
      Router,
      {
        basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator
      },
      /* @__PURE__ */ React3.createElement(
        MemoizedDataRoutes,
        {
          routes: router.routes,
          future: router.future,
          state,
          unstable_onError
        }
      )
    ))
  )), null);
}
function RouterProvider({
  router,
  flushSync: reactDomFlushSyncImpl,
  unstable_onError
}) {
  let [state, setStateImpl] = React3.useState(router.state);
  let [pendingState, setPendingState] = React3.useState();
  let [vtContext, setVtContext] = React3.useState({
    isTransitioning: false
  });
  let [renderDfd, setRenderDfd] = React3.useState();
  let [transition, setTransition] = React3.useState();
  let [interruption, setInterruption] = React3.useState();
  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());
  let logErrorsAndSetState = React3.useCallback(
    (newState) => {
      setStateImpl((prevState) => {
        if (newState.errors && unstable_onError) {
          Object.entries(newState.errors).forEach(([routeId, error]) => {
            if (prevState.errors?.[routeId] !== error) {
              unstable_onError(error);
            }
          });
        }
        return newState;
      });
    },
    [unstable_onError]
  );
  let setState = React3.useCallback(
    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {
      newState.fetchers.forEach((fetcher, key) => {
        if (fetcher.data !== void 0) {
          fetcherData.current.set(key, fetcher.data);
        }
      });
      deletedFetchers.forEach((key) => fetcherData.current.delete(key));
      warnOnce(
        flushSync === false || reactDomFlushSyncImpl != null,
        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from "react-router/dom"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'
      );
      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === "function";
      warnOnce(
        viewTransitionOpts == null || isViewTransitionAvailable,
        "You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available."
      );
      if (!viewTransitionOpts || !isViewTransitionAvailable) {
        if (reactDomFlushSyncImpl && flushSync) {
          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));
        } else {
          React3.startTransition(() => logErrorsAndSetState(newState));
        }
        return;
      }
      if (reactDomFlushSyncImpl && flushSync) {
        reactDomFlushSyncImpl(() => {
          if (transition) {
            renderDfd && renderDfd.resolve();
            transition.skipTransition();
          }
          setVtContext({
            isTransitioning: true,
            flushSync: true,
            currentLocation: viewTransitionOpts.currentLocation,
            nextLocation: viewTransitionOpts.nextLocation
          });
        });
        let t = router.window.document.startViewTransition(() => {
          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));
        });
        t.finished.finally(() => {
          reactDomFlushSyncImpl(() => {
            setRenderDfd(void 0);
            setTransition(void 0);
            setPendingState(void 0);
            setVtContext({ isTransitioning: false });
          });
        });
        reactDomFlushSyncImpl(() => setTransition(t));
        return;
      }
      if (transition) {
        renderDfd && renderDfd.resolve();
        transition.skipTransition();
        setInterruption({
          state: newState,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      } else {
        setPendingState(newState);
        setVtContext({
          isTransitioning: true,
          flushSync: false,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      }
    },
    [
      router.window,
      reactDomFlushSyncImpl,
      transition,
      renderDfd,
      logErrorsAndSetState
    ]
  );
  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);
  React3.useEffect(() => {
    if (vtContext.isTransitioning && !vtContext.flushSync) {
      setRenderDfd(new Deferred());
    }
  }, [vtContext]);
  React3.useEffect(() => {
    if (renderDfd && pendingState && router.window) {
      let newState = pendingState;
      let renderPromise = renderDfd.promise;
      let transition2 = router.window.document.startViewTransition(async () => {
        React3.startTransition(() => logErrorsAndSetState(newState));
        await renderPromise;
      });
      transition2.finished.finally(() => {
        setRenderDfd(void 0);
        setTransition(void 0);
        setPendingState(void 0);
        setVtContext({ isTransitioning: false });
      });
      setTransition(transition2);
    }
  }, [pendingState, renderDfd, router.window, logErrorsAndSetState]);
  React3.useEffect(() => {
    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {
      renderDfd.resolve();
    }
  }, [renderDfd, transition, state.location, pendingState]);
  React3.useEffect(() => {
    if (!vtContext.isTransitioning && interruption) {
      setPendingState(interruption.state);
      setVtContext({
        isTransitioning: true,
        flushSync: false,
        currentLocation: interruption.currentLocation,
        nextLocation: interruption.nextLocation
      });
      setInterruption(void 0);
    }
  }, [vtContext.isTransitioning, interruption]);
  let navigator = React3.useMemo(() => {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: (n) => router.navigate(n),
      push: (to, state2, opts) => router.navigate(to, {
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      }),
      replace: (to, state2, opts) => router.navigate(to, {
        replace: true,
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      })
    };
  }, [router]);
  let basename = router.basename || "/";
  let dataRouterContext = React3.useMemo(
    () => ({
      router,
      navigator,
      static: false,
      basename,
      unstable_onError
    }),
    [router, navigator, basename, unstable_onError]
  );
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(
    Router,
    {
      basename,
      location: state.location,
      navigationType: state.historyAction,
      navigator
    },
    /* @__PURE__ */ React3.createElement(
      MemoizedDataRoutes,
      {
        routes: router.routes,
        future: router.future,
        state,
        unstable_onError
      }
    )
  ))))), null);
}
var MemoizedDataRoutes = react.memo(DataRoutes);
function DataRoutes({
  routes,
  future,
  state,
  unstable_onError
}) {
  return useRoutesImpl(routes, void 0, state, unstable_onError, future);
}
function MemoryRouter({
  basename,
  children,
  initialEntries,
  initialIndex
}) {
  let historyRef = React3.useRef();
  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries,
      initialIndex,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = React3.useState({
    action: history.action,
    location: history.location
  });
  let setState = React3.useCallback(
    (newState) => {
      React3.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ React3.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function Navigate({
  to,
  replace: replace2,
  state,
  relative
}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    `<Navigate> may be used only in the context of a <Router> component.`
  );
  let { static: isStatic } = React3.useContext(NavigationContext);
  warning(
    !isStatic,
    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`
  );
  let { matches } = React3.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let navigate = useNavigate();
  let path = resolveTo(
    to,
    getResolveToMatches(matches),
    locationPathname,
    relative === "path"
  );
  let jsonPath = JSON.stringify(path);
  React3.useEffect(() => {
    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });
  }, [navigate, jsonPath, relative, replace2, state]);
  return null;
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(props) {
  invariant(
    false,
    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`
  );
}
function Router({
  basename: basenameProp = "/",
  children = null,
  location: locationProp,
  navigationType = "POP" /* Pop */,
  navigator,
  static: staticProp = false
}) {
  invariant(
    !useInRouterContext(),
    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`
  );
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = react.useMemo(
    () => ({
      basename,
      navigator,
      static: staticProp,
      future: {}
    }),
    [basename, navigator, staticProp]
  );
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = react.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  warning(
    locationContext != null,
    `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`
  );
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ react.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ react.createElement(LocationContext.Provider, { children, value: locationContext }));
}
function Routes({
  children,
  location
}) {
  return useRoutes(createRoutesFromChildren(children), location);
}
function Await({
  children,
  errorElement,
  resolve
}) {
  let dataRouterContext = React3.useContext(DataRouterContext);
  return /* @__PURE__ */ React3.createElement(
    AwaitErrorBoundary,
    {
      resolve,
      errorElement,
      unstable_onError: dataRouterContext?.unstable_onError
    },
    /* @__PURE__ */ React3.createElement(ResolveAwait, null, children)
  );
}
var AwaitErrorBoundary = class extends react.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  componentDidCatch(error, errorInfo) {
    if (this.props.unstable_onError) {
      this.props.unstable_onError(error, errorInfo);
    } else {
      console.error(
        "<Await> caught the following error during render",
        error,
        errorInfo
      );
    }
  }
  render() {
    let { children, errorElement, resolve } = this.props;
    let promise = null;
    let status = 0 /* pending */;
    if (!(resolve instanceof Promise)) {
      status = 1 /* success */;
      promise = Promise.resolve();
      Object.defineProperty(promise, "_tracked", { get: () => true });
      Object.defineProperty(promise, "_data", { get: () => resolve });
    } else if (this.state.error) {
      status = 2 /* error */;
      let renderError = this.state.error;
      promise = Promise.reject().catch(() => {
      });
      Object.defineProperty(promise, "_tracked", { get: () => true });
      Object.defineProperty(promise, "_error", { get: () => renderError });
    } else if (resolve._tracked) {
      promise = resolve;
      status = "_error" in promise ? 2 /* error */ : "_data" in promise ? 1 /* success */ : 0 /* pending */;
    } else {
      status = 0 /* pending */;
      Object.defineProperty(resolve, "_tracked", { get: () => true });
      promise = resolve.then(
        (data2) => Object.defineProperty(resolve, "_data", { get: () => data2 }),
        (error) => {
          this.props.unstable_onError?.(error);
          Object.defineProperty(resolve, "_error", { get: () => error });
        }
      );
    }
    if (status === 2 /* error */ && !errorElement) {
      throw promise._error;
    }
    if (status === 2 /* error */) {
      return /* @__PURE__ */ react.createElement(AwaitContext.Provider, { value: promise, children: errorElement });
    }
    if (status === 1 /* success */) {
      return /* @__PURE__ */ react.createElement(AwaitContext.Provider, { value: promise, children });
    }
    throw promise;
  }
};
function ResolveAwait({
  children
}) {
  let data2 = useAsyncValue();
  let toRender = typeof children === "function" ? children(data2) : children;
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath = []) {
  let routes = [];
  React3.Children.forEach(children, (element, index) => {
    if (!React3.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index];
    if (element.type === React3.Fragment) {
      routes.push.apply(
        routes,
        createRoutesFromChildren(element.props.children, treePath)
      );
      return;
    }
    invariant(
      element.type === Route,
      `[${typeof element.type === "string" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
    );
    invariant(
      !element.props.index || !element.props.children,
      "An index route cannot have child routes."
    );
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      middleware: element.props.middleware,
      loader: element.props.loader,
      action: element.props.action,
      hydrateFallbackElement: element.props.hydrateFallbackElement,
      HydrateFallback: element.props.HydrateFallback,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(
        element.props.children,
        treePath
      );
    }
    routes.push(route);
  });
  return routes;
}
var createRoutesFromElements = (/* unused pure expression or super */ null && (createRoutesFromChildren));
function renderMatches(matches) {
  return _renderMatches(matches);
}
function useRouteComponentProps() {
  return {
    params: useParams(),
    loaderData: useLoaderData(),
    actionData: useActionData(),
    matches: useMatches()
  };
}
function WithComponentProps({
  children
}) {
  const props = useRouteComponentProps();
  return React3.cloneElement(children, props);
}
function withComponentProps(Component4) {
  return function WithComponentProps2() {
    const props = useRouteComponentProps();
    return React3.createElement(Component4, props);
  };
}
function useHydrateFallbackProps() {
  return {
    params: useParams(),
    loaderData: useLoaderData(),
    actionData: useActionData()
  };
}
function WithHydrateFallbackProps({
  children
}) {
  const props = useHydrateFallbackProps();
  return React3.cloneElement(children, props);
}
function withHydrateFallbackProps(HydrateFallback) {
  return function WithHydrateFallbackProps2() {
    const props = useHydrateFallbackProps();
    return React3.createElement(HydrateFallback, props);
  };
}
function useErrorBoundaryProps() {
  return {
    params: useParams(),
    loaderData: useLoaderData(),
    actionData: useActionData(),
    error: useRouteError()
  };
}
function WithErrorBoundaryProps({
  children
}) {
  const props = useErrorBoundaryProps();
  return React3.cloneElement(children, props);
}
function withErrorBoundaryProps(ErrorBoundary) {
  return function WithErrorBoundaryProps2() {
    const props = useErrorBoundaryProps();
    return React3.createElement(ErrorBoundary, props);
  };
}

// lib/dom/dom.ts
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
function createSearchParams(init = "") {
  return new URLSearchParams(
    typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {
      let value = init[key];
      return memo2.concat(
        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]
      );
    }, [])
  );
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    defaultSearchParams.forEach((_, key) => {
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    });
  }
  return searchParams;
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null) {
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      );
      _formDataSupportsSubmitter = false;
    } catch (e) {
      _formDataSupportsSubmitter = true;
    }
  }
  return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain"
]);
function getFormEncType(encType) {
  if (encType != null && !supportedFormEncTypes.has(encType)) {
    warning(
      false,
      `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`
    );
    return null;
  }
  return encType;
}
function getFormSubmissionInfo(target, basename) {
  let method;
  let action;
  let encType;
  let formData;
  let body;
  if (isFormElement(target)) {
    let attr = target.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(target);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null) {
      throw new Error(
        `Cannot submit a <button> or <input type="submit"> without a <form>`
      );
    }
    let attr = target.getAttribute("formaction") || form.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(form, target);
    if (!isFormDataSubmitterSupported()) {
      let { name, type, value } = target;
      if (type === "image") {
        let prefix = name ? `${name}.` : "";
        formData.append(`${prefix}x`, "0");
        formData.append(`${prefix}y`, "0");
      } else if (name) {
        formData.append(name, value);
      }
    }
  } else if (isHtmlElement(target)) {
    throw new Error(
      `Cannot submit element that is not <form>, <button>, or <input type="submit|image">`
    );
  } else {
    method = defaultMethod;
    action = null;
    encType = defaultEncType;
    body = target;
  }
  if (formData && encType === "text/plain") {
    body = formData;
    formData = void 0;
  }
  return { action, method: method.toLowerCase(), encType, formData, body };
}

// lib/dom/ssr/single-fetch.tsx


// vendor/turbo-stream-v2/utils.ts
var HOLE = (/* unused pure expression or super */ null && (-1));
var NAN = (/* unused pure expression or super */ null && (-2));
var NEGATIVE_INFINITY = (/* unused pure expression or super */ null && (-3));
var NEGATIVE_ZERO = (/* unused pure expression or super */ null && (-4));
var NULL = (/* unused pure expression or super */ null && (-5));
var POSITIVE_INFINITY = (/* unused pure expression or super */ null && (-6));
var UNDEFINED = (/* unused pure expression or super */ null && (-7));
var TYPE_BIGINT = "B";
var TYPE_DATE = "D";
var TYPE_ERROR = "E";
var TYPE_MAP = "M";
var TYPE_NULL_OBJECT = "N";
var TYPE_PROMISE = "P";
var TYPE_REGEXP = "R";
var TYPE_SET = "S";
var TYPE_SYMBOL = "Y";
var TYPE_URL = "U";
var TYPE_PREVIOUS_RESOLVED = "Z";
var Deferred2 = class {
  constructor() {
    this.promise = new Promise((resolve, reject) => {
      this.resolve = resolve;
      this.reject = reject;
    });
  }
};
function createLineSplittingTransform() {
  const decoder = new TextDecoder();
  let leftover = "";
  return new TransformStream({
    transform(chunk, controller) {
      const str = decoder.decode(chunk, { stream: true });
      const parts = (leftover + str).split("\n");
      leftover = parts.pop() || "";
      for (const part of parts) {
        controller.enqueue(part);
      }
    },
    flush(controller) {
      if (leftover) {
        controller.enqueue(leftover);
      }
    }
  });
}

// vendor/turbo-stream-v2/flatten.ts
function flatten(input) {
  const { indices } = this;
  const existing = indices.get(input);
  if (existing) return [existing];
  if (input === void 0) return UNDEFINED;
  if (input === null) return NULL;
  if (Number.isNaN(input)) return NAN;
  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;
  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;
  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;
  const index = this.index++;
  indices.set(input, index);
  stringify.call(this, input, index);
  return index;
}
function stringify(input, index) {
  const { deferred, plugins, postPlugins } = this;
  const str = this.stringified;
  const stack = [[input, index]];
  while (stack.length > 0) {
    const [input2, index2] = stack.pop();
    const partsForObj = (obj) => Object.keys(obj).map((k) => `"_${flatten.call(this, k)}":${flatten.call(this, obj[k])}`).join(",");
    let error = null;
    switch (typeof input2) {
      case "boolean":
      case "number":
      case "string":
        str[index2] = JSON.stringify(input2);
        break;
      case "bigint":
        str[index2] = `["${TYPE_BIGINT}","${input2}"]`;
        break;
      case "symbol": {
        const keyFor = Symbol.keyFor(input2);
        if (!keyFor) {
          error = new Error(
            "Cannot encode symbol unless created with Symbol.for()"
          );
        } else {
          str[index2] = `["${TYPE_SYMBOL}",${JSON.stringify(keyFor)}]`;
        }
        break;
      }
      case "object": {
        if (!input2) {
          str[index2] = `${NULL}`;
          break;
        }
        const isArray = Array.isArray(input2);
        let pluginHandled = false;
        if (!isArray && plugins) {
          for (const plugin of plugins) {
            const pluginResult = plugin(input2);
            if (Array.isArray(pluginResult)) {
              pluginHandled = true;
              const [pluginIdentifier, ...rest] = pluginResult;
              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
              if (rest.length > 0) {
                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
              }
              str[index2] += "]";
              break;
            }
          }
        }
        if (!pluginHandled) {
          let result = isArray ? "[" : "{";
          if (isArray) {
            for (let i = 0; i < input2.length; i++)
              result += (i ? "," : "") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);
            str[index2] = `${result}]`;
          } else if (input2 instanceof Date) {
            const dateTime = input2.getTime();
            str[index2] = `["${TYPE_DATE}",${Number.isNaN(dateTime) ? JSON.stringify("invalid") : dateTime}]`;
          } else if (input2 instanceof URL) {
            str[index2] = `["${TYPE_URL}",${JSON.stringify(input2.href)}]`;
          } else if (input2 instanceof RegExp) {
            str[index2] = `["${TYPE_REGEXP}",${JSON.stringify(
              input2.source
            )},${JSON.stringify(input2.flags)}]`;
          } else if (input2 instanceof Set) {
            if (input2.size > 0) {
              str[index2] = `["${TYPE_SET}",${[...input2].map((val) => flatten.call(this, val)).join(",")}]`;
            } else {
              str[index2] = `["${TYPE_SET}"]`;
            }
          } else if (input2 instanceof Map) {
            if (input2.size > 0) {
              str[index2] = `["${TYPE_MAP}",${[...input2].flatMap(([k, v]) => [
                flatten.call(this, k),
                flatten.call(this, v)
              ]).join(",")}]`;
            } else {
              str[index2] = `["${TYPE_MAP}"]`;
            }
          } else if (input2 instanceof Promise) {
            str[index2] = `["${TYPE_PROMISE}",${index2}]`;
            deferred[index2] = input2;
          } else if (input2 instanceof Error) {
            str[index2] = `["${TYPE_ERROR}",${JSON.stringify(input2.message)}`;
            if (input2.name !== "Error") {
              str[index2] += `,${JSON.stringify(input2.name)}`;
            }
            str[index2] += "]";
          } else if (Object.getPrototypeOf(input2) === null) {
            str[index2] = `["${TYPE_NULL_OBJECT}",{${partsForObj(input2)}}]`;
          } else if (isPlainObject(input2)) {
            str[index2] = `{${partsForObj(input2)}}`;
          } else {
            error = new Error("Cannot encode object with prototype");
          }
        }
        break;
      }
      default: {
        const isArray = Array.isArray(input2);
        let pluginHandled = false;
        if (!isArray && plugins) {
          for (const plugin of plugins) {
            const pluginResult = plugin(input2);
            if (Array.isArray(pluginResult)) {
              pluginHandled = true;
              const [pluginIdentifier, ...rest] = pluginResult;
              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
              if (rest.length > 0) {
                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
              }
              str[index2] += "]";
              break;
            }
          }
        }
        if (!pluginHandled) {
          error = new Error("Cannot encode function or unexpected type");
        }
      }
    }
    if (error) {
      let pluginHandled = false;
      if (postPlugins) {
        for (const plugin of postPlugins) {
          const pluginResult = plugin(input2);
          if (Array.isArray(pluginResult)) {
            pluginHandled = true;
            const [pluginIdentifier, ...rest] = pluginResult;
            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
            if (rest.length > 0) {
              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
            }
            str[index2] += "]";
            break;
          }
        }
      }
      if (!pluginHandled) {
        throw error;
      }
    }
  }
}
var objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function isPlainObject(thing) {
  const proto = Object.getPrototypeOf(thing);
  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === objectProtoNames;
}

// vendor/turbo-stream-v2/unflatten.ts
var globalObj = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : void 0;
function unflatten(parsed) {
  const { hydrated, values } = this;
  if (typeof parsed === "number") return hydrate.call(this, parsed);
  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();
  const startIndex = values.length;
  for (const value of parsed) {
    values.push(value);
  }
  hydrated.length = values.length;
  return hydrate.call(this, startIndex);
}
function hydrate(index) {
  const { hydrated, values, deferred, plugins } = this;
  let result;
  const stack = [
    [
      index,
      (v) => {
        result = v;
      }
    ]
  ];
  let postRun = [];
  while (stack.length > 0) {
    const [index2, set] = stack.pop();
    switch (index2) {
      case UNDEFINED:
        set(void 0);
        continue;
      case NULL:
        set(null);
        continue;
      case NAN:
        set(NaN);
        continue;
      case POSITIVE_INFINITY:
        set(Infinity);
        continue;
      case NEGATIVE_INFINITY:
        set(-Infinity);
        continue;
      case NEGATIVE_ZERO:
        set(-0);
        continue;
    }
    if (hydrated[index2]) {
      set(hydrated[index2]);
      continue;
    }
    const value = values[index2];
    if (!value || typeof value !== "object") {
      hydrated[index2] = value;
      set(value);
      continue;
    }
    if (Array.isArray(value)) {
      if (typeof value[0] === "string") {
        const [type, b, c] = value;
        switch (type) {
          case TYPE_DATE:
            set(hydrated[index2] = new Date(b));
            continue;
          case TYPE_URL:
            set(hydrated[index2] = new URL(b));
            continue;
          case TYPE_BIGINT:
            set(hydrated[index2] = BigInt(b));
            continue;
          case TYPE_REGEXP:
            set(hydrated[index2] = new RegExp(b, c));
            continue;
          case TYPE_SYMBOL:
            set(hydrated[index2] = Symbol.for(b));
            continue;
          case TYPE_SET:
            const newSet = /* @__PURE__ */ new Set();
            hydrated[index2] = newSet;
            for (let i = value.length - 1; i > 0; i--)
              stack.push([
                value[i],
                (v) => {
                  newSet.add(v);
                }
              ]);
            set(newSet);
            continue;
          case TYPE_MAP:
            const map = /* @__PURE__ */ new Map();
            hydrated[index2] = map;
            for (let i = value.length - 2; i > 0; i -= 2) {
              const r = [];
              stack.push([
                value[i + 1],
                (v) => {
                  r[1] = v;
                }
              ]);
              stack.push([
                value[i],
                (k) => {
                  r[0] = k;
                }
              ]);
              postRun.push(() => {
                map.set(r[0], r[1]);
              });
            }
            set(map);
            continue;
          case TYPE_NULL_OBJECT:
            const obj = /* @__PURE__ */ Object.create(null);
            hydrated[index2] = obj;
            for (const key of Object.keys(b).reverse()) {
              const r = [];
              stack.push([
                b[key],
                (v) => {
                  r[1] = v;
                }
              ]);
              stack.push([
                Number(key.slice(1)),
                (k) => {
                  r[0] = k;
                }
              ]);
              postRun.push(() => {
                obj[r[0]] = r[1];
              });
            }
            set(obj);
            continue;
          case TYPE_PROMISE:
            if (hydrated[b]) {
              set(hydrated[index2] = hydrated[b]);
            } else {
              const d = new Deferred2();
              deferred[b] = d;
              set(hydrated[index2] = d.promise);
            }
            continue;
          case TYPE_ERROR:
            const [, message, errorType] = value;
            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);
            hydrated[index2] = error;
            set(error);
            continue;
          case TYPE_PREVIOUS_RESOLVED:
            set(hydrated[index2] = hydrated[b]);
            continue;
          default:
            if (Array.isArray(plugins)) {
              const r = [];
              const vals = value.slice(1);
              for (let i = 0; i < vals.length; i++) {
                const v = vals[i];
                stack.push([
                  v,
                  (v2) => {
                    r[i] = v2;
                  }
                ]);
              }
              postRun.push(() => {
                for (const plugin of plugins) {
                  const result2 = plugin(value[0], ...r);
                  if (result2) {
                    set(hydrated[index2] = result2.value);
                    return;
                  }
                }
                throw new SyntaxError();
              });
              continue;
            }
            throw new SyntaxError();
        }
      } else {
        const array = [];
        hydrated[index2] = array;
        for (let i = 0; i < value.length; i++) {
          const n = value[i];
          if (n !== HOLE) {
            stack.push([
              n,
              (v) => {
                array[i] = v;
              }
            ]);
          }
        }
        set(array);
        continue;
      }
    } else {
      const object = {};
      hydrated[index2] = object;
      for (const key of Object.keys(value).reverse()) {
        const r = [];
        stack.push([
          value[key],
          (v) => {
            r[1] = v;
          }
        ]);
        stack.push([
          Number(key.slice(1)),
          (k) => {
            r[0] = k;
          }
        ]);
        postRun.push(() => {
          object[r[0]] = r[1];
        });
      }
      set(object);
      continue;
    }
  }
  while (postRun.length > 0) {
    postRun.pop()();
  }
  return result;
}

// vendor/turbo-stream-v2/turbo-stream.ts
async function decode(readable, options) {
  const { plugins } = options ?? {};
  const done = new Deferred2();
  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();
  const decoder = {
    values: [],
    hydrated: [],
    deferred: {},
    plugins
  };
  const decoded = await decodeInitial.call(decoder, reader);
  let donePromise = done.promise;
  if (decoded.done) {
    done.resolve();
  } else {
    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {
      for (const deferred of Object.values(decoder.deferred)) {
        deferred.reject(reason);
      }
      done.reject(reason);
    });
  }
  return {
    done: donePromise.then(() => reader.closed),
    value: decoded.value
  };
}
async function decodeInitial(reader) {
  const read = await reader.read();
  if (!read.value) {
    throw new SyntaxError();
  }
  let line;
  try {
    line = JSON.parse(read.value);
  } catch (reason) {
    throw new SyntaxError();
  }
  return {
    done: read.done,
    value: unflatten.call(this, line)
  };
}
async function decodeDeferred(reader) {
  let read = await reader.read();
  while (!read.done) {
    if (!read.value) continue;
    const line = read.value;
    switch (line[0]) {
      case TYPE_PROMISE: {
        const colonIndex = line.indexOf(":");
        const deferredId = Number(line.slice(1, colonIndex));
        const deferred = this.deferred[deferredId];
        if (!deferred) {
          throw new Error(`Deferred ID ${deferredId} not found in stream`);
        }
        const lineData = line.slice(colonIndex + 1);
        let jsonLine;
        try {
          jsonLine = JSON.parse(lineData);
        } catch (reason) {
          throw new SyntaxError();
        }
        const value = unflatten.call(this, jsonLine);
        deferred.resolve(value);
        break;
      }
      case TYPE_ERROR: {
        const colonIndex = line.indexOf(":");
        const deferredId = Number(line.slice(1, colonIndex));
        const deferred = this.deferred[deferredId];
        if (!deferred) {
          throw new Error(`Deferred ID ${deferredId} not found in stream`);
        }
        const lineData = line.slice(colonIndex + 1);
        let jsonLine;
        try {
          jsonLine = JSON.parse(lineData);
        } catch (reason) {
          throw new SyntaxError();
        }
        const value = unflatten.call(this, jsonLine);
        deferred.reject(value);
        break;
      }
      default:
        throw new SyntaxError();
    }
    read = await reader.read();
  }
}
function encode(input, options) {
  const { plugins, postPlugins, signal } = options ?? {};
  const encoder = {
    deferred: {},
    index: 0,
    indices: /* @__PURE__ */ new Map(),
    stringified: [],
    plugins,
    postPlugins,
    signal
  };
  const textEncoder = new TextEncoder();
  let lastSentIndex = 0;
  const readable = new ReadableStream({
    async start(controller) {
      const id = flatten.call(encoder, input);
      if (Array.isArray(id)) {
        throw new Error("This should never happen");
      }
      if (id < 0) {
        controller.enqueue(textEncoder.encode(`${id}
`));
      } else {
        controller.enqueue(
          textEncoder.encode(`[${encoder.stringified.join(",")}]
`)
        );
        lastSentIndex = encoder.stringified.length - 1;
      }
      const seenPromises = /* @__PURE__ */ new WeakSet();
      if (Object.keys(encoder.deferred).length) {
        let raceDone;
        const racePromise = new Promise((resolve, reject) => {
          raceDone = resolve;
          if (signal) {
            const rejectPromise = () => reject(signal.reason || new Error("Signal was aborted."));
            if (signal.aborted) {
              rejectPromise();
            } else {
              signal.addEventListener("abort", (event) => {
                rejectPromise();
              });
            }
          }
        });
        while (Object.keys(encoder.deferred).length > 0) {
          for (const [deferredId, deferred] of Object.entries(
            encoder.deferred
          )) {
            if (seenPromises.has(deferred)) continue;
            seenPromises.add(
              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>
              encoder.deferred[Number(deferredId)] = Promise.race([
                racePromise,
                deferred
              ]).then(
                (resolved) => {
                  const id2 = flatten.call(encoder, resolved);
                  if (Array.isArray(id2)) {
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_PROMISE}${deferredId}:[["${TYPE_PREVIOUS_RESOLVED}",${id2[0]}]]
`
                      )
                    );
                    encoder.index++;
                    lastSentIndex++;
                  } else if (id2 < 0) {
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_PROMISE}${deferredId}:${id2}
`
                      )
                    );
                  } else {
                    const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_PROMISE}${deferredId}:[${values}]
`
                      )
                    );
                    lastSentIndex = encoder.stringified.length - 1;
                  }
                },
                (reason) => {
                  if (!reason || typeof reason !== "object" || !(reason instanceof Error)) {
                    reason = new Error("An unknown error occurred");
                  }
                  const id2 = flatten.call(encoder, reason);
                  if (Array.isArray(id2)) {
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_ERROR}${deferredId}:[["${TYPE_PREVIOUS_RESOLVED}",${id2[0]}]]
`
                      )
                    );
                    encoder.index++;
                    lastSentIndex++;
                  } else if (id2 < 0) {
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_ERROR}${deferredId}:${id2}
`
                      )
                    );
                  } else {
                    const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                    controller.enqueue(
                      textEncoder.encode(
                        `${TYPE_ERROR}${deferredId}:[${values}]
`
                      )
                    );
                    lastSentIndex = encoder.stringified.length - 1;
                  }
                }
              ).finally(() => {
                delete encoder.deferred[Number(deferredId)];
              })
            );
          }
          await Promise.race(Object.values(encoder.deferred));
        }
        raceDone();
      }
      await Promise.all(Object.values(encoder.deferred));
      controller.close();
    }
  });
  return readable;
}

// lib/dom/ssr/data.ts
async function createRequestInit(request) {
  let init = { signal: request.signal };
  if (request.method !== "GET") {
    init.method = request.method;
    let contentType = request.headers.get("Content-Type");
    if (contentType && /\bapplication\/json\b/.test(contentType)) {
      init.headers = { "Content-Type": contentType };
      init.body = JSON.stringify(await request.json());
    } else if (contentType && /\btext\/plain\b/.test(contentType)) {
      init.headers = { "Content-Type": contentType };
      init.body = await request.text();
    } else if (contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType)) {
      init.body = new URLSearchParams(await request.text());
    } else {
      init.body = await request.formData();
    }
  }
  return init;
}

// lib/dom/ssr/markup.ts
var ESCAPE_LOOKUP = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var ESCAPE_REGEX = /[&><\u2028\u2029]/g;
function escapeHtml(html) {
  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
}

// lib/dom/ssr/invariant.ts
function invariant2(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}

// lib/dom/ssr/single-fetch.tsx
var SingleFetchRedirectSymbol = Symbol("SingleFetchRedirect");
var SingleFetchNoResultError = class extends (/* unused pure expression or super */ null && (Error)) {
};
var SINGLE_FETCH_REDIRECT_STATUS = 202;
var NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);
function StreamTransfer({
  context,
  identifier,
  reader,
  textDecoder,
  nonce
}) {
  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {
    return null;
  }
  if (!context.renderMeta.streamCache) {
    context.renderMeta.streamCache = {};
  }
  let { streamCache } = context.renderMeta;
  let promise = streamCache[identifier];
  if (!promise) {
    promise = streamCache[identifier] = reader.read().then((result) => {
      streamCache[identifier].result = {
        done: result.done,
        value: textDecoder.decode(result.value, { stream: true })
      };
    }).catch((e) => {
      streamCache[identifier].error = e;
    });
  }
  if (promise.error) {
    throw promise.error;
  }
  if (promise.result === void 0) {
    throw promise;
  }
  let { done, value } = promise.result;
  let scriptTag = value ? /* @__PURE__ */ React4.createElement(
    "script",
    {
      nonce,
      dangerouslySetInnerHTML: {
        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(
          JSON.stringify(value)
        )});`
      }
    }
  ) : null;
  if (done) {
    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(
      "script",
      {
        nonce,
        dangerouslySetInnerHTML: {
          __html: `window.__reactRouterContext.streamController.close();`
        }
      }
    ));
  } else {
    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(
      StreamTransfer,
      {
        context,
        identifier: identifier + 1,
        reader,
        textDecoder,
        nonce
      }
    )));
  }
}
function getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {
  let dataStrategy = getSingleFetchDataStrategyImpl(
    getRouter,
    (match) => {
      let manifestRoute = manifest.routes[match.route.id];
      invariant2(manifestRoute, "Route not found in manifest");
      let routeModule = routeModules[match.route.id];
      return {
        hasLoader: manifestRoute.hasLoader,
        hasClientLoader: manifestRoute.hasClientLoader,
        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)
      };
    },
    fetchAndDecodeViaTurboStream,
    ssr,
    basename
  );
  return async (args) => args.runClientMiddleware(dataStrategy);
}
function getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {
  return async (args) => {
    let { request, matches, fetcherKey } = args;
    let router = getRouter();
    if (request.method !== "GET") {
      return singleFetchActionStrategy(args, fetchAndDecode, basename);
    }
    let foundRevalidatingServerLoader = matches.some((m) => {
      let { hasLoader, hasClientLoader } = getRouteInfo(m);
      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;
    });
    if (!ssr && !foundRevalidatingServerLoader) {
      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);
    }
    if (fetcherKey) {
      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);
    }
    return singleFetchLoaderNavigationStrategy(
      args,
      router,
      getRouteInfo,
      fetchAndDecode,
      ssr,
      basename,
      shouldAllowOptOut
    );
  };
}
async function singleFetchActionStrategy(args, fetchAndDecode, basename) {
  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());
  invariant2(actionMatch, "No action match found");
  let actionStatus = void 0;
  let result = await actionMatch.resolve(async (handler) => {
    let result2 = await handler(async () => {
      let { data: data2, status } = await fetchAndDecode(args, basename, [
        actionMatch.route.id
      ]);
      actionStatus = status;
      return unwrapSingleFetchResult(data2, actionMatch.route.id);
    });
    return result2;
  });
  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {
    return { [actionMatch.route.id]: result };
  }
  return {
    [actionMatch.route.id]: {
      type: result.type,
      result: data(result.result, actionStatus)
    }
  };
}
async function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {
  let matchesToLoad = args.matches.filter(
    (m) => m.unstable_shouldCallHandler()
  );
  let results = {};
  await Promise.all(
    matchesToLoad.map(
      (m) => m.resolve(async (handler) => {
        try {
          let { hasClientLoader } = getRouteInfo(m);
          let routeId = m.route.id;
          let result = hasClientLoader ? await handler(async () => {
            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);
            return unwrapSingleFetchResult(data2, routeId);
          }) : await handler();
          results[m.route.id] = { type: "data", result };
        } catch (e) {
          results[m.route.id] = { type: "error", result: e };
        }
      })
    )
  );
  return results;
}
async function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {
  let routesParams = /* @__PURE__ */ new Set();
  let foundOptOutRoute = false;
  let routeDfds = args.matches.map(() => createDeferred2());
  let singleFetchDfd = createDeferred2();
  let results = {};
  let resolvePromise = Promise.all(
    args.matches.map(
      async (m, i) => m.resolve(async (handler) => {
        routeDfds[i].resolve();
        let routeId = m.route.id;
        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);
        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;
        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);
        if (!shouldCall) {
          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,
          hasLoader && // for a route with a server loader,
          hasShouldRevalidate === true);
          return;
        }
        if (shouldAllowOptOut(m) && hasClientLoader) {
          if (hasLoader) {
            foundOptOutRoute = true;
          }
          try {
            let result = await handler(async () => {
              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);
              return unwrapSingleFetchResult(data2, routeId);
            });
            results[routeId] = { type: "data", result };
          } catch (e) {
            results[routeId] = { type: "error", result: e };
          }
          return;
        }
        if (hasLoader) {
          routesParams.add(routeId);
        }
        try {
          let result = await handler(async () => {
            let data2 = await singleFetchDfd.promise;
            return unwrapSingleFetchResult(data2, routeId);
          });
          results[routeId] = { type: "data", result };
        } catch (e) {
          results[routeId] = { type: "error", result: e };
        }
      })
    )
  );
  await Promise.all(routeDfds.map((d) => d.promise));
  let isInitialLoad = !router.state.initialized && router.state.navigation.state === "idle";
  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {
    singleFetchDfd.resolve({ routes: {} });
  } else {
    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;
    try {
      let data2 = await fetchAndDecode(args, basename, targetRoutes);
      singleFetchDfd.resolve(data2.data);
    } catch (e) {
      singleFetchDfd.reject(e);
    }
  }
  await resolvePromise;
  await bubbleMiddlewareErrors(
    singleFetchDfd.promise,
    args.matches,
    routesParams,
    results
  );
  return results;
}
async function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {
  try {
    let middlewareError;
    let fetchedData = await singleFetchPromise;
    if ("routes" in fetchedData) {
      for (let match of matches) {
        if (match.route.id in fetchedData.routes) {
          let routeResult = fetchedData.routes[match.route.id];
          if ("error" in routeResult) {
            middlewareError = routeResult.error;
            if (results[match.route.id]?.result == null) {
              results[match.route.id] = {
                type: "error",
                result: middlewareError
              };
            }
            break;
          }
        }
      }
    }
    if (middlewareError !== void 0) {
      Array.from(routesParams.values()).forEach((routeId) => {
        if (results[routeId].result instanceof SingleFetchNoResultError) {
          results[routeId].result = middlewareError;
        }
      });
    }
  } catch (e) {
  }
}
async function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {
  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());
  invariant2(fetcherMatch, "No fetcher match found");
  let routeId = fetcherMatch.route.id;
  let result = await fetcherMatch.resolve(
    async (handler) => handler(async () => {
      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);
      return unwrapSingleFetchResult(data2, routeId);
    })
  );
  return { [fetcherMatch.route.id]: result };
}
function stripIndexParam(url) {
  let indexValues = url.searchParams.getAll("index");
  url.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues) {
    if (indexValue) {
      indexValuesToKeep.push(indexValue);
    }
  }
  for (let toKeep of indexValuesToKeep) {
    url.searchParams.append("index", toKeep);
  }
  return url;
}
function singleFetchUrl(reqUrl, basename, extension) {
  let url = typeof reqUrl === "string" ? new URL(
    reqUrl,
    // This can be called during the SSR flow via PrefetchPageLinksImpl so
    // don't assume window is available
    typeof window === "undefined" ? "server://singlefetch/" : window.location.origin
  ) : reqUrl;
  if (url.pathname === "/") {
    url.pathname = `_root.${extension}`;
  } else if (basename && stripBasename(url.pathname, basename) === "/") {
    url.pathname = `${basename.replace(/\/$/, "")}/_root.${extension}`;
  } else {
    url.pathname = `${url.pathname.replace(/\/$/, "")}.${extension}`;
  }
  return url;
}
async function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {
  let { request } = args;
  let url = singleFetchUrl(request.url, basename, "data");
  if (request.method === "GET") {
    url = stripIndexParam(url);
    if (targetRoutes) {
      url.searchParams.set("_routes", targetRoutes.join(","));
    }
  }
  let res = await fetch(url, await createRequestInit(request));
  if (res.status >= 400 && !res.headers.has("X-Remix-Response")) {
    throw new ErrorResponseImpl(res.status, res.statusText, await res.text());
  }
  if (res.status === 204 && res.headers.has("X-Remix-Redirect")) {
    return {
      status: SINGLE_FETCH_REDIRECT_STATUS,
      data: {
        redirect: {
          redirect: res.headers.get("X-Remix-Redirect"),
          status: Number(res.headers.get("X-Remix-Status") || "302"),
          revalidate: res.headers.get("X-Remix-Revalidate") === "true",
          reload: res.headers.get("X-Remix-Reload-Document") === "true",
          replace: res.headers.get("X-Remix-Replace") === "true"
        }
      }
    };
  }
  if (NO_BODY_STATUS_CODES.has(res.status)) {
    let routes = {};
    if (targetRoutes && request.method !== "GET") {
      routes[targetRoutes[0]] = { data: void 0 };
    }
    return {
      status: res.status,
      data: { routes }
    };
  }
  invariant2(res.body, "No response body to decode");
  try {
    let decoded = await decodeViaTurboStream(res.body, window);
    let data2;
    if (request.method === "GET") {
      let typed = decoded.value;
      if (SingleFetchRedirectSymbol in typed) {
        data2 = { redirect: typed[SingleFetchRedirectSymbol] };
      } else {
        data2 = { routes: typed };
      }
    } else {
      let typed = decoded.value;
      let routeId = targetRoutes?.[0];
      invariant2(routeId, "No routeId found for single fetch call decoding");
      if ("redirect" in typed) {
        data2 = { redirect: typed };
      } else {
        data2 = { routes: { [routeId]: typed } };
      }
    }
    return { status: res.status, data: data2 };
  } catch (e) {
    throw new Error("Unable to decode turbo-stream response");
  }
}
function decodeViaTurboStream(body, global) {
  return decode(body, {
    plugins: [
      (type, ...rest) => {
        if (type === "SanitizedError") {
          let [name, message, stack] = rest;
          let Constructor = Error;
          if (name && name in global && typeof global[name] === "function") {
            Constructor = global[name];
          }
          let error = new Constructor(message);
          error.stack = stack;
          return { value: error };
        }
        if (type === "ErrorResponse") {
          let [data2, status, statusText] = rest;
          return {
            value: new ErrorResponseImpl(status, statusText, data2)
          };
        }
        if (type === "SingleFetchRedirect") {
          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };
        }
        if (type === "SingleFetchClassInstance") {
          return { value: rest[0] };
        }
        if (type === "SingleFetchFallback") {
          return { value: void 0 };
        }
      }
    ]
  });
}
function unwrapSingleFetchResult(result, routeId) {
  if ("redirect" in result) {
    let {
      redirect: location,
      revalidate,
      reload,
      replace: replace2,
      status
    } = result.redirect;
    throw redirect(location, {
      status,
      headers: {
        // Three R's of redirecting (lol Veep)
        ...revalidate ? { "X-Remix-Revalidate": "yes" } : null,
        ...reload ? { "X-Remix-Reload-Document": "yes" } : null,
        ...replace2 ? { "X-Remix-Replace": "yes" } : null
      }
    });
  }
  let routeResult = result.routes[routeId];
  if (routeResult == null) {
    throw new SingleFetchNoResultError(
      `No result found for routeId "${routeId}"`
    );
  } else if ("error" in routeResult) {
    throw routeResult.error;
  } else if ("data" in routeResult) {
    return routeResult.data;
  } else {
    throw new Error(`Invalid response found for routeId "${routeId}"`);
  }
}
function createDeferred2() {
  let resolve;
  let reject;
  let promise = new Promise((res, rej) => {
    resolve = async (val) => {
      res(val);
      try {
        await promise;
      } catch (e) {
      }
    };
    reject = async (error) => {
      rej(error);
      try {
        await promise;
      } catch (e) {
      }
    };
  });
  return {
    promise,
    //@ts-ignore
    resolve,
    //@ts-ignore
    reject
  };
}

// lib/dom/ssr/errorBoundaries.tsx


// lib/dom/ssr/components.tsx


// lib/dom/ssr/routeModules.ts
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache) {
    return routeModulesCache[route.id];
  }
  try {
    let routeModule = await import(
      /* @vite-ignore */
      /* webpackIgnore: true */
      route.module
    );
    routeModulesCache[route.id] = routeModule;
    return routeModule;
  } catch (error) {
    console.error(
      `Error loading route module \`${route.module}\`, reloading page...`
    );
    console.error(error);
    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error
    /* unsupported import.meta.hot */ undefined) {}
    window.location.reload();
    return new Promise(() => {
    });
  }
}

// lib/dom/ssr/links.ts
function getKeyedLinksForMatches(matches, routeModules, manifest) {
  let descriptors = matches.map((match) => {
    let module = routeModules[match.route.id];
    let route = manifest.routes[match.route.id];
    return [
      route && route.css ? route.css.map((href) => ({ rel: "stylesheet", href })) : [],
      module?.links?.() || []
    ];
  }).flat(2);
  let preloads = getModuleLinkHrefs(matches, manifest);
  return dedupeLinkDescriptors(descriptors, preloads);
}
function getRouteCssDescriptors(route) {
  if (!route.css) return [];
  return route.css.map((href) => ({ rel: "stylesheet", href }));
}
async function prefetchRouteCss(route) {
  if (!route.css) return;
  let descriptors = getRouteCssDescriptors(route);
  await Promise.all(descriptors.map(prefetchStyleLink));
}
async function prefetchStyleLinks(route, routeModule) {
  if (!route.css && !routeModule.links || !isPreloadSupported()) return;
  let descriptors = [];
  if (route.css) {
    descriptors.push(...getRouteCssDescriptors(route));
  }
  if (routeModule.links) {
    descriptors.push(...routeModule.links());
  }
  if (descriptors.length === 0) return;
  let styleLinks = [];
  for (let descriptor of descriptors) {
    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") {
      styleLinks.push({
        ...descriptor,
        rel: "preload",
        as: "style"
      });
    }
  }
  await Promise.all(styleLinks.map(prefetchStyleLink));
}
async function prefetchStyleLink(descriptor) {
  return new Promise((resolve) => {
    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(
      `link[rel="stylesheet"][href="${descriptor.href}"]`
    )) {
      return resolve();
    }
    let link = document.createElement("link");
    Object.assign(link, descriptor);
    function removeLink() {
      if (document.head.contains(link)) {
        document.head.removeChild(link);
      }
    }
    link.onload = () => {
      removeLink();
      resolve();
    };
    link.onerror = () => {
      removeLink();
      resolve();
    };
    document.head.appendChild(link);
  });
}
function isPageLinkDescriptor(object) {
  return object != null && typeof object.page === "string";
}
function isHtmlLinkDescriptor(object) {
  if (object == null) {
    return false;
  }
  if (object.href == null) {
    return object.rel === "preload" && typeof object.imageSrcSet === "string" && typeof object.imageSizes === "string";
  }
  return typeof object.rel === "string" && typeof object.href === "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
  let links = await Promise.all(
    matches.map(async (match) => {
      let route = manifest.routes[match.route.id];
      if (route) {
        let mod = await loadRouteModule(route, routeModules);
        return mod.links ? mod.links() : [];
      }
      return [];
    })
  );
  return dedupeLinkDescriptors(
    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map(
      (link) => link.rel === "stylesheet" ? { ...link, rel: "prefetch", as: "style" } : { ...link, rel: "prefetch" }
    )
  );
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
  let isNew = (match, index) => {
    if (!currentMatches[index]) return true;
    return match.route.id !== currentMatches[index].route.id;
  };
  let matchPathChanged = (match, index) => {
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      currentMatches[index].route.path?.endsWith("*") && currentMatches[index].params["*"] !== match.params["*"]
    );
  };
  if (mode === "assets") {
    return nextMatches.filter(
      (match, index) => isNew(match, index) || matchPathChanged(match, index)
    );
  }
  if (mode === "data") {
    return nextMatches.filter((match, index) => {
      let manifestRoute = manifest.routes[match.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return false;
      }
      if (isNew(match, index) || matchPathChanged(match, index)) {
        return true;
      }
      if (match.route.shouldRevalidate) {
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(
            location.pathname + location.search + location.hash,
            window.origin
          ),
          currentParams: currentMatches[0]?.params || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: true
        });
        if (typeof routeChoice === "boolean") {
          return routeChoice;
        }
      }
      return true;
    });
  }
  return [];
}
function getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {
  return dedupeHrefs(
    matches.map((match) => {
      let route = manifest.routes[match.route.id];
      if (!route) return [];
      let hrefs = [route.module];
      if (route.clientActionModule) {
        hrefs = hrefs.concat(route.clientActionModule);
      }
      if (route.clientLoaderModule) {
        hrefs = hrefs.concat(route.clientLoaderModule);
      }
      if (includeHydrateFallback && route.hydrateFallbackModule) {
        hrefs = hrefs.concat(route.hydrateFallbackModule);
      }
      if (route.imports) {
        hrefs = hrefs.concat(route.imports);
      }
      return hrefs;
    }).flat(1)
  );
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function sortKeys(obj) {
  let sorted = {};
  let keys = Object.keys(obj).sort();
  for (let key of keys) {
    sorted[key] = obj[key];
  }
  return sorted;
}
function dedupeLinkDescriptors(descriptors, preloads) {
  let set = /* @__PURE__ */ new Set();
  let preloadsSet = new Set(preloads);
  return descriptors.reduce((deduped, descriptor) => {
    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href);
    if (alreadyModulePreload) {
      return deduped;
    }
    let key = JSON.stringify(sortKeys(descriptor));
    if (!set.has(key)) {
      set.add(key);
      deduped.push({ key, link: descriptor });
    }
    return deduped;
  }, []);
}
var _isPreloadSupported;
function isPreloadSupported() {
  if (_isPreloadSupported !== void 0) {
    return _isPreloadSupported;
  }
  let el = document.createElement("link");
  _isPreloadSupported = el.relList.supports("preload");
  el = null;
  return _isPreloadSupported;
}

// lib/dom/ssr/fog-of-war.ts


// lib/dom/ssr/routes.tsx


// lib/dom/ssr/fallback.tsx

function RemixRootDefaultHydrateFallback() {
  return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: "Loading...", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React5.createElement(
    "script",
    {
      dangerouslySetInnerHTML: {
        __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this " +
                "when your app is loading JS modules and/or running \`clientLoader\` " +
                "functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback " +
                "for more information."
              );
            `
      }
    }
  ) : null);
}

// lib/dom/ssr/routes.tsx
function groupRoutesByParentId(manifest) {
  let routes = {};
  Object.values(manifest).forEach((route) => {
    if (route) {
      let parentId = route.parentId || "";
      if (!routes[parentId]) {
        routes[parentId] = [];
      }
      routes[parentId].push(route);
    }
  });
  return routes;
}
function getRouteComponents(route, routeModule, isSpaMode) {
  let Component4 = getRouteModuleComponent(routeModule);
  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === "root") ? routeModule.HydrateFallback : route.id === "root" ? RemixRootDefaultHydrateFallback : void 0;
  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === "root" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;
  if (route.id === "root" && routeModule.Layout) {
    return {
      ...Component4 ? {
        element: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(Component4, null))
      } : { Component: Component4 },
      ...ErrorBoundary ? {
        errorElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(ErrorBoundary, null))
      } : { ErrorBoundary },
      ...HydrateFallback ? {
        hydrateFallbackElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(HydrateFallback, null))
      } : { HydrateFallback }
    };
  }
  return { Component: Component4, ErrorBoundary, HydrateFallback };
}
function createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {
  return (routesByParentId[parentId] || []).map((route) => {
    let routeModule = routeModules[route.id];
    invariant2(
      routeModule,
      "No `routeModule` available to create server routes"
    );
    let dataRoute = {
      ...getRouteComponents(route, routeModule, isSpaMode),
      caseSensitive: route.caseSensitive,
      id: route.id,
      index: route.index,
      path: route.path,
      handle: routeModule.handle,
      // For SPA Mode, all routes are lazy except root.  However we tell the
      // router root is also lazy here too since we don't need a full
      // implementation - we just need a `lazy` prop to tell the RR rendering
      // where to stop which is always at the root route in SPA mode
      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,
      // For partial hydration rendering, we need to indicate when the route
      // has a loader/clientLoader, but it won't ever be called during the static
      // render, so just give it a no-op function so we can render down to the
      // proper fallback
      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0
      // We don't need middleware/action/shouldRevalidate on these routes since
      // they're for a static render
    };
    let children = createServerRoutes(
      manifest,
      routeModules,
      future,
      isSpaMode,
      route.id,
      routesByParentId,
      spaModeLazyPromise
    );
    if (children.length > 0) dataRoute.children = children;
    return dataRoute;
  });
}
function createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {
  return createClientRoutes(
    manifest,
    routeModulesCache,
    initialState,
    ssr,
    isSpaMode,
    "",
    groupRoutesByParentId(manifest),
    needsRevalidation
  );
}
function preventInvalidServerHandlerCall(type, route) {
  if (type === "loader" && !route.hasLoader || type === "action" && !route.hasAction) {
    let fn = type === "action" ? "serverAction()" : "serverLoader()";
    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: "${route.id}")`;
    console.error(msg);
    throw new ErrorResponseImpl(400, "Bad Request", new Error(msg), true);
  }
}
function noActionDefinedError(type, routeId) {
  let article = type === "clientAction" ? "a" : "an";
  let msg = `Route "${routeId}" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \`${type}\` function to the route`;
  console.error(msg);
  throw new ErrorResponseImpl(405, "Method Not Allowed", new Error(msg), true);
}
function createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {
  return (routesByParentId[parentId] || []).map((route) => {
    let routeModule = routeModulesCache[route.id];
    function fetchServerHandler(singleFetch) {
      invariant2(
        typeof singleFetch === "function",
        "No single fetch function available for route handler"
      );
      return singleFetch();
    }
    function fetchServerLoader(singleFetch) {
      if (!route.hasLoader) return Promise.resolve(null);
      return fetchServerHandler(singleFetch);
    }
    function fetchServerAction(singleFetch) {
      if (!route.hasAction) {
        throw noActionDefinedError("action", route.id);
      }
      return fetchServerHandler(singleFetch);
    }
    function prefetchModule(modulePath) {
      import(
        /* @vite-ignore */
        /* webpackIgnore: true */
        modulePath
      );
    }
    function prefetchRouteModuleChunks(route2) {
      if (route2.clientActionModule) {
        prefetchModule(route2.clientActionModule);
      }
      if (route2.clientLoaderModule) {
        prefetchModule(route2.clientLoaderModule);
      }
    }
    async function prefetchStylesAndCallHandler(handler) {
      let cachedModule = routeModulesCache[route.id];
      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();
      try {
        return handler();
      } finally {
        await linkPrefetchPromise;
      }
    }
    let dataRoute = {
      id: route.id,
      index: route.index,
      path: route.path
    };
    if (routeModule) {
      Object.assign(dataRoute, {
        ...dataRoute,
        ...getRouteComponents(route, routeModule, isSpaMode),
        middleware: routeModule.clientMiddleware,
        handle: routeModule.handle,
        shouldRevalidate: getShouldRevalidateFunction(
          dataRoute.path,
          routeModule,
          route,
          ssr,
          needsRevalidation
        )
      });
      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;
      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;
      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;
      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;
      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);
      dataRoute.loader = async ({ request, params, context }, singleFetch) => {
        try {
          let result = await prefetchStylesAndCallHandler(async () => {
            invariant2(
              routeModule,
              "No `routeModule` available for critical-route loader"
            );
            if (!routeModule.clientLoader) {
              return fetchServerLoader(singleFetch);
            }
            return routeModule.clientLoader({
              request,
              params,
              context,
              async serverLoader() {
                preventInvalidServerHandlerCall("loader", route);
                if (isHydrationRequest) {
                  if (hasInitialData) {
                    return initialData;
                  }
                  if (hasInitialError) {
                    throw initialError;
                  }
                }
                return fetchServerLoader(singleFetch);
              }
            });
          });
          return result;
        } finally {
          isHydrationRequest = false;
        }
      };
      dataRoute.loader.hydrate = shouldHydrateRouteLoader(
        route.id,
        routeModule.clientLoader,
        route.hasLoader,
        isSpaMode
      );
      dataRoute.action = ({ request, params, context }, singleFetch) => {
        return prefetchStylesAndCallHandler(async () => {
          invariant2(
            routeModule,
            "No `routeModule` available for critical-route action"
          );
          if (!routeModule.clientAction) {
            if (isSpaMode) {
              throw noActionDefinedError("clientAction", route.id);
            }
            return fetchServerAction(singleFetch);
          }
          return routeModule.clientAction({
            request,
            params,
            context,
            async serverAction() {
              preventInvalidServerHandlerCall("action", route);
              return fetchServerAction(singleFetch);
            }
          });
        });
      };
    } else {
      if (!route.hasClientLoader) {
        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {
          return fetchServerLoader(singleFetch);
        });
      }
      if (!route.hasClientAction) {
        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {
          if (isSpaMode) {
            throw noActionDefinedError("clientAction", route.id);
          }
          return fetchServerAction(singleFetch);
        });
      }
      let lazyRoutePromise;
      async function getLazyRoute() {
        if (lazyRoutePromise) {
          return await lazyRoutePromise;
        }
        lazyRoutePromise = (async () => {
          if (route.clientLoaderModule || route.clientActionModule) {
            await new Promise((resolve) => setTimeout(resolve, 0));
          }
          let routeModulePromise = loadRouteModuleWithBlockingLinks(
            route,
            routeModulesCache
          );
          prefetchRouteModuleChunks(route);
          return await routeModulePromise;
        })();
        return await lazyRoutePromise;
      }
      dataRoute.lazy = {
        loader: route.hasClientLoader ? async () => {
          let { clientLoader } = route.clientLoaderModule ? await import(
            /* @vite-ignore */
            /* webpackIgnore: true */
            route.clientLoaderModule
          ) : await getLazyRoute();
          invariant2(clientLoader, "No `clientLoader` export found");
          return (args, singleFetch) => clientLoader({
            ...args,
            async serverLoader() {
              preventInvalidServerHandlerCall("loader", route);
              return fetchServerLoader(singleFetch);
            }
          });
        } : void 0,
        action: route.hasClientAction ? async () => {
          let clientActionPromise = route.clientActionModule ? import(
            /* @vite-ignore */
            /* webpackIgnore: true */
            route.clientActionModule
          ) : getLazyRoute();
          prefetchRouteModuleChunks(route);
          let { clientAction } = await clientActionPromise;
          invariant2(clientAction, "No `clientAction` export found");
          return (args, singleFetch) => clientAction({
            ...args,
            async serverAction() {
              preventInvalidServerHandlerCall("action", route);
              return fetchServerAction(singleFetch);
            }
          });
        } : void 0,
        middleware: route.hasClientMiddleware ? async () => {
          let { clientMiddleware } = route.clientMiddlewareModule ? await import(
            /* @vite-ignore */
            /* webpackIgnore: true */
            route.clientMiddlewareModule
          ) : await getLazyRoute();
          invariant2(clientMiddleware, "No `clientMiddleware` export found");
          return clientMiddleware;
        } : void 0,
        shouldRevalidate: async () => {
          let lazyRoute = await getLazyRoute();
          return getShouldRevalidateFunction(
            dataRoute.path,
            lazyRoute,
            route,
            ssr,
            needsRevalidation
          );
        },
        handle: async () => (await getLazyRoute()).handle,
        // No need to wrap these in layout since the root route is never
        // loaded via route.lazy()
        Component: async () => (await getLazyRoute()).Component,
        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0
      };
    }
    let children = createClientRoutes(
      manifest,
      routeModulesCache,
      initialState,
      ssr,
      isSpaMode,
      route.id,
      routesByParentId,
      needsRevalidation
    );
    if (children.length > 0) dataRoute.children = children;
    return dataRoute;
  });
}
function getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {
  if (needsRevalidation) {
    return wrapShouldRevalidateForHdr(
      manifestRoute.id,
      route.shouldRevalidate,
      needsRevalidation
    );
  }
  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {
    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];
    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);
    if (route.shouldRevalidate) {
      let fn = route.shouldRevalidate;
      return (opts) => fn({
        ...opts,
        defaultShouldRevalidate: didParamsChange(opts)
      });
    } else {
      return (opts) => didParamsChange(opts);
    }
  }
  if (ssr && route.shouldRevalidate) {
    let fn = route.shouldRevalidate;
    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });
  }
  return route.shouldRevalidate;
}
function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {
  let handledRevalidation = false;
  return (arg) => {
    if (!handledRevalidation) {
      handledRevalidation = true;
      return needsRevalidation.has(routeId);
    }
    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;
  };
}
async function loadRouteModuleWithBlockingLinks(route, routeModules) {
  let routeModulePromise = loadRouteModule(route, routeModules);
  let prefetchRouteCssPromise = prefetchRouteCss(route);
  let routeModule = await routeModulePromise;
  await Promise.all([
    prefetchRouteCssPromise,
    prefetchStyleLinks(route, routeModule)
  ]);
  return {
    Component: getRouteModuleComponent(routeModule),
    ErrorBoundary: routeModule.ErrorBoundary,
    clientMiddleware: routeModule.clientMiddleware,
    clientAction: routeModule.clientAction,
    clientLoader: routeModule.clientLoader,
    handle: routeModule.handle,
    links: routeModule.links,
    meta: routeModule.meta,
    shouldRevalidate: routeModule.shouldRevalidate
  };
}
function getRouteModuleComponent(routeModule) {
  if (routeModule.default == null) return void 0;
  let isEmptyObject = typeof routeModule.default === "object" && Object.keys(routeModule.default).length === 0;
  if (!isEmptyObject) {
    return routeModule.default;
  }
}
function shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {
  return isSpaMode && routeId !== "root" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);
}

// lib/dom/ssr/fog-of-war.ts
var nextPaths = /* @__PURE__ */ new Set();
var discoveredPathsMaxSize = 1e3;
var discoveredPaths = /* @__PURE__ */ new Set();
var URL_LIMIT = 7680;
function isFogOfWarEnabled(routeDiscovery, ssr) {
  return routeDiscovery.mode === "lazy" && ssr === true;
}
function getPartialManifest({ sri, ...manifest }, router) {
  let routeIds = new Set(router.state.matches.map((m) => m.route.id));
  let segments = router.state.location.pathname.split("/").filter(Boolean);
  let paths = ["/"];
  segments.pop();
  while (segments.length > 0) {
    paths.push(`/${segments.join("/")}`);
    segments.pop();
  }
  paths.forEach((path) => {
    let matches = matchRoutes(router.routes, path, router.basename);
    if (matches) {
      matches.forEach((m) => routeIds.add(m.route.id));
    }
  });
  let initialRoutes = [...routeIds].reduce(
    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),
    {}
  );
  return {
    ...manifest,
    routes: initialRoutes,
    sri: sri ? true : void 0
  };
}
function getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {
  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {
    return void 0;
  }
  return async ({ path, patch, signal, fetcherKey }) => {
    if (discoveredPaths.has(path)) {
      return;
    }
    await fetchAndApplyManifestPatches(
      [path],
      fetcherKey ? window.location.href : path,
      manifest,
      routeModules,
      ssr,
      isSpaMode,
      basename,
      routeDiscovery.manifestPath,
      patch,
      signal
    );
  };
}
function useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {
  React7.useEffect(() => {
    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet
    window.navigator?.connection?.saveData === true) {
      return;
    }
    function registerElement(el) {
      let path = el.tagName === "FORM" ? el.getAttribute("action") : el.getAttribute("href");
      if (!path) {
        return;
      }
      let pathname = el.tagName === "A" ? el.pathname : new URL(path, window.location.origin).pathname;
      if (!discoveredPaths.has(pathname)) {
        nextPaths.add(pathname);
      }
    }
    async function fetchPatches() {
      document.querySelectorAll("a[data-discover], form[data-discover]").forEach(registerElement);
      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {
        if (discoveredPaths.has(path)) {
          nextPaths.delete(path);
          return false;
        }
        return true;
      });
      if (lazyPaths.length === 0) {
        return;
      }
      try {
        await fetchAndApplyManifestPatches(
          lazyPaths,
          null,
          manifest,
          routeModules,
          ssr,
          isSpaMode,
          router.basename,
          routeDiscovery.manifestPath,
          router.patchRoutes
        );
      } catch (e) {
        console.error("Failed to fetch manifest patches", e);
      }
    }
    let debouncedFetchPatches = debounce(fetchPatches, 100);
    fetchPatches();
    let observer = new MutationObserver(() => debouncedFetchPatches());
    observer.observe(document.documentElement, {
      subtree: true,
      childList: true,
      attributes: true,
      attributeFilter: ["data-discover", "href", "action"]
    });
    return () => observer.disconnect();
  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);
}
function getManifestPath(_manifestPath, basename) {
  let manifestPath = _manifestPath || "/__manifest";
  if (basename == null) {
    return manifestPath;
  }
  return `${basename}${manifestPath}`.replace(/\/+/g, "/");
}
var MANIFEST_VERSION_STORAGE_KEY = "react-router-manifest-version";
async function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {
  const searchParams = new URLSearchParams();
  searchParams.set("paths", paths.sort().join(","));
  searchParams.set("version", manifest.version);
  let url = new URL(
    getManifestPath(manifestPath, basename),
    window.location.origin
  );
  url.search = searchParams.toString();
  if (url.toString().length > URL_LIMIT) {
    nextPaths.clear();
    return;
  }
  let serverPatches;
  try {
    let res = await fetch(url, { signal });
    if (!res.ok) {
      throw new Error(`${res.status} ${res.statusText}`);
    } else if (res.status === 204 && res.headers.has("X-Remix-Reload-Document")) {
      if (!errorReloadPath) {
        console.warn(
          "Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest."
        );
        return;
      }
      try {
        if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {
          console.error(
            "Unable to discover routes due to manifest version mismatch."
          );
          return;
        }
        sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);
      } catch {
      }
      window.location.href = errorReloadPath;
      console.warn("Detected manifest version mismatch, reloading...");
      await new Promise(() => {
      });
    } else if (res.status >= 400) {
      throw new Error(await res.text());
    }
    try {
      sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);
    } catch {
    }
    serverPatches = await res.json();
  } catch (e) {
    if (signal?.aborted) return;
    throw e;
  }
  let knownRoutes = new Set(Object.keys(manifest.routes));
  let patches = Object.values(serverPatches).reduce((acc, route) => {
    if (route && !knownRoutes.has(route.id)) {
      acc[route.id] = route;
    }
    return acc;
  }, {});
  Object.assign(manifest.routes, patches);
  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));
  let parentIds = /* @__PURE__ */ new Set();
  Object.values(patches).forEach((patch) => {
    if (patch && (!patch.parentId || !patches[patch.parentId])) {
      parentIds.add(patch.parentId);
    }
  });
  parentIds.forEach(
    (parentId) => patchRoutes(
      parentId || null,
      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)
    )
  );
}
function addToFifoQueue(path, queue) {
  if (queue.size >= discoveredPathsMaxSize) {
    let first = queue.values().next().value;
    queue.delete(first);
  }
  queue.add(path);
}
function debounce(callback, wait) {
  let timeoutId;
  return (...args) => {
    window.clearTimeout(timeoutId);
    timeoutId = window.setTimeout(() => callback(...args), wait);
  };
}

// lib/dom/ssr/components.tsx
function useDataRouterContext2() {
  let context = react.useContext(DataRouterContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterContext.Provider> element"
  );
  return context;
}
function useDataRouterStateContext() {
  let context = react.useContext(DataRouterStateContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterStateContext.Provider> element"
  );
  return context;
}
var FrameworkContext = react.createContext(void 0);
FrameworkContext.displayName = "FrameworkContext";
function useFrameworkContext() {
  let context = react.useContext(FrameworkContext);
  invariant2(
    context,
    "You must render this element inside a <HydratedRouter> element"
  );
  return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let frameworkContext = react.useContext(FrameworkContext);
  let [maybePrefetch, setMaybePrefetch] = react.useState(false);
  let [shouldPrefetch, setShouldPrefetch] = react.useState(false);
  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;
  let ref = react.useRef(null);
  react.useEffect(() => {
    if (prefetch === "render") {
      setShouldPrefetch(true);
    }
    if (prefetch === "viewport") {
      let callback = (entries) => {
        entries.forEach((entry) => {
          setShouldPrefetch(entry.isIntersecting);
        });
      };
      let observer = new IntersectionObserver(callback, { threshold: 0.5 });
      if (ref.current) observer.observe(ref.current);
      return () => {
        observer.disconnect();
      };
    }
  }, [prefetch]);
  react.useEffect(() => {
    if (maybePrefetch) {
      let id = setTimeout(() => {
        setShouldPrefetch(true);
      }, 100);
      return () => {
        clearTimeout(id);
      };
    }
  }, [maybePrefetch]);
  let setIntent = () => {
    setMaybePrefetch(true);
  };
  let cancelIntent = () => {
    setMaybePrefetch(false);
    setShouldPrefetch(false);
  };
  if (!frameworkContext) {
    return [false, ref, {}];
  }
  if (prefetch !== "intent") {
    return [shouldPrefetch, ref, {}];
  }
  return [
    shouldPrefetch,
    ref,
    {
      onFocus: composeEventHandlers(onFocus, setIntent),
      onBlur: composeEventHandlers(onBlur, cancelIntent),
      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
      onTouchStart: composeEventHandlers(onTouchStart, setIntent)
    }
  ];
}
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event);
    if (!event.defaultPrevented) {
      ourHandler(event);
    }
  };
}
function getActiveMatches(matches, errors, isSpaMode) {
  if (isSpaMode && !isHydrated) {
    return [matches[0]];
  }
  if (errors) {
    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);
    return matches.slice(0, errorIdx + 1);
  }
  return matches;
}
var CRITICAL_CSS_DATA_ATTRIBUTE = "data-react-router-critical-css";
function Links({ nonce }) {
  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();
  let { errors, matches: routerMatches } = useDataRouterStateContext();
  let matches = getActiveMatches(routerMatches, errors, isSpaMode);
  let keyedLinks = React8.useMemo(
    () => getKeyedLinksForMatches(matches, routeModules, manifest),
    [matches, routeModules, manifest]
  );
  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof criticalCss === "string" ? /* @__PURE__ */ React8.createElement(
    "style",
    {
      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: "" },
      dangerouslySetInnerHTML: { __html: criticalCss }
    }
  ) : null, typeof criticalCss === "object" ? /* @__PURE__ */ React8.createElement(
    "link",
    {
      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: "" },
      rel: "stylesheet",
      href: criticalCss.href,
      nonce
    }
  ) : null, keyedLinks.map(
    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React8.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React8.createElement("link", { key, nonce, ...link })
  ));
}
function PrefetchPageLinks({ page, ...linkProps }) {
  let { router } = useDataRouterContext2();
  let matches = react.useMemo(
    () => matchRoutes(router.routes, page, router.basename),
    [router.routes, page, router.basename]
  );
  if (!matches) {
    return null;
  }
  return /* @__PURE__ */ react.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });
}
function useKeyedPrefetchLinks(matches) {
  let { manifest, routeModules } = useFrameworkContext();
  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = react.useState([]);
  react.useEffect(() => {
    let interrupted = false;
    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(
      (links) => {
        if (!interrupted) {
          setKeyedPrefetchLinks(links);
        }
      }
    );
    return () => {
      interrupted = true;
    };
  }, [matches, manifest, routeModules]);
  return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation();
  let { manifest, routeModules } = useFrameworkContext();
  let { basename } = useDataRouterContext2();
  let { loaderData, matches } = useDataRouterStateContext();
  let newMatchesForData = react.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "data"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let newMatchesForAssets = react.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "assets"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let dataHrefs = react.useMemo(() => {
    if (page === location.pathname + location.search + location.hash) {
      return [];
    }
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    nextMatches.forEach((m) => {
      let manifestRoute = manifest.routes[m.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return;
      }
      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {
        foundOptOutRoute = true;
      } else if (manifestRoute.hasClientLoader) {
        foundOptOutRoute = true;
      } else {
        routesParams.add(m.route.id);
      }
    });
    if (routesParams.size === 0) {
      return [];
    }
    let url = singleFetchUrl(page, basename, "data");
    if (foundOptOutRoute && routesParams.size > 0) {
      url.searchParams.set(
        "_routes",
        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(",")
      );
    }
    return [url.pathname + url.search];
  }, [
    basename,
    loaderData,
    location,
    manifest,
    newMatchesForData,
    nextMatches,
    page,
    routeModules
  ]);
  let moduleHrefs = react.useMemo(
    () => getModuleLinkHrefs(newMatchesForAssets, manifest),
    [newMatchesForAssets, manifest]
  );
  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
  return /* @__PURE__ */ react.createElement(react.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ react.createElement("link", { key: href, rel: "prefetch", as: "fetch", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ react.createElement("link", { key: href, rel: "modulepreload", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ react.createElement("link", { key, nonce: linkProps.nonce, ...link })
  )));
}
function Meta() {
  let { isSpaMode, routeModules } = useFrameworkContext();
  let {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext();
  let location = useLocation();
  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);
  let error = null;
  if (errors) {
    error = errors[_matches[_matches.length - 1].route.id];
  }
  let meta = [];
  let leafMeta = null;
  let matches = [];
  for (let i = 0; i < _matches.length; i++) {
    let _match = _matches[i];
    let routeId = _match.route.id;
    let data2 = loaderData[routeId];
    let params = _match.params;
    let routeModule = routeModules[routeId];
    let routeMeta = [];
    let match = {
      id: routeId,
      data: data2,
      loaderData: data2,
      meta: [],
      params: _match.params,
      pathname: _match.pathname,
      handle: _match.route.handle,
      error
    };
    matches[i] = match;
    if (routeModule?.meta) {
      routeMeta = typeof routeModule.meta === "function" ? routeModule.meta({
        data: data2,
        loaderData: data2,
        params,
        location,
        matches,
        error
      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;
    } else if (leafMeta) {
      routeMeta = [...leafMeta];
    }
    routeMeta = routeMeta || [];
    if (!Array.isArray(routeMeta)) {
      throw new Error(
        "The route at " + _match.route.path + " returns an invalid value. All route meta functions must return an array of meta objects.\n\nTo reference the meta function API, see https://remix.run/route/meta"
      );
    }
    match.meta = routeMeta;
    matches[i] = match;
    meta = [...routeMeta];
    leafMeta = meta;
  }
  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, meta.flat().map((metaProps) => {
    if (!metaProps) {
      return null;
    }
    if ("tagName" in metaProps) {
      let { tagName, ...rest } = metaProps;
      if (!isValidMetaTag(tagName)) {
        console.warn(
          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`
        );
        return null;
      }
      let Comp = tagName;
      return /* @__PURE__ */ React8.createElement(Comp, { key: JSON.stringify(rest), ...rest });
    }
    if ("title" in metaProps) {
      return /* @__PURE__ */ React8.createElement("title", { key: "title" }, String(metaProps.title));
    }
    if ("charset" in metaProps) {
      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);
      delete metaProps.charset;
    }
    if ("charSet" in metaProps && metaProps.charSet != null) {
      return typeof metaProps.charSet === "string" ? /* @__PURE__ */ React8.createElement("meta", { key: "charSet", charSet: metaProps.charSet }) : null;
    }
    if ("script:ld+json" in metaProps) {
      try {
        let json = JSON.stringify(metaProps["script:ld+json"]);
        return /* @__PURE__ */ React8.createElement(
          "script",
          {
            key: `script:ld+json:${json}`,
            type: "application/ld+json",
            dangerouslySetInnerHTML: { __html: escapeHtml(json) }
          }
        );
      } catch (err) {
        return null;
      }
    }
    return /* @__PURE__ */ React8.createElement("meta", { key: JSON.stringify(metaProps), ...metaProps });
  }));
}
function isValidMetaTag(tagName) {
  return typeof tagName === "string" && /^(meta|link)$/.test(tagName);
}
var isHydrated = false;
function setIsHydrated() {
  isHydrated = true;
}
function Scripts(scriptProps) {
  let {
    manifest,
    serverHandoffString,
    isSpaMode,
    renderMeta,
    routeDiscovery,
    ssr
  } = useFrameworkContext();
  let { router, static: isStatic, staticContext } = useDataRouterContext2();
  let { matches: routerMatches } = useDataRouterStateContext();
  let isRSCRouterContext = useIsRSCRouterContext();
  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);
  if (renderMeta) {
    renderMeta.didRenderScripts = true;
  }
  let matches = getActiveMatches(routerMatches, null, isSpaMode);
  react.useEffect(() => {
    setIsHydrated();
  }, []);
  let initialScripts = react.useMemo(() => {
    if (isRSCRouterContext) {
      return null;
    }
    let streamScript = "window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());";
    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : " ";
    let routeModulesScript = !isStatic ? " " : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : ""};
${matches.map((match, routeIndex) => {
      let routeVarName = `route${routeIndex}`;
      let manifestEntry = manifest.routes[match.route.id];
      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);
      let {
        clientActionModule,
        clientLoaderModule,
        clientMiddlewareModule,
        hydrateFallbackModule,
        module
      } = manifestEntry;
      let chunks = [
        ...clientActionModule ? [
          {
            module: clientActionModule,
            varName: `${routeVarName}_clientAction`
          }
        ] : [],
        ...clientLoaderModule ? [
          {
            module: clientLoaderModule,
            varName: `${routeVarName}_clientLoader`
          }
        ] : [],
        ...clientMiddlewareModule ? [
          {
            module: clientMiddlewareModule,
            varName: `${routeVarName}_clientMiddleware`
          }
        ] : [],
        ...hydrateFallbackModule ? [
          {
            module: hydrateFallbackModule,
            varName: `${routeVarName}_HydrateFallback`
          }
        ] : [],
        { module, varName: `${routeVarName}_main` }
      ];
      if (chunks.length === 1) {
        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;
      }
      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from "${chunk.module}";`).join("\n");
      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(",")}};`;
      return [chunkImportsSnippet, mergedChunksSnippet].join("\n");
    }).join("\n")}
  ${enableFogOfWar ? (
      // Inline a minimal manifest with the SSR matches
      `window.__reactRouterManifest = ${JSON.stringify(
        getPartialManifest(manifest, router),
        null,
        2
      )};`
    ) : ""}
  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});`;
    return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement(
      "script",
      {
        ...scriptProps,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: { __html: contextScript },
        type: void 0
      }
    ), /* @__PURE__ */ react.createElement(
      "script",
      {
        ...scriptProps,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: { __html: routeModulesScript },
        type: "module",
        async: true
      }
    ));
  }, []);
  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(
    manifest.entry.imports.concat(
      getModuleLinkHrefs(matches, manifest, {
        includeHydrateFallback: true
      })
    )
  );
  let sri = typeof manifest.sri === "object" ? manifest.sri : {};
  warnOnce(
    !isRSCRouterContext,
    "The <Scripts /> element is a no-op when using RSC and can be safely removed."
  );
  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ react.createElement(react.Fragment, null, typeof manifest.sri === "object" ? /* @__PURE__ */ react.createElement(
    "script",
    {
      "rr-importmap": "",
      type: "importmap",
      suppressHydrationWarning: true,
      dangerouslySetInnerHTML: {
        __html: JSON.stringify({
          integrity: sri
        })
      }
    }
  ) : null, !enableFogOfWar ? /* @__PURE__ */ react.createElement(
    "link",
    {
      rel: "modulepreload",
      href: manifest.url,
      crossOrigin: scriptProps.crossOrigin,
      integrity: sri[manifest.url],
      suppressHydrationWarning: true
    }
  ) : null, /* @__PURE__ */ react.createElement(
    "link",
    {
      rel: "modulepreload",
      href: manifest.entry.module,
      crossOrigin: scriptProps.crossOrigin,
      integrity: sri[manifest.entry.module],
      suppressHydrationWarning: true
    }
  ), preloads.map((path) => /* @__PURE__ */ react.createElement(
    "link",
    {
      key: path,
      rel: "modulepreload",
      href: path,
      crossOrigin: scriptProps.crossOrigin,
      integrity: sri[path],
      suppressHydrationWarning: true
    }
  )), initialScripts);
}
function dedupe(array) {
  return [...new Set(array)];
}
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref != null) {
        ref.current = value;
      }
    });
  };
}

// lib/dom/ssr/errorBoundaries.tsx
var RemixErrorBoundary = class extends react.Component {
  constructor(props) {
    super(props);
    this.state = { error: props.error || null, location: props.location };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location) {
      return { error: props.error || null, location: props.location };
    }
    return { error: props.error || state.error, location: state.location };
  }
  render() {
    if (this.state.error) {
      return /* @__PURE__ */ react.createElement(
        RemixRootDefaultErrorBoundary,
        {
          error: this.state.error,
          isOutsideRemixApp: true
        }
      );
    } else {
      return this.props.children;
    }
  }
};
function RemixRootDefaultErrorBoundary({
  error,
  isOutsideRemixApp
}) {
  console.error(error);
  let heyDeveloper = /* @__PURE__ */ react.createElement(
    "script",
    {
      dangerouslySetInnerHTML: {
        __html: `
        console.log(
          "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information."
        );
      `
      }
    }
  );
  if (isRouteErrorResponse(error)) {
    return /* @__PURE__ */ react.createElement(BoundaryShell, { title: "Unhandled Thrown Response!" }, /* @__PURE__ */ react.createElement("h1", { style: { fontSize: "24px" } }, error.status, " ", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);
  }
  let errorInstance;
  if (error instanceof Error) {
    errorInstance = error;
  } else {
    let errorString = error == null ? "Unknown Error" : typeof error === "object" && "toString" in error ? error.toString() : JSON.stringify(error);
    errorInstance = new Error(errorString);
  }
  return /* @__PURE__ */ react.createElement(
    BoundaryShell,
    {
      title: "Application Error!",
      isOutsideRemixApp
    },
    /* @__PURE__ */ react.createElement("h1", { style: { fontSize: "24px" } }, "Application Error"),
    /* @__PURE__ */ react.createElement(
      "pre",
      {
        style: {
          padding: "2rem",
          background: "hsla(10, 50%, 50%, 0.1)",
          color: "red",
          overflow: "auto"
        }
      },
      errorInstance.stack
    ),
    heyDeveloper
  );
}
function BoundaryShell({
  title,
  renderScripts,
  isOutsideRemixApp,
  children
}) {
  let { routeModules } = useFrameworkContext();
  if (routeModules.root?.Layout && !isOutsideRemixApp) {
    return children;
  }
  return /* @__PURE__ */ react.createElement("html", { lang: "en" }, /* @__PURE__ */ react.createElement("head", null, /* @__PURE__ */ react.createElement("meta", { charSet: "utf-8" }), /* @__PURE__ */ react.createElement(
    "meta",
    {
      name: "viewport",
      content: "width=device-width,initial-scale=1,viewport-fit=cover"
    }
  ), /* @__PURE__ */ react.createElement("title", null, title)), /* @__PURE__ */ react.createElement("body", null, /* @__PURE__ */ react.createElement("main", { style: { fontFamily: "system-ui, sans-serif", padding: "2rem" } }, children, renderScripts ? /* @__PURE__ */ react.createElement(Scripts, null) : null)));
}

// lib/dom/lib.tsx

var chunk_OIYGIGL5_isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
try {
  if (chunk_OIYGIGL5_isBrowser) {
    window.__reactRouterVersion = // @ts-expect-error
    "7.9.4";
  }
} catch (e) {
}
function createBrowserRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    getContext: opts?.getContext,
    future: opts?.future,
    history: createBrowserHistory({ window: opts?.window }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes,
    mapRouteProperties,
    hydrationRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
    window: opts?.window
  }).initialize();
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    getContext: opts?.getContext,
    future: opts?.future,
    history: createHashHistory({ window: opts?.window }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes,
    mapRouteProperties,
    hydrationRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
    window: opts?.window
  }).initialize();
}
function parseHydrationData() {
  let state = window?.__staticRouterHydrationData;
  if (state && state.errors) {
    state = {
      ...state,
      errors: deserializeErrors(state.errors)
    };
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponseImpl(
        val.status,
        val.statusText,
        val.data,
        val.internal === true
      );
    } else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor === "function") {
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = "";
            serialized[key] = error;
          } catch (e) {
          }
        }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = "";
        serialized[key] = error;
      }
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
function BrowserRouter({
  basename,
  children,
  window: window2
}) {
  let historyRef = react.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = react.useState({
    action: history.action,
    location: history.location
  });
  let setState = react.useCallback(
    (newState) => {
      react.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function HashRouter({ basename, children, window: window2 }) {
  let historyRef = React10.useRef();
  if (historyRef.current == null) {
    historyRef.current = createHashHistory({ window: window2, v5Compat: true });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = React10.useState({
    action: history.action,
    location: history.location
  });
  let setState = React10.useCallback(
    (newState) => {
      React10.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ React10.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function HistoryRouter({
  basename,
  children,
  history
}) {
  let [state, setStateImpl] = react.useState({
    action: history.action,
    location: history.location
  });
  let setState = react.useCallback(
    (newState) => {
      react.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
HistoryRouter.displayName = "unstable_HistoryRouter";
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = react.forwardRef(
  function LinkWithRef({
    onClick,
    discover = "render",
    prefetch = "none",
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to,
    preventScrollReset,
    viewTransition,
    ...rest
  }, forwardedRef) {
    let { basename } = react.useContext(NavigationContext);
    let isAbsolute = typeof to === "string" && ABSOLUTE_URL_REGEX2.test(to);
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && isAbsolute) {
      absoluteHref = to;
      if (chunk_OIYGIGL5_isBrowser) {
        try {
          let currentUrl = new URL(window.location.href);
          let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
          let path = stripBasename(targetUrl.pathname, basename);
          if (targetUrl.origin === currentUrl.origin && path != null) {
            to = path + targetUrl.search + targetUrl.hash;
          } else {
            isExternal = true;
          }
        } catch (e) {
          warning(
            false,
            `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
          );
        }
      }
    }
    let href = useHref(to, { relative });
    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(
      prefetch,
      rest
    );
    let internalOnClick = useLinkClickHandler(to, {
      replace: replace2,
      state,
      target,
      preventScrollReset,
      relative,
      viewTransition
    });
    function handleClick(event) {
      if (onClick) onClick(event);
      if (!event.defaultPrevented) {
        internalOnClick(event);
      }
    }
    let link = (
      // eslint-disable-next-line jsx-a11y/anchor-has-content
      /* @__PURE__ */ react.createElement(
        "a",
        {
          ...rest,
          ...prefetchHandlers,
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref: mergeRefs(forwardedRef, prefetchRef),
          target,
          "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
        }
      )
    );
    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ react.createElement(react.Fragment, null, link, /* @__PURE__ */ react.createElement(PrefetchPageLinks, { page: href })) : link;
  }
);
Link.displayName = "Link";
var NavLink = react.forwardRef(
  function NavLinkWithRef({
    "aria-current": ariaCurrentProp = "page",
    caseSensitive = false,
    className: classNameProp = "",
    end = false,
    style: styleProp,
    to,
    viewTransition,
    children,
    ...rest
  }, ref) {
    let path = useResolvedPath(to, { relative: rest.relative });
    let location = useLocation();
    let routerState = react.useContext(DataRouterStateContext);
    let { navigator, basename } = react.useContext(NavigationContext);
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && viewTransition === true;
    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
      locationPathname = locationPathname.toLowerCase();
      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
      toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) {
      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;
    }
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
      isActive,
      isPending,
      isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") {
      className = classNameProp(renderProps);
    } else {
      className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
      ].filter(Boolean).join(" ");
    }
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /* @__PURE__ */ react.createElement(
      Link,
      {
        ...rest,
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        viewTransition
      },
      typeof children === "function" ? children(renderProps) : children
    );
  }
);
NavLink.displayName = "NavLink";
var Form = react.forwardRef(
  ({
    discover = "render",
    fetcherKey,
    navigate,
    reloadDocument,
    replace: replace2,
    state,
    method = defaultMethod,
    action,
    onSubmit,
    relative,
    preventScrollReset,
    viewTransition,
    ...props
  }, forwardedRef) => {
    let submit = useSubmit();
    let formAction = useFormAction(action, { relative });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let isAbsolute = typeof action === "string" && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event) => {
      onSubmit && onSubmit(event);
      if (event.defaultPrevented) return;
      event.preventDefault();
      let submitter = event.nativeEvent.submitter;
      let submitMethod = submitter?.getAttribute("formmethod") || method;
      submit(submitter || event.currentTarget, {
        fetcherKey,
        method: submitMethod,
        navigate,
        replace: replace2,
        state,
        relative,
        preventScrollReset,
        viewTransition
      });
    };
    return /* @__PURE__ */ react.createElement(
      "form",
      {
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler,
        ...props,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
      }
    );
  }
);
Form.displayName = "Form";
function ScrollRestoration({
  getKey,
  storageKey,
  ...props
}) {
  let remixContext = react.useContext(FrameworkContext);
  let { basename } = react.useContext(NavigationContext);
  let location = useLocation();
  let matches = useMatches();
  useScrollRestoration({ getKey, storageKey });
  let ssrKey = react.useMemo(
    () => {
      if (!remixContext || !getKey) return null;
      let userKey = getScrollRestorationKey(
        location,
        matches,
        basename,
        getKey
      );
      return userKey !== location.key ? userKey : null;
    },
    // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  if (!remixContext || remixContext.isSpaMode) {
    return null;
  }
  let restoreScroll = ((storageKey2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key = Math.random().toString(32).slice(2);
      window.history.replaceState({ key }, "");
    }
    try {
      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || "{}");
      let storedY = positions[restoreKey || window.history.state.key];
      if (typeof storedY === "number") {
        window.scrollTo(0, storedY);
      }
    } catch (error) {
      console.error(error);
      sessionStorage.removeItem(storageKey2);
    }
  }).toString();
  return /* @__PURE__ */ react.createElement(
    "script",
    {
      ...props,
      suppressHydrationWarning: true,
      dangerouslySetInnerHTML: {
        __html: `(${restoreScroll})(${JSON.stringify(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY
        )}, ${JSON.stringify(ssrKey)})`
      }
    }
  );
}
ScrollRestoration.displayName = "ScrollRestoration";
function getDataRouterConsoleError2(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
  let ctx = react.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError2(hookName));
  return ctx;
}
function useDataRouterState2(hookName) {
  let state = react.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError2(hookName));
  return state;
}
function useLinkClickHandler(to, {
  target,
  replace: replaceProp,
  state,
  preventScrollReset,
  relative,
  viewTransition
} = {}) {
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, { relative });
  return react.useCallback(
    (event) => {
      if (shouldProcessLinkClick(event, target)) {
        event.preventDefault();
        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
        navigate(to, {
          replace: replace2,
          state,
          preventScrollReset,
          relative,
          viewTransition
        });
      }
    },
    [
      location,
      navigate,
      path,
      replaceProp,
      state,
      target,
      to,
      preventScrollReset,
      relative,
      viewTransition
    ]
  );
}
function useSearchParams(defaultInit) {
  warning(
    typeof URLSearchParams !== "undefined",
    `You cannot use the \`useSearchParams\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`
  );
  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));
  let hasSetSearchParamsRef = React10.useRef(false);
  let location = useLocation();
  let searchParams = React10.useMemo(
    () => (
      // Only merge in the defaults if we haven't yet called setSearchParams.
      // Once we call that we want those to take precedence, otherwise you can't
      // remove a param with setSearchParams({}) if it has an initial value
      getSearchParamsForLocation(
        location.search,
        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current
      )
    ),
    [location.search]
  );
  let navigate = useNavigate();
  let setSearchParams = React10.useCallback(
    (nextInit, navigateOptions) => {
      const newSearchParams = createSearchParams(
        typeof nextInit === "function" ? nextInit(new URLSearchParams(searchParams)) : nextInit
      );
      hasSetSearchParamsRef.current = true;
      navigate("?" + newSearchParams, navigateOptions);
    },
    [navigate, searchParams]
  );
  return [searchParams, setSearchParams];
}
var fetcherId = 0;
var getUniqueFetcherId = () => `__${String(++fetcherId)}__`;
function useSubmit() {
  let { router } = useDataRouterContext3("useSubmit" /* UseSubmit */);
  let { basename } = react.useContext(NavigationContext);
  let currentRouteId = useRouteId();
  return react.useCallback(
    async (target, options = {}) => {
      let { action, method, encType, formData, body } = getFormSubmissionInfo(
        target,
        basename
      );
      if (options.navigate === false) {
        let key = options.fetcherKey || getUniqueFetcherId();
        await router.fetch(key, currentRouteId, options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          flushSync: options.flushSync
        });
      } else {
        await router.navigate(options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          replace: options.replace,
          state: options.state,
          fromRouteId: currentRouteId,
          flushSync: options.flushSync,
          viewTransition: options.viewTransition
        });
      }
    },
    [router, basename, currentRouteId]
  );
}
function useFormAction(action, { relative } = {}) {
  let { basename } = react.useContext(NavigationContext);
  let routeContext = react.useContext(RouteContext);
  invariant(routeContext, "useFormAction must be used inside a RouteContext");
  let [match] = routeContext.matches.slice(-1);
  let path = { ...useResolvedPath(action ? action : ".", { relative }) };
  let location = useLocation();
  if (action == null) {
    path.search = location.search;
    let params = new URLSearchParams(path.search);
    let indexValues = params.getAll("index");
    let hasNakedIndexParam = indexValues.some((v) => v === "");
    if (hasNakedIndexParam) {
      params.delete("index");
      indexValues.filter((v) => v).forEach((v) => params.append("index", v));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : "";
    }
  }
  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  }
  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function useFetcher({
  key
} = {}) {
  let { router } = useDataRouterContext3("useFetcher" /* UseFetcher */);
  let state = useDataRouterState2("useFetcher" /* UseFetcher */);
  let fetcherData = React10.useContext(FetchersContext);
  let route = React10.useContext(RouteContext);
  let routeId = route.matches[route.matches.length - 1]?.route.id;
  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);
  invariant(route, `useFetcher must be used inside a RouteContext`);
  invariant(
    routeId != null,
    `useFetcher can only be used on routes that contain a unique "id"`
  );
  let defaultKey = React10.useId();
  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);
  if (key && key !== fetcherKey) {
    setFetcherKey(key);
  }
  React10.useEffect(() => {
    router.getFetcher(fetcherKey);
    return () => router.deleteFetcher(fetcherKey);
  }, [router, fetcherKey]);
  let load = React10.useCallback(
    async (href, opts) => {
      invariant(routeId, "No routeId available for fetcher.load()");
      await router.fetch(fetcherKey, routeId, href, opts);
    },
    [fetcherKey, routeId, router]
  );
  let submitImpl = useSubmit();
  let submit = React10.useCallback(
    async (target, opts) => {
      await submitImpl(target, {
        ...opts,
        navigate: false,
        fetcherKey
      });
    },
    [fetcherKey, submitImpl]
  );
  let unstable_reset = React10.useCallback((opts) => router.resetFetcher(fetcherKey, opts), [router, fetcherKey]);
  let FetcherForm = React10.useMemo(() => {
    let FetcherForm2 = React10.forwardRef(
      (props, ref) => {
        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });
      }
    );
    FetcherForm2.displayName = "fetcher.Form";
    return FetcherForm2;
  }, [fetcherKey]);
  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;
  let data2 = fetcherData.get(fetcherKey);
  let fetcherWithComponents = React10.useMemo(
    () => ({
      Form: FetcherForm,
      submit,
      load,
      unstable_reset,
      ...fetcher,
      data: data2
    }),
    [FetcherForm, submit, load, unstable_reset, fetcher, data2]
  );
  return fetcherWithComponents;
}
function useFetchers() {
  let state = useDataRouterState2("useFetchers" /* UseFetchers */);
  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({
    ...fetcher,
    key
  }));
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
function getScrollRestorationKey(location, matches, basename, getKey) {
  let key = null;
  if (getKey) {
    if (basename !== "/") {
      key = getKey(
        {
          ...location,
          pathname: stripBasename(location.pathname, basename) || location.pathname
        },
        matches
      );
    } else {
      key = getKey(location, matches);
    }
  }
  if (key == null) {
    key = location.key;
  }
  return key;
}
function useScrollRestoration({
  getKey,
  storageKey
} = {}) {
  let { router } = useDataRouterContext3("useScrollRestoration" /* UseScrollRestoration */);
  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(
    "useScrollRestoration" /* UseScrollRestoration */
  );
  let { basename } = react.useContext(NavigationContext);
  let location = useLocation();
  let matches = useMatches();
  let navigation = useNavigation();
  react.useEffect(() => {
    window.history.scrollRestoration = "manual";
    return () => {
      window.history.scrollRestoration = "auto";
    };
  }, []);
  usePageHide(
    react.useCallback(() => {
      if (navigation.state === "idle") {
        let key = getScrollRestorationKey(location, matches, basename, getKey);
        savedScrollPositions[key] = window.scrollY;
      }
      try {
        sessionStorage.setItem(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY,
          JSON.stringify(savedScrollPositions)
        );
      } catch (error) {
        warning(
          false,
          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`
        );
      }
      window.history.scrollRestoration = "auto";
    }, [navigation.state, getKey, basename, location, matches, storageKey])
  );
  if (typeof document !== "undefined") {
    react.useLayoutEffect(() => {
      try {
        let sessionPositions = sessionStorage.getItem(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY
        );
        if (sessionPositions) {
          savedScrollPositions = JSON.parse(sessionPositions);
        }
      } catch (e) {
      }
    }, [storageKey]);
    react.useLayoutEffect(() => {
      let disableScrollRestoration = router?.enableScrollRestoration(
        savedScrollPositions,
        () => window.scrollY,
        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0
      );
      return () => disableScrollRestoration && disableScrollRestoration();
    }, [router, basename, getKey]);
    react.useLayoutEffect(() => {
      if (restoreScrollPosition === false) {
        return;
      }
      if (typeof restoreScrollPosition === "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      }
      try {
        if (location.hash) {
          let el = document.getElementById(
            decodeURIComponent(location.hash.slice(1))
          );
          if (el) {
            el.scrollIntoView();
            return;
          }
        }
      } catch {
        warning(
          false,
          `"${location.hash.slice(
            1
          )}" is not a decodable element ID. The view will not scroll to it.`
        );
      }
      if (preventScrollReset === true) {
        return;
      }
      window.scrollTo(0, 0);
    }, [location, restoreScrollPosition, preventScrollReset]);
  }
}
function useBeforeUnload(callback, options) {
  let { capture } = options || {};
  React10.useEffect(() => {
    let opts = capture != null ? { capture } : void 0;
    window.addEventListener("beforeunload", callback, opts);
    return () => {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
function usePageHide(callback, options) {
  let { capture } = options || {};
  react.useEffect(() => {
    let opts = capture != null ? { capture } : void 0;
    window.addEventListener("pagehide", callback, opts);
    return () => {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
function usePrompt({
  when,
  message
}) {
  let blocker = useBlocker(when);
  React10.useEffect(() => {
    if (blocker.state === "blocked") {
      let proceed = window.confirm(message);
      if (proceed) {
        setTimeout(blocker.proceed, 0);
      } else {
        blocker.reset();
      }
    }
  }, [blocker, message]);
  React10.useEffect(() => {
    if (blocker.state === "blocked" && !when) {
      blocker.reset();
    }
  }, [blocker, when]);
}
function useViewTransitionState(to, { relative } = {}) {
  let vtContext = react.useContext(ViewTransitionContext);
  invariant(
    vtContext != null,
    "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
  );
  let { basename } = useDataRouterContext3(
    "useViewTransitionState" /* useViewTransitionState */
  );
  let path = useResolvedPath(to, { relative });
  if (!vtContext.isTransitioning) {
    return false;
  }
  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;
}

// lib/dom/server.tsx

function StaticRouter({
  basename,
  children,
  location: locationProp = "/"
}) {
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let action = "POP" /* Pop */;
  let location = {
    pathname: locationProp.pathname || "/",
    search: locationProp.search || "",
    hash: locationProp.hash || "",
    state: locationProp.state != null ? locationProp.state : null,
    key: locationProp.key || "default"
  };
  let staticNavigator = getStatelessNavigator();
  return /* @__PURE__ */ React11.createElement(
    Router,
    {
      basename,
      children,
      location,
      navigationType: action,
      navigator: staticNavigator,
      static: true
    }
  );
}
function StaticRouterProvider({
  context,
  router,
  hydrate: hydrate2 = true,
  nonce
}) {
  invariant(
    router && context,
    "You must provide `router` and `context` to <StaticRouterProvider>"
  );
  let dataRouterContext = {
    router,
    navigator: getStatelessNavigator(),
    static: true,
    staticContext: context,
    basename: context.basename || "/"
  };
  let fetchersContext = /* @__PURE__ */ new Map();
  let hydrateScript = "";
  if (hydrate2 !== false) {
    let data2 = {
      loaderData: context.loaderData,
      actionData: context.actionData,
      errors: serializeErrors(context.errors)
    };
    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));
    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;
  }
  let { state } = dataRouterContext.router;
  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(
    Router,
    {
      basename: dataRouterContext.basename,
      location: state.location,
      navigationType: state.historyAction,
      navigator: dataRouterContext.navigator,
      static: dataRouterContext.static
    },
    /* @__PURE__ */ React11.createElement(
      DataRoutes2,
      {
        routes: router.routes,
        future: router.future,
        state
      }
    )
  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(
    "script",
    {
      suppressHydrationWarning: true,
      nonce,
      dangerouslySetInnerHTML: { __html: hydrateScript }
    }
  ) : null);
}
function DataRoutes2({
  routes,
  future,
  state
}) {
  return useRoutesImpl(routes, void 0, state, void 0, future);
}
function serializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (isRouteErrorResponse(val)) {
      serialized[key] = { ...val, __type: "RouteErrorResponse" };
    } else if (val instanceof Error) {
      serialized[key] = {
        message: val.message,
        __type: "Error",
        // If this is a subclass (i.e., ReferenceError), send up the type so we
        // can re-create the same type during hydration.
        ...val.name !== "Error" ? {
          __subType: val.name
        } : {}
      };
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
function getStatelessNavigator() {
  return {
    createHref,
    encodeLocation,
    push(to) {
      throw new Error(
        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`
      );
    },
    replace(to) {
      throw new Error(
        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`
      );
    },
    go(delta) {
      throw new Error(
        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`
      );
    },
    back() {
      throw new Error(
        `You cannot use navigator.back() on the server because it is a stateless environment.`
      );
    },
    forward() {
      throw new Error(
        `You cannot use navigator.forward() on the server because it is a stateless environment.`
      );
    }
  };
}
function createStaticHandler2(routes, opts) {
  return createStaticHandler(routes, {
    ...opts,
    mapRouteProperties
  });
}
function createStaticRouter(routes, context, opts = {}) {
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(
    routes,
    mapRouteProperties,
    void 0,
    manifest
  );
  let matches = context.matches.map((match) => {
    let route = manifest[match.route.id] || match.route;
    return {
      ...match,
      route
    };
  });
  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
  return {
    get basename() {
      return context.basename;
    },
    get future() {
      return {
        v8_middleware: false,
        ...opts?.future
      };
    },
    get state() {
      return {
        historyAction: "POP" /* Pop */,
        location: context.location,
        matches,
        loaderData: context.loaderData,
        actionData: context.actionData,
        errors: context.errors,
        initialized: true,
        navigation: IDLE_NAVIGATION,
        restoreScrollPosition: null,
        preventScrollReset: false,
        revalidation: "idle",
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
      };
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return void 0;
    },
    initialize() {
      throw msg("initialize");
    },
    subscribe() {
      throw msg("subscribe");
    },
    enableScrollRestoration() {
      throw msg("enableScrollRestoration");
    },
    navigate() {
      throw msg("navigate");
    },
    fetch() {
      throw msg("fetch");
    },
    revalidate() {
      throw msg("revalidate");
    },
    createHref,
    encodeLocation,
    getFetcher() {
      return IDLE_FETCHER;
    },
    deleteFetcher() {
      throw msg("deleteFetcher");
    },
    resetFetcher() {
      throw msg("resetFetcher");
    },
    dispose() {
      throw msg("dispose");
    },
    getBlocker() {
      return IDLE_BLOCKER;
    },
    deleteBlocker() {
      throw msg("deleteBlocker");
    },
    patchRoutes() {
      throw msg("patchRoutes");
    },
    _internalFetchControllers: /* @__PURE__ */ new Map(),
    _internalSetRoutes() {
      throw msg("_internalSetRoutes");
    },
    _internalSetStateDoNotUseOrYouWillBreakYourApp() {
      throw msg("_internalSetStateDoNotUseOrYouWillBreakYourApp");
    }
  };
}
function createHref(to) {
  return typeof to === "string" ? to : createPath(to);
}
function encodeLocation(to) {
  let href = typeof to === "string" ? to : createPath(to);
  href = href.replace(/ $/, "%20");
  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, "http://localhost");
  return {
    pathname: encoded.pathname,
    search: encoded.search,
    hash: encoded.hash
  };
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var ESCAPE_LOOKUP2 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function htmlEscape(str) {
  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);
}



;// ./src/index.js





var rootElement = document.getElementById('root');
var root = (0,client.createRoot)(rootElement);
root.render(/*#__PURE__*/react.createElement(react.StrictMode, null, /*#__PURE__*/react.createElement(BrowserRouter, null, /*#__PURE__*/react.createElement(app, null))));
})();

/******/ })()
;